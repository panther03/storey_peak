//
// Generated by Bluespec Compiler, version 2024.07 (build b4f31db)
//
// On Wed Jan  8 18:48:52 CST 2025
//
//
// Ports:
// Name                         I/O  size props
// RDY_putFromProc                O     1
// getToProc                      O   128
// RDY_getToProc                  O     1
// getToMem                       O   547 reg
// RDY_getToMem                   O     1 reg
// RDY_putFromMem                 O     1 reg
// RDY_invalidateLines            O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// putFromProc_e                  I    30
// putFromProc_passthrough        I     1
// putFromMem_e                   I   512 reg
// EN_putFromProc                 I     1
// EN_putFromMem                  I     1
// EN_invalidateLines             I     1
// EN_getToProc                   I     1
// EN_getToMem                    I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkICache(CLK,
		RST_N,

		putFromProc_e,
		putFromProc_passthrough,
		EN_putFromProc,
		RDY_putFromProc,

		EN_getToProc,
		getToProc,
		RDY_getToProc,

		EN_getToMem,
		getToMem,
		RDY_getToMem,

		putFromMem_e,
		EN_putFromMem,
		RDY_putFromMem,

		EN_invalidateLines,
		RDY_invalidateLines);
  input  CLK;
  input  RST_N;

  // action method putFromProc
  input  [29 : 0] putFromProc_e;
  input  putFromProc_passthrough;
  input  EN_putFromProc;
  output RDY_putFromProc;

  // actionvalue method getToProc
  input  EN_getToProc;
  output [127 : 0] getToProc;
  output RDY_getToProc;

  // actionvalue method getToMem
  input  EN_getToMem;
  output [546 : 0] getToMem;
  output RDY_getToMem;

  // action method putFromMem
  input  [511 : 0] putFromMem_e;
  input  EN_putFromMem;
  output RDY_putFromMem;

  // action method invalidateLines
  input  EN_invalidateLines;
  output RDY_invalidateLines;

  // signals for module outputs
  wire [546 : 0] getToMem;
  wire [127 : 0] getToProc;
  wire RDY_getToMem,
       RDY_getToProc,
       RDY_invalidateLines,
       RDY_putFromMem,
       RDY_putFromProc;

  // inlined wires
  reg [128 : 0] hitQ_rv_port0__write_1;
  wire [128 : 0] hitQ_rv_port1__read, hitQ_rv_port2__read;
  wire [31 : 0] currReqQ_rv_port1__read,
		currReqQ_rv_port1__write_1,
		currReqQ_rv_port2__read;
  wire [1 : 0] cau_dataStore_serverAdapter_s1_1_wget,
	       cau_dataStore_serverAdapter_writeWithResp_wget,
	       cau_dirtyStore_serverAdapter_s1_1_wget,
	       cau_dirtyStore_serverAdapter_writeWithResp_wget;
  wire cau_dataStore_serverAdapter_cnt_1_whas,
       cau_dataStore_serverAdapter_outData_enqw_whas,
       cau_dataStore_serverAdapter_writeWithResp_whas,
       cau_dirtyStore_serverAdapter_cnt_1_whas,
       cau_dirtyStore_serverAdapter_outData_enqw_whas,
       cau_dirtyStore_serverAdapter_writeWithResp_whas,
       currReqQ_rv_EN_port0__write,
       hitQ_rv_EN_port0__write;

  // register cau_dataStore_serverAdapter_cnt
  reg [2 : 0] cau_dataStore_serverAdapter_cnt;
  wire [2 : 0] cau_dataStore_serverAdapter_cnt_D_IN;
  wire cau_dataStore_serverAdapter_cnt_EN;

  // register cau_dataStore_serverAdapter_s1
  reg [1 : 0] cau_dataStore_serverAdapter_s1;
  wire [1 : 0] cau_dataStore_serverAdapter_s1_D_IN;
  wire cau_dataStore_serverAdapter_s1_EN;

  // register cau_dataStore_serverAdapter_s2
  reg [1 : 0] cau_dataStore_serverAdapter_s2;
  wire [1 : 0] cau_dataStore_serverAdapter_s2_D_IN;
  wire cau_dataStore_serverAdapter_s2_EN;

  // register cau_dirtyStore_serverAdapter_cnt
  reg [2 : 0] cau_dirtyStore_serverAdapter_cnt;
  wire [2 : 0] cau_dirtyStore_serverAdapter_cnt_D_IN;
  wire cau_dirtyStore_serverAdapter_cnt_EN;

  // register cau_dirtyStore_serverAdapter_s1
  reg [1 : 0] cau_dirtyStore_serverAdapter_s1;
  wire [1 : 0] cau_dirtyStore_serverAdapter_s1_D_IN;
  wire cau_dirtyStore_serverAdapter_s1_EN;

  // register cau_dirtyStore_serverAdapter_s2
  reg [1 : 0] cau_dirtyStore_serverAdapter_s2;
  wire [1 : 0] cau_dirtyStore_serverAdapter_s2_D_IN;
  wire cau_dirtyStore_serverAdapter_s2_EN;

  // register cau_tagStore_0
  reg [18 : 0] cau_tagStore_0;
  wire [18 : 0] cau_tagStore_0_D_IN;
  wire cau_tagStore_0_EN;

  // register cau_tagStore_1
  reg [18 : 0] cau_tagStore_1;
  wire [18 : 0] cau_tagStore_1_D_IN;
  wire cau_tagStore_1_EN;

  // register cau_tagStore_10
  reg [18 : 0] cau_tagStore_10;
  wire [18 : 0] cau_tagStore_10_D_IN;
  wire cau_tagStore_10_EN;

  // register cau_tagStore_100
  reg [18 : 0] cau_tagStore_100;
  wire [18 : 0] cau_tagStore_100_D_IN;
  wire cau_tagStore_100_EN;

  // register cau_tagStore_101
  reg [18 : 0] cau_tagStore_101;
  wire [18 : 0] cau_tagStore_101_D_IN;
  wire cau_tagStore_101_EN;

  // register cau_tagStore_102
  reg [18 : 0] cau_tagStore_102;
  wire [18 : 0] cau_tagStore_102_D_IN;
  wire cau_tagStore_102_EN;

  // register cau_tagStore_103
  reg [18 : 0] cau_tagStore_103;
  wire [18 : 0] cau_tagStore_103_D_IN;
  wire cau_tagStore_103_EN;

  // register cau_tagStore_104
  reg [18 : 0] cau_tagStore_104;
  wire [18 : 0] cau_tagStore_104_D_IN;
  wire cau_tagStore_104_EN;

  // register cau_tagStore_105
  reg [18 : 0] cau_tagStore_105;
  wire [18 : 0] cau_tagStore_105_D_IN;
  wire cau_tagStore_105_EN;

  // register cau_tagStore_106
  reg [18 : 0] cau_tagStore_106;
  wire [18 : 0] cau_tagStore_106_D_IN;
  wire cau_tagStore_106_EN;

  // register cau_tagStore_107
  reg [18 : 0] cau_tagStore_107;
  wire [18 : 0] cau_tagStore_107_D_IN;
  wire cau_tagStore_107_EN;

  // register cau_tagStore_108
  reg [18 : 0] cau_tagStore_108;
  wire [18 : 0] cau_tagStore_108_D_IN;
  wire cau_tagStore_108_EN;

  // register cau_tagStore_109
  reg [18 : 0] cau_tagStore_109;
  wire [18 : 0] cau_tagStore_109_D_IN;
  wire cau_tagStore_109_EN;

  // register cau_tagStore_11
  reg [18 : 0] cau_tagStore_11;
  wire [18 : 0] cau_tagStore_11_D_IN;
  wire cau_tagStore_11_EN;

  // register cau_tagStore_110
  reg [18 : 0] cau_tagStore_110;
  wire [18 : 0] cau_tagStore_110_D_IN;
  wire cau_tagStore_110_EN;

  // register cau_tagStore_111
  reg [18 : 0] cau_tagStore_111;
  wire [18 : 0] cau_tagStore_111_D_IN;
  wire cau_tagStore_111_EN;

  // register cau_tagStore_112
  reg [18 : 0] cau_tagStore_112;
  wire [18 : 0] cau_tagStore_112_D_IN;
  wire cau_tagStore_112_EN;

  // register cau_tagStore_113
  reg [18 : 0] cau_tagStore_113;
  wire [18 : 0] cau_tagStore_113_D_IN;
  wire cau_tagStore_113_EN;

  // register cau_tagStore_114
  reg [18 : 0] cau_tagStore_114;
  wire [18 : 0] cau_tagStore_114_D_IN;
  wire cau_tagStore_114_EN;

  // register cau_tagStore_115
  reg [18 : 0] cau_tagStore_115;
  wire [18 : 0] cau_tagStore_115_D_IN;
  wire cau_tagStore_115_EN;

  // register cau_tagStore_116
  reg [18 : 0] cau_tagStore_116;
  wire [18 : 0] cau_tagStore_116_D_IN;
  wire cau_tagStore_116_EN;

  // register cau_tagStore_117
  reg [18 : 0] cau_tagStore_117;
  wire [18 : 0] cau_tagStore_117_D_IN;
  wire cau_tagStore_117_EN;

  // register cau_tagStore_118
  reg [18 : 0] cau_tagStore_118;
  wire [18 : 0] cau_tagStore_118_D_IN;
  wire cau_tagStore_118_EN;

  // register cau_tagStore_119
  reg [18 : 0] cau_tagStore_119;
  wire [18 : 0] cau_tagStore_119_D_IN;
  wire cau_tagStore_119_EN;

  // register cau_tagStore_12
  reg [18 : 0] cau_tagStore_12;
  wire [18 : 0] cau_tagStore_12_D_IN;
  wire cau_tagStore_12_EN;

  // register cau_tagStore_120
  reg [18 : 0] cau_tagStore_120;
  wire [18 : 0] cau_tagStore_120_D_IN;
  wire cau_tagStore_120_EN;

  // register cau_tagStore_121
  reg [18 : 0] cau_tagStore_121;
  wire [18 : 0] cau_tagStore_121_D_IN;
  wire cau_tagStore_121_EN;

  // register cau_tagStore_122
  reg [18 : 0] cau_tagStore_122;
  wire [18 : 0] cau_tagStore_122_D_IN;
  wire cau_tagStore_122_EN;

  // register cau_tagStore_123
  reg [18 : 0] cau_tagStore_123;
  wire [18 : 0] cau_tagStore_123_D_IN;
  wire cau_tagStore_123_EN;

  // register cau_tagStore_124
  reg [18 : 0] cau_tagStore_124;
  wire [18 : 0] cau_tagStore_124_D_IN;
  wire cau_tagStore_124_EN;

  // register cau_tagStore_125
  reg [18 : 0] cau_tagStore_125;
  wire [18 : 0] cau_tagStore_125_D_IN;
  wire cau_tagStore_125_EN;

  // register cau_tagStore_126
  reg [18 : 0] cau_tagStore_126;
  wire [18 : 0] cau_tagStore_126_D_IN;
  wire cau_tagStore_126_EN;

  // register cau_tagStore_127
  reg [18 : 0] cau_tagStore_127;
  wire [18 : 0] cau_tagStore_127_D_IN;
  wire cau_tagStore_127_EN;

  // register cau_tagStore_13
  reg [18 : 0] cau_tagStore_13;
  wire [18 : 0] cau_tagStore_13_D_IN;
  wire cau_tagStore_13_EN;

  // register cau_tagStore_14
  reg [18 : 0] cau_tagStore_14;
  wire [18 : 0] cau_tagStore_14_D_IN;
  wire cau_tagStore_14_EN;

  // register cau_tagStore_15
  reg [18 : 0] cau_tagStore_15;
  wire [18 : 0] cau_tagStore_15_D_IN;
  wire cau_tagStore_15_EN;

  // register cau_tagStore_16
  reg [18 : 0] cau_tagStore_16;
  wire [18 : 0] cau_tagStore_16_D_IN;
  wire cau_tagStore_16_EN;

  // register cau_tagStore_17
  reg [18 : 0] cau_tagStore_17;
  wire [18 : 0] cau_tagStore_17_D_IN;
  wire cau_tagStore_17_EN;

  // register cau_tagStore_18
  reg [18 : 0] cau_tagStore_18;
  wire [18 : 0] cau_tagStore_18_D_IN;
  wire cau_tagStore_18_EN;

  // register cau_tagStore_19
  reg [18 : 0] cau_tagStore_19;
  wire [18 : 0] cau_tagStore_19_D_IN;
  wire cau_tagStore_19_EN;

  // register cau_tagStore_2
  reg [18 : 0] cau_tagStore_2;
  wire [18 : 0] cau_tagStore_2_D_IN;
  wire cau_tagStore_2_EN;

  // register cau_tagStore_20
  reg [18 : 0] cau_tagStore_20;
  wire [18 : 0] cau_tagStore_20_D_IN;
  wire cau_tagStore_20_EN;

  // register cau_tagStore_21
  reg [18 : 0] cau_tagStore_21;
  wire [18 : 0] cau_tagStore_21_D_IN;
  wire cau_tagStore_21_EN;

  // register cau_tagStore_22
  reg [18 : 0] cau_tagStore_22;
  wire [18 : 0] cau_tagStore_22_D_IN;
  wire cau_tagStore_22_EN;

  // register cau_tagStore_23
  reg [18 : 0] cau_tagStore_23;
  wire [18 : 0] cau_tagStore_23_D_IN;
  wire cau_tagStore_23_EN;

  // register cau_tagStore_24
  reg [18 : 0] cau_tagStore_24;
  wire [18 : 0] cau_tagStore_24_D_IN;
  wire cau_tagStore_24_EN;

  // register cau_tagStore_25
  reg [18 : 0] cau_tagStore_25;
  wire [18 : 0] cau_tagStore_25_D_IN;
  wire cau_tagStore_25_EN;

  // register cau_tagStore_26
  reg [18 : 0] cau_tagStore_26;
  wire [18 : 0] cau_tagStore_26_D_IN;
  wire cau_tagStore_26_EN;

  // register cau_tagStore_27
  reg [18 : 0] cau_tagStore_27;
  wire [18 : 0] cau_tagStore_27_D_IN;
  wire cau_tagStore_27_EN;

  // register cau_tagStore_28
  reg [18 : 0] cau_tagStore_28;
  wire [18 : 0] cau_tagStore_28_D_IN;
  wire cau_tagStore_28_EN;

  // register cau_tagStore_29
  reg [18 : 0] cau_tagStore_29;
  wire [18 : 0] cau_tagStore_29_D_IN;
  wire cau_tagStore_29_EN;

  // register cau_tagStore_3
  reg [18 : 0] cau_tagStore_3;
  wire [18 : 0] cau_tagStore_3_D_IN;
  wire cau_tagStore_3_EN;

  // register cau_tagStore_30
  reg [18 : 0] cau_tagStore_30;
  wire [18 : 0] cau_tagStore_30_D_IN;
  wire cau_tagStore_30_EN;

  // register cau_tagStore_31
  reg [18 : 0] cau_tagStore_31;
  wire [18 : 0] cau_tagStore_31_D_IN;
  wire cau_tagStore_31_EN;

  // register cau_tagStore_32
  reg [18 : 0] cau_tagStore_32;
  wire [18 : 0] cau_tagStore_32_D_IN;
  wire cau_tagStore_32_EN;

  // register cau_tagStore_33
  reg [18 : 0] cau_tagStore_33;
  wire [18 : 0] cau_tagStore_33_D_IN;
  wire cau_tagStore_33_EN;

  // register cau_tagStore_34
  reg [18 : 0] cau_tagStore_34;
  wire [18 : 0] cau_tagStore_34_D_IN;
  wire cau_tagStore_34_EN;

  // register cau_tagStore_35
  reg [18 : 0] cau_tagStore_35;
  wire [18 : 0] cau_tagStore_35_D_IN;
  wire cau_tagStore_35_EN;

  // register cau_tagStore_36
  reg [18 : 0] cau_tagStore_36;
  wire [18 : 0] cau_tagStore_36_D_IN;
  wire cau_tagStore_36_EN;

  // register cau_tagStore_37
  reg [18 : 0] cau_tagStore_37;
  wire [18 : 0] cau_tagStore_37_D_IN;
  wire cau_tagStore_37_EN;

  // register cau_tagStore_38
  reg [18 : 0] cau_tagStore_38;
  wire [18 : 0] cau_tagStore_38_D_IN;
  wire cau_tagStore_38_EN;

  // register cau_tagStore_39
  reg [18 : 0] cau_tagStore_39;
  wire [18 : 0] cau_tagStore_39_D_IN;
  wire cau_tagStore_39_EN;

  // register cau_tagStore_4
  reg [18 : 0] cau_tagStore_4;
  wire [18 : 0] cau_tagStore_4_D_IN;
  wire cau_tagStore_4_EN;

  // register cau_tagStore_40
  reg [18 : 0] cau_tagStore_40;
  wire [18 : 0] cau_tagStore_40_D_IN;
  wire cau_tagStore_40_EN;

  // register cau_tagStore_41
  reg [18 : 0] cau_tagStore_41;
  wire [18 : 0] cau_tagStore_41_D_IN;
  wire cau_tagStore_41_EN;

  // register cau_tagStore_42
  reg [18 : 0] cau_tagStore_42;
  wire [18 : 0] cau_tagStore_42_D_IN;
  wire cau_tagStore_42_EN;

  // register cau_tagStore_43
  reg [18 : 0] cau_tagStore_43;
  wire [18 : 0] cau_tagStore_43_D_IN;
  wire cau_tagStore_43_EN;

  // register cau_tagStore_44
  reg [18 : 0] cau_tagStore_44;
  wire [18 : 0] cau_tagStore_44_D_IN;
  wire cau_tagStore_44_EN;

  // register cau_tagStore_45
  reg [18 : 0] cau_tagStore_45;
  wire [18 : 0] cau_tagStore_45_D_IN;
  wire cau_tagStore_45_EN;

  // register cau_tagStore_46
  reg [18 : 0] cau_tagStore_46;
  wire [18 : 0] cau_tagStore_46_D_IN;
  wire cau_tagStore_46_EN;

  // register cau_tagStore_47
  reg [18 : 0] cau_tagStore_47;
  wire [18 : 0] cau_tagStore_47_D_IN;
  wire cau_tagStore_47_EN;

  // register cau_tagStore_48
  reg [18 : 0] cau_tagStore_48;
  wire [18 : 0] cau_tagStore_48_D_IN;
  wire cau_tagStore_48_EN;

  // register cau_tagStore_49
  reg [18 : 0] cau_tagStore_49;
  wire [18 : 0] cau_tagStore_49_D_IN;
  wire cau_tagStore_49_EN;

  // register cau_tagStore_5
  reg [18 : 0] cau_tagStore_5;
  wire [18 : 0] cau_tagStore_5_D_IN;
  wire cau_tagStore_5_EN;

  // register cau_tagStore_50
  reg [18 : 0] cau_tagStore_50;
  wire [18 : 0] cau_tagStore_50_D_IN;
  wire cau_tagStore_50_EN;

  // register cau_tagStore_51
  reg [18 : 0] cau_tagStore_51;
  wire [18 : 0] cau_tagStore_51_D_IN;
  wire cau_tagStore_51_EN;

  // register cau_tagStore_52
  reg [18 : 0] cau_tagStore_52;
  wire [18 : 0] cau_tagStore_52_D_IN;
  wire cau_tagStore_52_EN;

  // register cau_tagStore_53
  reg [18 : 0] cau_tagStore_53;
  wire [18 : 0] cau_tagStore_53_D_IN;
  wire cau_tagStore_53_EN;

  // register cau_tagStore_54
  reg [18 : 0] cau_tagStore_54;
  wire [18 : 0] cau_tagStore_54_D_IN;
  wire cau_tagStore_54_EN;

  // register cau_tagStore_55
  reg [18 : 0] cau_tagStore_55;
  wire [18 : 0] cau_tagStore_55_D_IN;
  wire cau_tagStore_55_EN;

  // register cau_tagStore_56
  reg [18 : 0] cau_tagStore_56;
  wire [18 : 0] cau_tagStore_56_D_IN;
  wire cau_tagStore_56_EN;

  // register cau_tagStore_57
  reg [18 : 0] cau_tagStore_57;
  wire [18 : 0] cau_tagStore_57_D_IN;
  wire cau_tagStore_57_EN;

  // register cau_tagStore_58
  reg [18 : 0] cau_tagStore_58;
  wire [18 : 0] cau_tagStore_58_D_IN;
  wire cau_tagStore_58_EN;

  // register cau_tagStore_59
  reg [18 : 0] cau_tagStore_59;
  wire [18 : 0] cau_tagStore_59_D_IN;
  wire cau_tagStore_59_EN;

  // register cau_tagStore_6
  reg [18 : 0] cau_tagStore_6;
  wire [18 : 0] cau_tagStore_6_D_IN;
  wire cau_tagStore_6_EN;

  // register cau_tagStore_60
  reg [18 : 0] cau_tagStore_60;
  wire [18 : 0] cau_tagStore_60_D_IN;
  wire cau_tagStore_60_EN;

  // register cau_tagStore_61
  reg [18 : 0] cau_tagStore_61;
  wire [18 : 0] cau_tagStore_61_D_IN;
  wire cau_tagStore_61_EN;

  // register cau_tagStore_62
  reg [18 : 0] cau_tagStore_62;
  wire [18 : 0] cau_tagStore_62_D_IN;
  wire cau_tagStore_62_EN;

  // register cau_tagStore_63
  reg [18 : 0] cau_tagStore_63;
  wire [18 : 0] cau_tagStore_63_D_IN;
  wire cau_tagStore_63_EN;

  // register cau_tagStore_64
  reg [18 : 0] cau_tagStore_64;
  wire [18 : 0] cau_tagStore_64_D_IN;
  wire cau_tagStore_64_EN;

  // register cau_tagStore_65
  reg [18 : 0] cau_tagStore_65;
  wire [18 : 0] cau_tagStore_65_D_IN;
  wire cau_tagStore_65_EN;

  // register cau_tagStore_66
  reg [18 : 0] cau_tagStore_66;
  wire [18 : 0] cau_tagStore_66_D_IN;
  wire cau_tagStore_66_EN;

  // register cau_tagStore_67
  reg [18 : 0] cau_tagStore_67;
  wire [18 : 0] cau_tagStore_67_D_IN;
  wire cau_tagStore_67_EN;

  // register cau_tagStore_68
  reg [18 : 0] cau_tagStore_68;
  wire [18 : 0] cau_tagStore_68_D_IN;
  wire cau_tagStore_68_EN;

  // register cau_tagStore_69
  reg [18 : 0] cau_tagStore_69;
  wire [18 : 0] cau_tagStore_69_D_IN;
  wire cau_tagStore_69_EN;

  // register cau_tagStore_7
  reg [18 : 0] cau_tagStore_7;
  wire [18 : 0] cau_tagStore_7_D_IN;
  wire cau_tagStore_7_EN;

  // register cau_tagStore_70
  reg [18 : 0] cau_tagStore_70;
  wire [18 : 0] cau_tagStore_70_D_IN;
  wire cau_tagStore_70_EN;

  // register cau_tagStore_71
  reg [18 : 0] cau_tagStore_71;
  wire [18 : 0] cau_tagStore_71_D_IN;
  wire cau_tagStore_71_EN;

  // register cau_tagStore_72
  reg [18 : 0] cau_tagStore_72;
  wire [18 : 0] cau_tagStore_72_D_IN;
  wire cau_tagStore_72_EN;

  // register cau_tagStore_73
  reg [18 : 0] cau_tagStore_73;
  wire [18 : 0] cau_tagStore_73_D_IN;
  wire cau_tagStore_73_EN;

  // register cau_tagStore_74
  reg [18 : 0] cau_tagStore_74;
  wire [18 : 0] cau_tagStore_74_D_IN;
  wire cau_tagStore_74_EN;

  // register cau_tagStore_75
  reg [18 : 0] cau_tagStore_75;
  wire [18 : 0] cau_tagStore_75_D_IN;
  wire cau_tagStore_75_EN;

  // register cau_tagStore_76
  reg [18 : 0] cau_tagStore_76;
  wire [18 : 0] cau_tagStore_76_D_IN;
  wire cau_tagStore_76_EN;

  // register cau_tagStore_77
  reg [18 : 0] cau_tagStore_77;
  wire [18 : 0] cau_tagStore_77_D_IN;
  wire cau_tagStore_77_EN;

  // register cau_tagStore_78
  reg [18 : 0] cau_tagStore_78;
  wire [18 : 0] cau_tagStore_78_D_IN;
  wire cau_tagStore_78_EN;

  // register cau_tagStore_79
  reg [18 : 0] cau_tagStore_79;
  wire [18 : 0] cau_tagStore_79_D_IN;
  wire cau_tagStore_79_EN;

  // register cau_tagStore_8
  reg [18 : 0] cau_tagStore_8;
  wire [18 : 0] cau_tagStore_8_D_IN;
  wire cau_tagStore_8_EN;

  // register cau_tagStore_80
  reg [18 : 0] cau_tagStore_80;
  wire [18 : 0] cau_tagStore_80_D_IN;
  wire cau_tagStore_80_EN;

  // register cau_tagStore_81
  reg [18 : 0] cau_tagStore_81;
  wire [18 : 0] cau_tagStore_81_D_IN;
  wire cau_tagStore_81_EN;

  // register cau_tagStore_82
  reg [18 : 0] cau_tagStore_82;
  wire [18 : 0] cau_tagStore_82_D_IN;
  wire cau_tagStore_82_EN;

  // register cau_tagStore_83
  reg [18 : 0] cau_tagStore_83;
  wire [18 : 0] cau_tagStore_83_D_IN;
  wire cau_tagStore_83_EN;

  // register cau_tagStore_84
  reg [18 : 0] cau_tagStore_84;
  wire [18 : 0] cau_tagStore_84_D_IN;
  wire cau_tagStore_84_EN;

  // register cau_tagStore_85
  reg [18 : 0] cau_tagStore_85;
  wire [18 : 0] cau_tagStore_85_D_IN;
  wire cau_tagStore_85_EN;

  // register cau_tagStore_86
  reg [18 : 0] cau_tagStore_86;
  wire [18 : 0] cau_tagStore_86_D_IN;
  wire cau_tagStore_86_EN;

  // register cau_tagStore_87
  reg [18 : 0] cau_tagStore_87;
  wire [18 : 0] cau_tagStore_87_D_IN;
  wire cau_tagStore_87_EN;

  // register cau_tagStore_88
  reg [18 : 0] cau_tagStore_88;
  wire [18 : 0] cau_tagStore_88_D_IN;
  wire cau_tagStore_88_EN;

  // register cau_tagStore_89
  reg [18 : 0] cau_tagStore_89;
  wire [18 : 0] cau_tagStore_89_D_IN;
  wire cau_tagStore_89_EN;

  // register cau_tagStore_9
  reg [18 : 0] cau_tagStore_9;
  wire [18 : 0] cau_tagStore_9_D_IN;
  wire cau_tagStore_9_EN;

  // register cau_tagStore_90
  reg [18 : 0] cau_tagStore_90;
  wire [18 : 0] cau_tagStore_90_D_IN;
  wire cau_tagStore_90_EN;

  // register cau_tagStore_91
  reg [18 : 0] cau_tagStore_91;
  wire [18 : 0] cau_tagStore_91_D_IN;
  wire cau_tagStore_91_EN;

  // register cau_tagStore_92
  reg [18 : 0] cau_tagStore_92;
  wire [18 : 0] cau_tagStore_92_D_IN;
  wire cau_tagStore_92_EN;

  // register cau_tagStore_93
  reg [18 : 0] cau_tagStore_93;
  wire [18 : 0] cau_tagStore_93_D_IN;
  wire cau_tagStore_93_EN;

  // register cau_tagStore_94
  reg [18 : 0] cau_tagStore_94;
  wire [18 : 0] cau_tagStore_94_D_IN;
  wire cau_tagStore_94_EN;

  // register cau_tagStore_95
  reg [18 : 0] cau_tagStore_95;
  wire [18 : 0] cau_tagStore_95_D_IN;
  wire cau_tagStore_95_EN;

  // register cau_tagStore_96
  reg [18 : 0] cau_tagStore_96;
  wire [18 : 0] cau_tagStore_96_D_IN;
  wire cau_tagStore_96_EN;

  // register cau_tagStore_97
  reg [18 : 0] cau_tagStore_97;
  wire [18 : 0] cau_tagStore_97_D_IN;
  wire cau_tagStore_97_EN;

  // register cau_tagStore_98
  reg [18 : 0] cau_tagStore_98;
  wire [18 : 0] cau_tagStore_98_D_IN;
  wire cau_tagStore_98_EN;

  // register cau_tagStore_99
  reg [18 : 0] cau_tagStore_99;
  wire [18 : 0] cau_tagStore_99_D_IN;
  wire cau_tagStore_99_EN;

  // register cau_validStore
  reg [127 : 0] cau_validStore;
  wire [127 : 0] cau_validStore_D_IN;
  wire cau_validStore_EN;

  // register currReqQ_rv
  reg [31 : 0] currReqQ_rv;
  wire [31 : 0] currReqQ_rv_D_IN;
  wire currReqQ_rv_EN;

  // register cyc
  reg [31 : 0] cyc;
  wire [31 : 0] cyc_D_IN;
  wire cyc_EN;

  // register doInvalidate
  reg doInvalidate;
  wire doInvalidate_D_IN, doInvalidate_EN;

  // register doPassthrough
  reg doPassthrough;
  wire doPassthrough_D_IN, doPassthrough_EN;

  // register hitQ_rv
  reg [128 : 0] hitQ_rv;
  wire [128 : 0] hitQ_rv_D_IN;
  wire hitQ_rv_EN;

  // register state
  reg [1 : 0] state;
  reg [1 : 0] state_D_IN;
  wire state_EN;

  // ports of submodule cau_dataStore_memory
  wire [511 : 0] cau_dataStore_memory_DI, cau_dataStore_memory_DO;
  wire [6 : 0] cau_dataStore_memory_ADDR;
  wire cau_dataStore_memory_EN, cau_dataStore_memory_WE;

  // ports of submodule cau_dataStore_serverAdapter_outData_beforeDeq
  wire cau_dataStore_serverAdapter_outData_beforeDeq_D_IN,
       cau_dataStore_serverAdapter_outData_beforeDeq_EN,
       cau_dataStore_serverAdapter_outData_beforeDeq_Q_OUT;

  // ports of submodule cau_dataStore_serverAdapter_outData_beforeEnq
  wire cau_dataStore_serverAdapter_outData_beforeEnq_D_IN,
       cau_dataStore_serverAdapter_outData_beforeEnq_EN,
       cau_dataStore_serverAdapter_outData_beforeEnq_Q_OUT;

  // ports of submodule cau_dataStore_serverAdapter_outData_ff
  wire [511 : 0] cau_dataStore_serverAdapter_outData_ff_D_IN,
		 cau_dataStore_serverAdapter_outData_ff_D_OUT;
  wire cau_dataStore_serverAdapter_outData_ff_CLR,
       cau_dataStore_serverAdapter_outData_ff_DEQ,
       cau_dataStore_serverAdapter_outData_ff_EMPTY_N,
       cau_dataStore_serverAdapter_outData_ff_ENQ,
       cau_dataStore_serverAdapter_outData_ff_FULL_N;

  // ports of submodule cau_dirtyStore_memory
  wire [6 : 0] cau_dirtyStore_memory_ADDR;
  wire cau_dirtyStore_memory_DI,
       cau_dirtyStore_memory_DO,
       cau_dirtyStore_memory_EN,
       cau_dirtyStore_memory_WE;

  // ports of submodule cau_dirtyStore_serverAdapter_outData_beforeDeq
  wire cau_dirtyStore_serverAdapter_outData_beforeDeq_D_IN,
       cau_dirtyStore_serverAdapter_outData_beforeDeq_EN,
       cau_dirtyStore_serverAdapter_outData_beforeDeq_Q_OUT;

  // ports of submodule cau_dirtyStore_serverAdapter_outData_beforeEnq
  wire cau_dirtyStore_serverAdapter_outData_beforeEnq_D_IN,
       cau_dirtyStore_serverAdapter_outData_beforeEnq_EN,
       cau_dirtyStore_serverAdapter_outData_beforeEnq_Q_OUT;

  // ports of submodule cau_dirtyStore_serverAdapter_outData_ff
  wire cau_dirtyStore_serverAdapter_outData_ff_CLR,
       cau_dirtyStore_serverAdapter_outData_ff_DEQ,
       cau_dirtyStore_serverAdapter_outData_ff_D_IN,
       cau_dirtyStore_serverAdapter_outData_ff_D_OUT,
       cau_dirtyStore_serverAdapter_outData_ff_EMPTY_N,
       cau_dirtyStore_serverAdapter_outData_ff_ENQ,
       cau_dirtyStore_serverAdapter_outData_ff_FULL_N;

  // ports of submodule cau_tagFifo
  reg [18 : 0] cau_tagFifo_D_IN;
  wire [18 : 0] cau_tagFifo_D_OUT;
  wire cau_tagFifo_CLR,
       cau_tagFifo_DEQ,
       cau_tagFifo_EMPTY_N,
       cau_tagFifo_ENQ,
       cau_tagFifo_FULL_N;

  // ports of submodule lineReqQ
  reg [546 : 0] lineReqQ_D_IN;
  wire [546 : 0] lineReqQ_D_OUT;
  wire lineReqQ_CLR,
       lineReqQ_DEQ,
       lineReqQ_EMPTY_N,
       lineReqQ_ENQ,
       lineReqQ_FULL_N;

  // ports of submodule lineRespQ
  wire [511 : 0] lineRespQ_D_IN, lineRespQ_D_OUT;
  wire lineRespQ_CLR,
       lineRespQ_DEQ,
       lineRespQ_EMPTY_N,
       lineRespQ_ENQ,
       lineRespQ_FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_putFromProc,
       WILL_FIRE_RL_handleBusPassthrough,
       WILL_FIRE_RL_handleCAUResponse,
       WILL_FIRE_RL_handleDramResponse,
       WILL_FIRE_RL_handleWriteback,
       WILL_FIRE_RL_startPassthrough;

  // inputs to muxes for submodule ports
  wire [546 : 0] MUX_lineReqQ_enq_1__VAL_1,
		 MUX_lineReqQ_enq_1__VAL_2,
		 MUX_lineReqQ_enq_1__VAL_3;
  wire [128 : 0] MUX_hitQ_rv_port0__write_1__VAL_1,
		 MUX_hitQ_rv_port0__write_1__VAL_2,
		 MUX_hitQ_rv_port0__write_1__VAL_3;
  wire [127 : 0] MUX_cau_validStore_write_1__VAL_1;
  wire [1 : 0] MUX_state_write_1__VAL_1;
  wire MUX_cau_dataStore_memory_put_1__SEL_1,
       MUX_cau_validStore_write_1__SEL_2,
       MUX_currReqQ_rv_port0__write_1__SEL_1,
       MUX_doPassthrough_write_1__SEL_1,
       MUX_lineReqQ_enq_1__SEL_1,
       MUX_state_write_1__SEL_2;

  // remaining internal signals
  reg [127 : 0] CASE_currReqQ_rv_BITS_4_TO_3_0_IF_cau_dataStor_ETC__q2,
		CASE_currReqQ_rv_BITS_4_TO_3_0_lineRespQD_OUT_ETC__q1;
  reg CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3;
  wire [511 : 0] IF_cau_dataStore_serverAdapter_outData_ff_i_no_ETC___d158;
  wire [29 : 0] x_addr__h38212;
  wire [18 : 0] tag__h61454;
  wire [2 : 0] cau_dataStore_serverAdapter_cnt_6_PLUS_IF_cau__ETC___d22,
	       cau_dirtyStore_serverAdapter_cnt_8_PLUS_IF_cau_ETC___d74;
  wire IF_cau_dirtyStore_serverAdapter_outData_ff_i_n_ETC___d145,
       IF_cau_dirtyStore_serverAdapter_outData_ff_i_n_ETC___d169,
       IF_currReqQ_rv_port0__read__12_BIT_0_38_THEN_c_ETC___d148,
       NOT_putFromProc_passthrough_44_AND_SEL_ARR_cau_ETC___d781,
       cau_dataStore_serverAdapter_cnt_6_SLT_3___d180,
       cau_dataStore_serverAdapter_outData_ff_i_notEm_ETC___d151,
       cau_dirtyStore_serverAdapter_cnt_8_SLT_3___d179;

  // action method putFromProc
  assign RDY_putFromProc =
	     CAN_FIRE_putFromProc && !WILL_FIRE_RL_handleDramResponse ;
  assign CAN_FIRE_putFromProc =
	     !doPassthrough && !currReqQ_rv_port1__read[31] &&
	     cau_dirtyStore_serverAdapter_cnt_8_SLT_3___d179 &&
	     cau_dataStore_serverAdapter_cnt_6_SLT_3___d180 &&
	     cau_tagFifo_FULL_N ;

  // actionvalue method getToProc
  assign getToProc = hitQ_rv_port1__read[127:0] ;
  assign RDY_getToProc = hitQ_rv_port1__read[128] ;

  // actionvalue method getToMem
  assign getToMem = lineReqQ_D_OUT ;
  assign RDY_getToMem = lineReqQ_EMPTY_N ;

  // action method putFromMem
  assign RDY_putFromMem = lineRespQ_FULL_N ;

  // action method invalidateLines
  assign RDY_invalidateLines = !doInvalidate ;

  // submodule cau_dataStore_memory
  BRAM1 #(.PIPELINED(1'd1),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd512),
	  .MEMSIZE(8'd128)) cau_dataStore_memory(.CLK(CLK),
						 .ADDR(cau_dataStore_memory_ADDR),
						 .DI(cau_dataStore_memory_DI),
						 .WE(cau_dataStore_memory_WE),
						 .EN(cau_dataStore_memory_EN),
						 .DO(cau_dataStore_memory_DO));

  // submodule cau_dataStore_serverAdapter_outData_beforeDeq
  RevertReg #(.width(32'd1),
	      .init(1'd1)) cau_dataStore_serverAdapter_outData_beforeDeq(.CLK(CLK),
									 .D_IN(cau_dataStore_serverAdapter_outData_beforeDeq_D_IN),
									 .EN(cau_dataStore_serverAdapter_outData_beforeDeq_EN),
									 .Q_OUT(cau_dataStore_serverAdapter_outData_beforeDeq_Q_OUT));

  // submodule cau_dataStore_serverAdapter_outData_beforeEnq
  RevertReg #(.width(32'd1),
	      .init(1'd1)) cau_dataStore_serverAdapter_outData_beforeEnq(.CLK(CLK),
									 .D_IN(cau_dataStore_serverAdapter_outData_beforeEnq_D_IN),
									 .EN(cau_dataStore_serverAdapter_outData_beforeEnq_EN),
									 .Q_OUT(cau_dataStore_serverAdapter_outData_beforeEnq_Q_OUT));

  // submodule cau_dataStore_serverAdapter_outData_ff
  SizedFIFO #(.p1width(32'd512),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd0)) cau_dataStore_serverAdapter_outData_ff(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(cau_dataStore_serverAdapter_outData_ff_D_IN),
								     .ENQ(cau_dataStore_serverAdapter_outData_ff_ENQ),
								     .DEQ(cau_dataStore_serverAdapter_outData_ff_DEQ),
								     .CLR(cau_dataStore_serverAdapter_outData_ff_CLR),
								     .D_OUT(cau_dataStore_serverAdapter_outData_ff_D_OUT),
								     .FULL_N(cau_dataStore_serverAdapter_outData_ff_FULL_N),
								     .EMPTY_N(cau_dataStore_serverAdapter_outData_ff_EMPTY_N));

  // submodule cau_dirtyStore_memory
  BRAM1 #(.PIPELINED(1'd1),
	  .ADDR_WIDTH(32'd7),
	  .DATA_WIDTH(32'd1),
	  .MEMSIZE(8'd128)) cau_dirtyStore_memory(.CLK(CLK),
						  .ADDR(cau_dirtyStore_memory_ADDR),
						  .DI(cau_dirtyStore_memory_DI),
						  .WE(cau_dirtyStore_memory_WE),
						  .EN(cau_dirtyStore_memory_EN),
						  .DO(cau_dirtyStore_memory_DO));

  // submodule cau_dirtyStore_serverAdapter_outData_beforeDeq
  RevertReg #(.width(32'd1),
	      .init(1'd1)) cau_dirtyStore_serverAdapter_outData_beforeDeq(.CLK(CLK),
									  .D_IN(cau_dirtyStore_serverAdapter_outData_beforeDeq_D_IN),
									  .EN(cau_dirtyStore_serverAdapter_outData_beforeDeq_EN),
									  .Q_OUT(cau_dirtyStore_serverAdapter_outData_beforeDeq_Q_OUT));

  // submodule cau_dirtyStore_serverAdapter_outData_beforeEnq
  RevertReg #(.width(32'd1),
	      .init(1'd1)) cau_dirtyStore_serverAdapter_outData_beforeEnq(.CLK(CLK),
									  .D_IN(cau_dirtyStore_serverAdapter_outData_beforeEnq_D_IN),
									  .EN(cau_dirtyStore_serverAdapter_outData_beforeEnq_EN),
									  .Q_OUT(cau_dirtyStore_serverAdapter_outData_beforeEnq_Q_OUT));

  // submodule cau_dirtyStore_serverAdapter_outData_ff
  SizedFIFO #(.p1width(32'd1),
	      .p2depth(32'd3),
	      .p3cntr_width(32'd1),
	      .guarded(1'd0)) cau_dirtyStore_serverAdapter_outData_ff(.RST(RST_N),
								      .CLK(CLK),
								      .D_IN(cau_dirtyStore_serverAdapter_outData_ff_D_IN),
								      .ENQ(cau_dirtyStore_serverAdapter_outData_ff_ENQ),
								      .DEQ(cau_dirtyStore_serverAdapter_outData_ff_DEQ),
								      .CLR(cau_dirtyStore_serverAdapter_outData_ff_CLR),
								      .D_OUT(cau_dirtyStore_serverAdapter_outData_ff_D_OUT),
								      .FULL_N(cau_dirtyStore_serverAdapter_outData_ff_FULL_N),
								      .EMPTY_N(cau_dirtyStore_serverAdapter_outData_ff_EMPTY_N));

  // submodule cau_tagFifo
  FIFO2 #(.width(32'd19), .guarded(1'd1)) cau_tagFifo(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(cau_tagFifo_D_IN),
						      .ENQ(cau_tagFifo_ENQ),
						      .DEQ(cau_tagFifo_DEQ),
						      .CLR(cau_tagFifo_CLR),
						      .D_OUT(cau_tagFifo_D_OUT),
						      .FULL_N(cau_tagFifo_FULL_N),
						      .EMPTY_N(cau_tagFifo_EMPTY_N));

  // submodule lineReqQ
  FIFO2 #(.width(32'd547), .guarded(1'd1)) lineReqQ(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(lineReqQ_D_IN),
						    .ENQ(lineReqQ_ENQ),
						    .DEQ(lineReqQ_DEQ),
						    .CLR(lineReqQ_CLR),
						    .D_OUT(lineReqQ_D_OUT),
						    .FULL_N(lineReqQ_FULL_N),
						    .EMPTY_N(lineReqQ_EMPTY_N));

  // submodule lineRespQ
  FIFO2 #(.width(32'd512), .guarded(1'd1)) lineRespQ(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(lineRespQ_D_IN),
						     .ENQ(lineRespQ_ENQ),
						     .DEQ(lineRespQ_DEQ),
						     .CLR(lineRespQ_CLR),
						     .D_OUT(lineRespQ_D_OUT),
						     .FULL_N(lineRespQ_FULL_N),
						     .EMPTY_N(lineRespQ_EMPTY_N));

  // rule RL_startPassthrough
  assign WILL_FIRE_RL_startPassthrough =
	     currReqQ_rv[31] && lineReqQ_FULL_N && state == 2'd0 &&
	     doPassthrough &&
	     !doInvalidate ;

  // rule RL_handleBusPassthrough
  assign WILL_FIRE_RL_handleBusPassthrough =
	     lineRespQ_EMPTY_N && !hitQ_rv[128] && state == 2'd3 ;

  // rule RL_handleWriteback
  assign WILL_FIRE_RL_handleWriteback =
	     currReqQ_rv[31] && lineReqQ_FULL_N && state == 2'd1 ;

  // rule RL_handleDramResponse
  assign WILL_FIRE_RL_handleDramResponse =
	     currReqQ_rv[31] && lineRespQ_EMPTY_N && !hitQ_rv[128] &&
	     cau_dirtyStore_serverAdapter_cnt_8_SLT_3___d179 &&
	     cau_dataStore_serverAdapter_cnt_6_SLT_3___d180 &&
	     state == 2'd2 ;

  // rule RL_handleCAUResponse
  assign WILL_FIRE_RL_handleCAUResponse =
	     currReqQ_rv[31] &&
	     cau_dataStore_serverAdapter_outData_ff_i_notEm_ETC___d151 &&
	     state == 2'd0 &&
	     !doInvalidate &&
	     !doPassthrough ;

  // inputs to muxes for submodule ports
  assign MUX_cau_dataStore_memory_put_1__SEL_1 =
	     EN_putFromProc && !putFromProc_passthrough ;
  assign MUX_cau_validStore_write_1__SEL_2 = state == 2'd0 && doInvalidate ;
  assign MUX_currReqQ_rv_port0__write_1__SEL_1 =
	     WILL_FIRE_RL_handleCAUResponse && currReqQ_rv[0] ;
  assign MUX_doPassthrough_write_1__SEL_1 =
	     EN_putFromProc && putFromProc_passthrough ;
  assign MUX_lineReqQ_enq_1__SEL_1 =
	     WILL_FIRE_RL_handleCAUResponse && !currReqQ_rv[0] ;
  assign MUX_state_write_1__SEL_2 =
	     WILL_FIRE_RL_handleDramResponse ||
	     WILL_FIRE_RL_handleBusPassthrough ;
  assign MUX_cau_validStore_write_1__VAL_1 =
	     { currReqQ_rv[11:5] == 7'd127 || cau_validStore[127],
	       currReqQ_rv[11:5] == 7'd126 || cau_validStore[126],
	       currReqQ_rv[11:5] == 7'd125 || cau_validStore[125],
	       currReqQ_rv[11:5] == 7'd124 || cau_validStore[124],
	       currReqQ_rv[11:5] == 7'd123 || cau_validStore[123],
	       currReqQ_rv[11:5] == 7'd122 || cau_validStore[122],
	       currReqQ_rv[11:5] == 7'd121 || cau_validStore[121],
	       currReqQ_rv[11:5] == 7'd120 || cau_validStore[120],
	       currReqQ_rv[11:5] == 7'd119 || cau_validStore[119],
	       currReqQ_rv[11:5] == 7'd118 || cau_validStore[118],
	       currReqQ_rv[11:5] == 7'd117 || cau_validStore[117],
	       currReqQ_rv[11:5] == 7'd116 || cau_validStore[116],
	       currReqQ_rv[11:5] == 7'd115 || cau_validStore[115],
	       currReqQ_rv[11:5] == 7'd114 || cau_validStore[114],
	       currReqQ_rv[11:5] == 7'd113 || cau_validStore[113],
	       currReqQ_rv[11:5] == 7'd112 || cau_validStore[112],
	       currReqQ_rv[11:5] == 7'd111 || cau_validStore[111],
	       currReqQ_rv[11:5] == 7'd110 || cau_validStore[110],
	       currReqQ_rv[11:5] == 7'd109 || cau_validStore[109],
	       currReqQ_rv[11:5] == 7'd108 || cau_validStore[108],
	       currReqQ_rv[11:5] == 7'd107 || cau_validStore[107],
	       currReqQ_rv[11:5] == 7'd106 || cau_validStore[106],
	       currReqQ_rv[11:5] == 7'd105 || cau_validStore[105],
	       currReqQ_rv[11:5] == 7'd104 || cau_validStore[104],
	       currReqQ_rv[11:5] == 7'd103 || cau_validStore[103],
	       currReqQ_rv[11:5] == 7'd102 || cau_validStore[102],
	       currReqQ_rv[11:5] == 7'd101 || cau_validStore[101],
	       currReqQ_rv[11:5] == 7'd100 || cau_validStore[100],
	       currReqQ_rv[11:5] == 7'd99 || cau_validStore[99],
	       currReqQ_rv[11:5] == 7'd98 || cau_validStore[98],
	       currReqQ_rv[11:5] == 7'd97 || cau_validStore[97],
	       currReqQ_rv[11:5] == 7'd96 || cau_validStore[96],
	       currReqQ_rv[11:5] == 7'd95 || cau_validStore[95],
	       currReqQ_rv[11:5] == 7'd94 || cau_validStore[94],
	       currReqQ_rv[11:5] == 7'd93 || cau_validStore[93],
	       currReqQ_rv[11:5] == 7'd92 || cau_validStore[92],
	       currReqQ_rv[11:5] == 7'd91 || cau_validStore[91],
	       currReqQ_rv[11:5] == 7'd90 || cau_validStore[90],
	       currReqQ_rv[11:5] == 7'd89 || cau_validStore[89],
	       currReqQ_rv[11:5] == 7'd88 || cau_validStore[88],
	       currReqQ_rv[11:5] == 7'd87 || cau_validStore[87],
	       currReqQ_rv[11:5] == 7'd86 || cau_validStore[86],
	       currReqQ_rv[11:5] == 7'd85 || cau_validStore[85],
	       currReqQ_rv[11:5] == 7'd84 || cau_validStore[84],
	       currReqQ_rv[11:5] == 7'd83 || cau_validStore[83],
	       currReqQ_rv[11:5] == 7'd82 || cau_validStore[82],
	       currReqQ_rv[11:5] == 7'd81 || cau_validStore[81],
	       currReqQ_rv[11:5] == 7'd80 || cau_validStore[80],
	       currReqQ_rv[11:5] == 7'd79 || cau_validStore[79],
	       currReqQ_rv[11:5] == 7'd78 || cau_validStore[78],
	       currReqQ_rv[11:5] == 7'd77 || cau_validStore[77],
	       currReqQ_rv[11:5] == 7'd76 || cau_validStore[76],
	       currReqQ_rv[11:5] == 7'd75 || cau_validStore[75],
	       currReqQ_rv[11:5] == 7'd74 || cau_validStore[74],
	       currReqQ_rv[11:5] == 7'd73 || cau_validStore[73],
	       currReqQ_rv[11:5] == 7'd72 || cau_validStore[72],
	       currReqQ_rv[11:5] == 7'd71 || cau_validStore[71],
	       currReqQ_rv[11:5] == 7'd70 || cau_validStore[70],
	       currReqQ_rv[11:5] == 7'd69 || cau_validStore[69],
	       currReqQ_rv[11:5] == 7'd68 || cau_validStore[68],
	       currReqQ_rv[11:5] == 7'd67 || cau_validStore[67],
	       currReqQ_rv[11:5] == 7'd66 || cau_validStore[66],
	       currReqQ_rv[11:5] == 7'd65 || cau_validStore[65],
	       currReqQ_rv[11:5] == 7'd64 || cau_validStore[64],
	       currReqQ_rv[11:5] == 7'd63 || cau_validStore[63],
	       currReqQ_rv[11:5] == 7'd62 || cau_validStore[62],
	       currReqQ_rv[11:5] == 7'd61 || cau_validStore[61],
	       currReqQ_rv[11:5] == 7'd60 || cau_validStore[60],
	       currReqQ_rv[11:5] == 7'd59 || cau_validStore[59],
	       currReqQ_rv[11:5] == 7'd58 || cau_validStore[58],
	       currReqQ_rv[11:5] == 7'd57 || cau_validStore[57],
	       currReqQ_rv[11:5] == 7'd56 || cau_validStore[56],
	       currReqQ_rv[11:5] == 7'd55 || cau_validStore[55],
	       currReqQ_rv[11:5] == 7'd54 || cau_validStore[54],
	       currReqQ_rv[11:5] == 7'd53 || cau_validStore[53],
	       currReqQ_rv[11:5] == 7'd52 || cau_validStore[52],
	       currReqQ_rv[11:5] == 7'd51 || cau_validStore[51],
	       currReqQ_rv[11:5] == 7'd50 || cau_validStore[50],
	       currReqQ_rv[11:5] == 7'd49 || cau_validStore[49],
	       currReqQ_rv[11:5] == 7'd48 || cau_validStore[48],
	       currReqQ_rv[11:5] == 7'd47 || cau_validStore[47],
	       currReqQ_rv[11:5] == 7'd46 || cau_validStore[46],
	       currReqQ_rv[11:5] == 7'd45 || cau_validStore[45],
	       currReqQ_rv[11:5] == 7'd44 || cau_validStore[44],
	       currReqQ_rv[11:5] == 7'd43 || cau_validStore[43],
	       currReqQ_rv[11:5] == 7'd42 || cau_validStore[42],
	       currReqQ_rv[11:5] == 7'd41 || cau_validStore[41],
	       currReqQ_rv[11:5] == 7'd40 || cau_validStore[40],
	       currReqQ_rv[11:5] == 7'd39 || cau_validStore[39],
	       currReqQ_rv[11:5] == 7'd38 || cau_validStore[38],
	       currReqQ_rv[11:5] == 7'd37 || cau_validStore[37],
	       currReqQ_rv[11:5] == 7'd36 || cau_validStore[36],
	       currReqQ_rv[11:5] == 7'd35 || cau_validStore[35],
	       currReqQ_rv[11:5] == 7'd34 || cau_validStore[34],
	       currReqQ_rv[11:5] == 7'd33 || cau_validStore[33],
	       currReqQ_rv[11:5] == 7'd32 || cau_validStore[32],
	       currReqQ_rv[11:5] == 7'd31 || cau_validStore[31],
	       currReqQ_rv[11:5] == 7'd30 || cau_validStore[30],
	       currReqQ_rv[11:5] == 7'd29 || cau_validStore[29],
	       currReqQ_rv[11:5] == 7'd28 || cau_validStore[28],
	       currReqQ_rv[11:5] == 7'd27 || cau_validStore[27],
	       currReqQ_rv[11:5] == 7'd26 || cau_validStore[26],
	       currReqQ_rv[11:5] == 7'd25 || cau_validStore[25],
	       currReqQ_rv[11:5] == 7'd24 || cau_validStore[24],
	       currReqQ_rv[11:5] == 7'd23 || cau_validStore[23],
	       currReqQ_rv[11:5] == 7'd22 || cau_validStore[22],
	       currReqQ_rv[11:5] == 7'd21 || cau_validStore[21],
	       currReqQ_rv[11:5] == 7'd20 || cau_validStore[20],
	       currReqQ_rv[11:5] == 7'd19 || cau_validStore[19],
	       currReqQ_rv[11:5] == 7'd18 || cau_validStore[18],
	       currReqQ_rv[11:5] == 7'd17 || cau_validStore[17],
	       currReqQ_rv[11:5] == 7'd16 || cau_validStore[16],
	       currReqQ_rv[11:5] == 7'd15 || cau_validStore[15],
	       currReqQ_rv[11:5] == 7'd14 || cau_validStore[14],
	       currReqQ_rv[11:5] == 7'd13 || cau_validStore[13],
	       currReqQ_rv[11:5] == 7'd12 || cau_validStore[12],
	       currReqQ_rv[11:5] == 7'd11 || cau_validStore[11],
	       currReqQ_rv[11:5] == 7'd10 || cau_validStore[10],
	       currReqQ_rv[11:5] == 7'd9 || cau_validStore[9],
	       currReqQ_rv[11:5] == 7'd8 || cau_validStore[8],
	       currReqQ_rv[11:5] == 7'd7 || cau_validStore[7],
	       currReqQ_rv[11:5] == 7'd6 || cau_validStore[6],
	       currReqQ_rv[11:5] == 7'd5 || cau_validStore[5],
	       currReqQ_rv[11:5] == 7'd4 || cau_validStore[4],
	       currReqQ_rv[11:5] == 7'd3 || cau_validStore[3],
	       currReqQ_rv[11:5] == 7'd2 || cau_validStore[2],
	       currReqQ_rv[11:5] == 7'd1 || cau_validStore[1],
	       currReqQ_rv[11:5] == 7'd0 || cau_validStore[0] } ;
  assign MUX_hitQ_rv_port0__write_1__VAL_1 =
	     { 1'd1,
	       CASE_currReqQ_rv_BITS_4_TO_3_0_IF_cau_dataStor_ETC__q2 } ;
  assign MUX_hitQ_rv_port0__write_1__VAL_2 =
	     { 97'h1000000000000000000000000, lineRespQ_D_OUT[511:480] } ;
  assign MUX_hitQ_rv_port0__write_1__VAL_3 =
	     { 1'd1, CASE_currReqQ_rv_BITS_4_TO_3_0_lineRespQD_OUT_ETC__q1 } ;
  assign MUX_lineReqQ_enq_1__VAL_1 =
	     IF_cau_dirtyStore_serverAdapter_outData_ff_i_n_ETC___d169 ?
	       { 5'd31,
		 x_addr__h38212,
		 IF_cau_dataStore_serverAdapter_outData_ff_i_no_ETC___d158 } :
	       { 5'd1,
		 currReqQ_rv[30:0],
		 511'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA } ;
  assign MUX_lineReqQ_enq_1__VAL_2 =
	     { 5'd1,
	       currReqQ_rv[30:0],
	       511'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA } ;
  assign MUX_lineReqQ_enq_1__VAL_3 =
	     { 5'd0,
	       currReqQ_rv[30:0],
	       511'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA } ;
  assign MUX_state_write_1__VAL_1 =
	     IF_cau_dirtyStore_serverAdapter_outData_ff_i_n_ETC___d169 ?
	       2'd1 :
	       2'd2 ;

  // inlined wires
  assign cau_dataStore_serverAdapter_outData_enqw_whas =
	     (!cau_dataStore_serverAdapter_s2[0] ||
	      cau_dataStore_serverAdapter_outData_ff_FULL_N) &&
	     cau_dataStore_serverAdapter_s2[1] &&
	     cau_dataStore_serverAdapter_s2[0] ;
  assign cau_dataStore_serverAdapter_cnt_1_whas =
	     (MUX_cau_dataStore_memory_put_1__SEL_1 ||
	      WILL_FIRE_RL_handleDramResponse) &&
	     (!cau_dataStore_serverAdapter_writeWithResp_wget[1] ||
	      cau_dataStore_serverAdapter_writeWithResp_wget[0]) ;
  assign cau_dataStore_serverAdapter_writeWithResp_wget =
	     MUX_cau_dataStore_memory_put_1__SEL_1 ? 2'd0 : 2'd2 ;
  assign cau_dataStore_serverAdapter_writeWithResp_whas =
	     MUX_cau_dataStore_memory_put_1__SEL_1 ||
	     WILL_FIRE_RL_handleDramResponse ;
  assign cau_dataStore_serverAdapter_s1_1_wget =
	     { 1'd1,
	       !cau_dataStore_serverAdapter_writeWithResp_wget[1] ||
	       cau_dataStore_serverAdapter_writeWithResp_wget[0] } ;
  assign cau_dirtyStore_serverAdapter_outData_enqw_whas =
	     (!cau_dirtyStore_serverAdapter_s2[0] ||
	      cau_dirtyStore_serverAdapter_outData_ff_FULL_N) &&
	     cau_dirtyStore_serverAdapter_s2[1] &&
	     cau_dirtyStore_serverAdapter_s2[0] ;
  assign cau_dirtyStore_serverAdapter_cnt_1_whas =
	     (MUX_cau_dataStore_memory_put_1__SEL_1 ||
	      WILL_FIRE_RL_handleDramResponse) &&
	     (!cau_dirtyStore_serverAdapter_writeWithResp_wget[1] ||
	      cau_dirtyStore_serverAdapter_writeWithResp_wget[0]) ;
  assign cau_dirtyStore_serverAdapter_writeWithResp_wget =
	     MUX_cau_dataStore_memory_put_1__SEL_1 ? 2'd0 : 2'd2 ;
  assign cau_dirtyStore_serverAdapter_writeWithResp_whas =
	     MUX_cau_dataStore_memory_put_1__SEL_1 ||
	     WILL_FIRE_RL_handleDramResponse ;
  assign cau_dirtyStore_serverAdapter_s1_1_wget =
	     { 1'd1,
	       !cau_dirtyStore_serverAdapter_writeWithResp_wget[1] ||
	       cau_dirtyStore_serverAdapter_writeWithResp_wget[0] } ;
  assign hitQ_rv_EN_port0__write =
	     WILL_FIRE_RL_handleCAUResponse && currReqQ_rv[0] ||
	     WILL_FIRE_RL_handleBusPassthrough ||
	     WILL_FIRE_RL_handleDramResponse ;
  always@(MUX_currReqQ_rv_port0__write_1__SEL_1 or
	  MUX_hitQ_rv_port0__write_1__VAL_1 or
	  WILL_FIRE_RL_handleBusPassthrough or
	  MUX_hitQ_rv_port0__write_1__VAL_2 or
	  WILL_FIRE_RL_handleDramResponse or
	  MUX_hitQ_rv_port0__write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_currReqQ_rv_port0__write_1__SEL_1:
	  hitQ_rv_port0__write_1 = MUX_hitQ_rv_port0__write_1__VAL_1;
      WILL_FIRE_RL_handleBusPassthrough:
	  hitQ_rv_port0__write_1 = MUX_hitQ_rv_port0__write_1__VAL_2;
      WILL_FIRE_RL_handleDramResponse:
	  hitQ_rv_port0__write_1 = MUX_hitQ_rv_port0__write_1__VAL_3;
      default: hitQ_rv_port0__write_1 =
		   129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign hitQ_rv_port1__read =
	     hitQ_rv_EN_port0__write ? hitQ_rv_port0__write_1 : hitQ_rv ;
  assign hitQ_rv_port2__read =
	     EN_getToProc ?
	       129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       hitQ_rv_port1__read ;
  assign currReqQ_rv_EN_port0__write =
	     WILL_FIRE_RL_handleCAUResponse && currReqQ_rv[0] ||
	     WILL_FIRE_RL_handleDramResponse ||
	     WILL_FIRE_RL_startPassthrough ;
  assign currReqQ_rv_port1__read =
	     currReqQ_rv_EN_port0__write ? 32'd715827882 : currReqQ_rv ;
  assign currReqQ_rv_port1__write_1 =
	     { 1'd1,
	       putFromProc_e,
	       NOT_putFromProc_passthrough_44_AND_SEL_ARR_cau_ETC___d781 } ;
  assign currReqQ_rv_port2__read =
	     EN_putFromProc ?
	       currReqQ_rv_port1__write_1 :
	       currReqQ_rv_port1__read ;

  // register cau_dataStore_serverAdapter_cnt
  assign cau_dataStore_serverAdapter_cnt_D_IN =
	     cau_dataStore_serverAdapter_cnt_6_PLUS_IF_cau__ETC___d22 ;
  assign cau_dataStore_serverAdapter_cnt_EN =
	     cau_dataStore_serverAdapter_cnt_1_whas ||
	     WILL_FIRE_RL_handleCAUResponse ;

  // register cau_dataStore_serverAdapter_s1
  assign cau_dataStore_serverAdapter_s1_D_IN =
	     cau_dataStore_serverAdapter_writeWithResp_whas ?
	       cau_dataStore_serverAdapter_s1_1_wget :
	       2'd0 ;
  assign cau_dataStore_serverAdapter_s1_EN = 1'd1 ;

  // register cau_dataStore_serverAdapter_s2
  assign cau_dataStore_serverAdapter_s2_D_IN =
	     cau_dataStore_serverAdapter_s1 ;
  assign cau_dataStore_serverAdapter_s2_EN =
	     cau_dataStore_serverAdapter_s1[1] ||
	     cau_dataStore_serverAdapter_s2[1] ;

  // register cau_dirtyStore_serverAdapter_cnt
  assign cau_dirtyStore_serverAdapter_cnt_D_IN =
	     cau_dirtyStore_serverAdapter_cnt_8_PLUS_IF_cau_ETC___d74 ;
  assign cau_dirtyStore_serverAdapter_cnt_EN =
	     cau_dirtyStore_serverAdapter_cnt_1_whas ||
	     WILL_FIRE_RL_handleCAUResponse ;

  // register cau_dirtyStore_serverAdapter_s1
  assign cau_dirtyStore_serverAdapter_s1_D_IN =
	     cau_dirtyStore_serverAdapter_writeWithResp_whas ?
	       cau_dirtyStore_serverAdapter_s1_1_wget :
	       2'd0 ;
  assign cau_dirtyStore_serverAdapter_s1_EN = 1'd1 ;

  // register cau_dirtyStore_serverAdapter_s2
  assign cau_dirtyStore_serverAdapter_s2_D_IN =
	     cau_dirtyStore_serverAdapter_s1 ;
  assign cau_dirtyStore_serverAdapter_s2_EN =
	     cau_dirtyStore_serverAdapter_s1[1] ||
	     cau_dirtyStore_serverAdapter_s2[1] ;

  // register cau_tagStore_0
  assign cau_tagStore_0_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_0_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd0 ;

  // register cau_tagStore_1
  assign cau_tagStore_1_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_1_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd1 ;

  // register cau_tagStore_10
  assign cau_tagStore_10_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_10_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd10 ;

  // register cau_tagStore_100
  assign cau_tagStore_100_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_100_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd100 ;

  // register cau_tagStore_101
  assign cau_tagStore_101_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_101_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd101 ;

  // register cau_tagStore_102
  assign cau_tagStore_102_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_102_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd102 ;

  // register cau_tagStore_103
  assign cau_tagStore_103_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_103_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd103 ;

  // register cau_tagStore_104
  assign cau_tagStore_104_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_104_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd104 ;

  // register cau_tagStore_105
  assign cau_tagStore_105_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_105_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd105 ;

  // register cau_tagStore_106
  assign cau_tagStore_106_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_106_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd106 ;

  // register cau_tagStore_107
  assign cau_tagStore_107_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_107_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd107 ;

  // register cau_tagStore_108
  assign cau_tagStore_108_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_108_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd108 ;

  // register cau_tagStore_109
  assign cau_tagStore_109_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_109_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd109 ;

  // register cau_tagStore_11
  assign cau_tagStore_11_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_11_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd11 ;

  // register cau_tagStore_110
  assign cau_tagStore_110_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_110_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd110 ;

  // register cau_tagStore_111
  assign cau_tagStore_111_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_111_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd111 ;

  // register cau_tagStore_112
  assign cau_tagStore_112_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_112_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd112 ;

  // register cau_tagStore_113
  assign cau_tagStore_113_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_113_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd113 ;

  // register cau_tagStore_114
  assign cau_tagStore_114_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_114_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd114 ;

  // register cau_tagStore_115
  assign cau_tagStore_115_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_115_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd115 ;

  // register cau_tagStore_116
  assign cau_tagStore_116_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_116_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd116 ;

  // register cau_tagStore_117
  assign cau_tagStore_117_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_117_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd117 ;

  // register cau_tagStore_118
  assign cau_tagStore_118_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_118_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd118 ;

  // register cau_tagStore_119
  assign cau_tagStore_119_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_119_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd119 ;

  // register cau_tagStore_12
  assign cau_tagStore_12_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_12_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd12 ;

  // register cau_tagStore_120
  assign cau_tagStore_120_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_120_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd120 ;

  // register cau_tagStore_121
  assign cau_tagStore_121_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_121_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd121 ;

  // register cau_tagStore_122
  assign cau_tagStore_122_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_122_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd122 ;

  // register cau_tagStore_123
  assign cau_tagStore_123_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_123_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd123 ;

  // register cau_tagStore_124
  assign cau_tagStore_124_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_124_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd124 ;

  // register cau_tagStore_125
  assign cau_tagStore_125_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_125_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd125 ;

  // register cau_tagStore_126
  assign cau_tagStore_126_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_126_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd126 ;

  // register cau_tagStore_127
  assign cau_tagStore_127_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_127_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd127 ;

  // register cau_tagStore_13
  assign cau_tagStore_13_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_13_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd13 ;

  // register cau_tagStore_14
  assign cau_tagStore_14_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_14_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd14 ;

  // register cau_tagStore_15
  assign cau_tagStore_15_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_15_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd15 ;

  // register cau_tagStore_16
  assign cau_tagStore_16_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_16_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd16 ;

  // register cau_tagStore_17
  assign cau_tagStore_17_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_17_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd17 ;

  // register cau_tagStore_18
  assign cau_tagStore_18_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_18_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd18 ;

  // register cau_tagStore_19
  assign cau_tagStore_19_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_19_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd19 ;

  // register cau_tagStore_2
  assign cau_tagStore_2_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_2_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd2 ;

  // register cau_tagStore_20
  assign cau_tagStore_20_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_20_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd20 ;

  // register cau_tagStore_21
  assign cau_tagStore_21_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_21_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd21 ;

  // register cau_tagStore_22
  assign cau_tagStore_22_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_22_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd22 ;

  // register cau_tagStore_23
  assign cau_tagStore_23_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_23_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd23 ;

  // register cau_tagStore_24
  assign cau_tagStore_24_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_24_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd24 ;

  // register cau_tagStore_25
  assign cau_tagStore_25_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_25_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd25 ;

  // register cau_tagStore_26
  assign cau_tagStore_26_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_26_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd26 ;

  // register cau_tagStore_27
  assign cau_tagStore_27_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_27_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd27 ;

  // register cau_tagStore_28
  assign cau_tagStore_28_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_28_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd28 ;

  // register cau_tagStore_29
  assign cau_tagStore_29_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_29_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd29 ;

  // register cau_tagStore_3
  assign cau_tagStore_3_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_3_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd3 ;

  // register cau_tagStore_30
  assign cau_tagStore_30_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_30_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd30 ;

  // register cau_tagStore_31
  assign cau_tagStore_31_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_31_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd31 ;

  // register cau_tagStore_32
  assign cau_tagStore_32_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_32_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd32 ;

  // register cau_tagStore_33
  assign cau_tagStore_33_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_33_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd33 ;

  // register cau_tagStore_34
  assign cau_tagStore_34_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_34_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd34 ;

  // register cau_tagStore_35
  assign cau_tagStore_35_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_35_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd35 ;

  // register cau_tagStore_36
  assign cau_tagStore_36_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_36_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd36 ;

  // register cau_tagStore_37
  assign cau_tagStore_37_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_37_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd37 ;

  // register cau_tagStore_38
  assign cau_tagStore_38_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_38_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd38 ;

  // register cau_tagStore_39
  assign cau_tagStore_39_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_39_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd39 ;

  // register cau_tagStore_4
  assign cau_tagStore_4_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_4_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd4 ;

  // register cau_tagStore_40
  assign cau_tagStore_40_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_40_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd40 ;

  // register cau_tagStore_41
  assign cau_tagStore_41_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_41_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd41 ;

  // register cau_tagStore_42
  assign cau_tagStore_42_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_42_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd42 ;

  // register cau_tagStore_43
  assign cau_tagStore_43_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_43_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd43 ;

  // register cau_tagStore_44
  assign cau_tagStore_44_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_44_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd44 ;

  // register cau_tagStore_45
  assign cau_tagStore_45_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_45_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd45 ;

  // register cau_tagStore_46
  assign cau_tagStore_46_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_46_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd46 ;

  // register cau_tagStore_47
  assign cau_tagStore_47_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_47_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd47 ;

  // register cau_tagStore_48
  assign cau_tagStore_48_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_48_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd48 ;

  // register cau_tagStore_49
  assign cau_tagStore_49_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_49_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd49 ;

  // register cau_tagStore_5
  assign cau_tagStore_5_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_5_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd5 ;

  // register cau_tagStore_50
  assign cau_tagStore_50_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_50_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd50 ;

  // register cau_tagStore_51
  assign cau_tagStore_51_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_51_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd51 ;

  // register cau_tagStore_52
  assign cau_tagStore_52_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_52_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd52 ;

  // register cau_tagStore_53
  assign cau_tagStore_53_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_53_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd53 ;

  // register cau_tagStore_54
  assign cau_tagStore_54_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_54_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd54 ;

  // register cau_tagStore_55
  assign cau_tagStore_55_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_55_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd55 ;

  // register cau_tagStore_56
  assign cau_tagStore_56_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_56_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd56 ;

  // register cau_tagStore_57
  assign cau_tagStore_57_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_57_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd57 ;

  // register cau_tagStore_58
  assign cau_tagStore_58_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_58_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd58 ;

  // register cau_tagStore_59
  assign cau_tagStore_59_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_59_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd59 ;

  // register cau_tagStore_6
  assign cau_tagStore_6_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_6_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd6 ;

  // register cau_tagStore_60
  assign cau_tagStore_60_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_60_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd60 ;

  // register cau_tagStore_61
  assign cau_tagStore_61_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_61_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd61 ;

  // register cau_tagStore_62
  assign cau_tagStore_62_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_62_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd62 ;

  // register cau_tagStore_63
  assign cau_tagStore_63_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_63_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd63 ;

  // register cau_tagStore_64
  assign cau_tagStore_64_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_64_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd64 ;

  // register cau_tagStore_65
  assign cau_tagStore_65_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_65_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd65 ;

  // register cau_tagStore_66
  assign cau_tagStore_66_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_66_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd66 ;

  // register cau_tagStore_67
  assign cau_tagStore_67_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_67_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd67 ;

  // register cau_tagStore_68
  assign cau_tagStore_68_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_68_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd68 ;

  // register cau_tagStore_69
  assign cau_tagStore_69_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_69_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd69 ;

  // register cau_tagStore_7
  assign cau_tagStore_7_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_7_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd7 ;

  // register cau_tagStore_70
  assign cau_tagStore_70_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_70_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd70 ;

  // register cau_tagStore_71
  assign cau_tagStore_71_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_71_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd71 ;

  // register cau_tagStore_72
  assign cau_tagStore_72_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_72_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd72 ;

  // register cau_tagStore_73
  assign cau_tagStore_73_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_73_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd73 ;

  // register cau_tagStore_74
  assign cau_tagStore_74_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_74_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd74 ;

  // register cau_tagStore_75
  assign cau_tagStore_75_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_75_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd75 ;

  // register cau_tagStore_76
  assign cau_tagStore_76_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_76_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd76 ;

  // register cau_tagStore_77
  assign cau_tagStore_77_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_77_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd77 ;

  // register cau_tagStore_78
  assign cau_tagStore_78_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_78_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd78 ;

  // register cau_tagStore_79
  assign cau_tagStore_79_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_79_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd79 ;

  // register cau_tagStore_8
  assign cau_tagStore_8_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_8_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd8 ;

  // register cau_tagStore_80
  assign cau_tagStore_80_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_80_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd80 ;

  // register cau_tagStore_81
  assign cau_tagStore_81_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_81_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd81 ;

  // register cau_tagStore_82
  assign cau_tagStore_82_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_82_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd82 ;

  // register cau_tagStore_83
  assign cau_tagStore_83_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_83_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd83 ;

  // register cau_tagStore_84
  assign cau_tagStore_84_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_84_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd84 ;

  // register cau_tagStore_85
  assign cau_tagStore_85_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_85_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd85 ;

  // register cau_tagStore_86
  assign cau_tagStore_86_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_86_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd86 ;

  // register cau_tagStore_87
  assign cau_tagStore_87_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_87_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd87 ;

  // register cau_tagStore_88
  assign cau_tagStore_88_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_88_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd88 ;

  // register cau_tagStore_89
  assign cau_tagStore_89_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_89_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd89 ;

  // register cau_tagStore_9
  assign cau_tagStore_9_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_9_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd9 ;

  // register cau_tagStore_90
  assign cau_tagStore_90_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_90_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd90 ;

  // register cau_tagStore_91
  assign cau_tagStore_91_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_91_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd91 ;

  // register cau_tagStore_92
  assign cau_tagStore_92_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_92_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd92 ;

  // register cau_tagStore_93
  assign cau_tagStore_93_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_93_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd93 ;

  // register cau_tagStore_94
  assign cau_tagStore_94_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_94_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd94 ;

  // register cau_tagStore_95
  assign cau_tagStore_95_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_95_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd95 ;

  // register cau_tagStore_96
  assign cau_tagStore_96_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_96_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd96 ;

  // register cau_tagStore_97
  assign cau_tagStore_97_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_97_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd97 ;

  // register cau_tagStore_98
  assign cau_tagStore_98_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_98_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd98 ;

  // register cau_tagStore_99
  assign cau_tagStore_99_D_IN = currReqQ_rv[30:12] ;
  assign cau_tagStore_99_EN =
	     WILL_FIRE_RL_handleDramResponse && currReqQ_rv[11:5] == 7'd99 ;

  // register cau_validStore
  assign cau_validStore_D_IN =
	     WILL_FIRE_RL_handleDramResponse ?
	       MUX_cau_validStore_write_1__VAL_1 :
	       128'd0 ;
  assign cau_validStore_EN =
	     WILL_FIRE_RL_handleDramResponse ||
	     state == 2'd0 && doInvalidate ;

  // register currReqQ_rv
  assign currReqQ_rv_D_IN = currReqQ_rv_port2__read ;
  assign currReqQ_rv_EN = 1'b1 ;

  // register cyc
  assign cyc_D_IN = 32'h0 ;
  assign cyc_EN = 1'b0 ;

  // register doInvalidate
  assign doInvalidate_D_IN = EN_invalidateLines ;
  assign doInvalidate_EN =
	     EN_invalidateLines || MUX_cau_validStore_write_1__SEL_2 ;

  // register doPassthrough
  assign doPassthrough_D_IN = MUX_doPassthrough_write_1__SEL_1 ;
  assign doPassthrough_EN =
	     EN_putFromProc && putFromProc_passthrough ||
	     WILL_FIRE_RL_startPassthrough ;

  // register hitQ_rv
  assign hitQ_rv_D_IN = hitQ_rv_port2__read ;
  assign hitQ_rv_EN = 1'b1 ;

  // register state
  always@(MUX_lineReqQ_enq_1__SEL_1 or
	  MUX_state_write_1__VAL_1 or
	  MUX_state_write_1__SEL_2 or
	  WILL_FIRE_RL_handleWriteback or WILL_FIRE_RL_startPassthrough)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lineReqQ_enq_1__SEL_1: state_D_IN = MUX_state_write_1__VAL_1;
      MUX_state_write_1__SEL_2: state_D_IN = 2'd0;
      WILL_FIRE_RL_handleWriteback: state_D_IN = 2'd2;
      WILL_FIRE_RL_startPassthrough: state_D_IN = 2'd3;
      default: state_D_IN = 2'b10 /* unspecified value */ ;
    endcase
  end
  assign state_EN =
	     WILL_FIRE_RL_handleCAUResponse && !currReqQ_rv[0] ||
	     WILL_FIRE_RL_handleDramResponse ||
	     WILL_FIRE_RL_handleBusPassthrough ||
	     WILL_FIRE_RL_handleWriteback ||
	     WILL_FIRE_RL_startPassthrough ;

  // submodule cau_dataStore_memory
  assign cau_dataStore_memory_ADDR =
	     MUX_cau_dataStore_memory_put_1__SEL_1 ?
	       putFromProc_e[10:4] :
	       currReqQ_rv[11:5] ;
  assign cau_dataStore_memory_DI =
	     MUX_cau_dataStore_memory_put_1__SEL_1 ?
	       512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */  :
	       lineRespQ_D_OUT ;
  assign cau_dataStore_memory_WE = !MUX_cau_dataStore_memory_put_1__SEL_1 ;
  assign cau_dataStore_memory_EN =
	     EN_putFromProc && !putFromProc_passthrough ||
	     WILL_FIRE_RL_handleDramResponse ;

  // submodule cau_dataStore_serverAdapter_outData_beforeDeq
  assign cau_dataStore_serverAdapter_outData_beforeDeq_D_IN = 1'd1 ;
  assign cau_dataStore_serverAdapter_outData_beforeDeq_EN =
	     WILL_FIRE_RL_handleCAUResponse ;

  // submodule cau_dataStore_serverAdapter_outData_beforeEnq
  assign cau_dataStore_serverAdapter_outData_beforeEnq_D_IN = 1'd1 ;
  assign cau_dataStore_serverAdapter_outData_beforeEnq_EN =
	     cau_dataStore_serverAdapter_outData_enqw_whas ;

  // submodule cau_dataStore_serverAdapter_outData_ff
  assign cau_dataStore_serverAdapter_outData_ff_D_IN =
	     cau_dataStore_memory_DO ;
  assign cau_dataStore_serverAdapter_outData_ff_ENQ =
	     cau_dataStore_serverAdapter_outData_enqw_whas &&
	     (!WILL_FIRE_RL_handleCAUResponse ||
	      cau_dataStore_serverAdapter_outData_ff_EMPTY_N) ;
  assign cau_dataStore_serverAdapter_outData_ff_DEQ =
	     WILL_FIRE_RL_handleCAUResponse &&
	     cau_dataStore_serverAdapter_outData_ff_EMPTY_N ;
  assign cau_dataStore_serverAdapter_outData_ff_CLR = 1'b0 ;

  // submodule cau_dirtyStore_memory
  assign cau_dirtyStore_memory_ADDR =
	     MUX_cau_dataStore_memory_put_1__SEL_1 ?
	       putFromProc_e[10:4] :
	       currReqQ_rv[11:5] ;
  assign cau_dirtyStore_memory_DI =
	     MUX_cau_dataStore_memory_put_1__SEL_1 &&
	     1'b0 /* unspecified value */  ;
  assign cau_dirtyStore_memory_WE = !MUX_cau_dataStore_memory_put_1__SEL_1 ;
  assign cau_dirtyStore_memory_EN =
	     EN_putFromProc && !putFromProc_passthrough ||
	     WILL_FIRE_RL_handleDramResponse ;

  // submodule cau_dirtyStore_serverAdapter_outData_beforeDeq
  assign cau_dirtyStore_serverAdapter_outData_beforeDeq_D_IN = 1'd1 ;
  assign cau_dirtyStore_serverAdapter_outData_beforeDeq_EN =
	     WILL_FIRE_RL_handleCAUResponse ;

  // submodule cau_dirtyStore_serverAdapter_outData_beforeEnq
  assign cau_dirtyStore_serverAdapter_outData_beforeEnq_D_IN = 1'd1 ;
  assign cau_dirtyStore_serverAdapter_outData_beforeEnq_EN =
	     cau_dirtyStore_serverAdapter_outData_enqw_whas ;

  // submodule cau_dirtyStore_serverAdapter_outData_ff
  assign cau_dirtyStore_serverAdapter_outData_ff_D_IN =
	     cau_dirtyStore_memory_DO ;
  assign cau_dirtyStore_serverAdapter_outData_ff_ENQ =
	     cau_dirtyStore_serverAdapter_outData_enqw_whas &&
	     (!WILL_FIRE_RL_handleCAUResponse ||
	      cau_dirtyStore_serverAdapter_outData_ff_EMPTY_N) ;
  assign cau_dirtyStore_serverAdapter_outData_ff_DEQ =
	     WILL_FIRE_RL_handleCAUResponse &&
	     cau_dirtyStore_serverAdapter_outData_ff_EMPTY_N ;
  assign cau_dirtyStore_serverAdapter_outData_ff_CLR = 1'b0 ;

  // submodule cau_tagFifo
  always@(putFromProc_e or
	  cau_tagStore_0 or
	  cau_tagStore_1 or
	  cau_tagStore_2 or
	  cau_tagStore_3 or
	  cau_tagStore_4 or
	  cau_tagStore_5 or
	  cau_tagStore_6 or
	  cau_tagStore_7 or
	  cau_tagStore_8 or
	  cau_tagStore_9 or
	  cau_tagStore_10 or
	  cau_tagStore_11 or
	  cau_tagStore_12 or
	  cau_tagStore_13 or
	  cau_tagStore_14 or
	  cau_tagStore_15 or
	  cau_tagStore_16 or
	  cau_tagStore_17 or
	  cau_tagStore_18 or
	  cau_tagStore_19 or
	  cau_tagStore_20 or
	  cau_tagStore_21 or
	  cau_tagStore_22 or
	  cau_tagStore_23 or
	  cau_tagStore_24 or
	  cau_tagStore_25 or
	  cau_tagStore_26 or
	  cau_tagStore_27 or
	  cau_tagStore_28 or
	  cau_tagStore_29 or
	  cau_tagStore_30 or
	  cau_tagStore_31 or
	  cau_tagStore_32 or
	  cau_tagStore_33 or
	  cau_tagStore_34 or
	  cau_tagStore_35 or
	  cau_tagStore_36 or
	  cau_tagStore_37 or
	  cau_tagStore_38 or
	  cau_tagStore_39 or
	  cau_tagStore_40 or
	  cau_tagStore_41 or
	  cau_tagStore_42 or
	  cau_tagStore_43 or
	  cau_tagStore_44 or
	  cau_tagStore_45 or
	  cau_tagStore_46 or
	  cau_tagStore_47 or
	  cau_tagStore_48 or
	  cau_tagStore_49 or
	  cau_tagStore_50 or
	  cau_tagStore_51 or
	  cau_tagStore_52 or
	  cau_tagStore_53 or
	  cau_tagStore_54 or
	  cau_tagStore_55 or
	  cau_tagStore_56 or
	  cau_tagStore_57 or
	  cau_tagStore_58 or
	  cau_tagStore_59 or
	  cau_tagStore_60 or
	  cau_tagStore_61 or
	  cau_tagStore_62 or
	  cau_tagStore_63 or
	  cau_tagStore_64 or
	  cau_tagStore_65 or
	  cau_tagStore_66 or
	  cau_tagStore_67 or
	  cau_tagStore_68 or
	  cau_tagStore_69 or
	  cau_tagStore_70 or
	  cau_tagStore_71 or
	  cau_tagStore_72 or
	  cau_tagStore_73 or
	  cau_tagStore_74 or
	  cau_tagStore_75 or
	  cau_tagStore_76 or
	  cau_tagStore_77 or
	  cau_tagStore_78 or
	  cau_tagStore_79 or
	  cau_tagStore_80 or
	  cau_tagStore_81 or
	  cau_tagStore_82 or
	  cau_tagStore_83 or
	  cau_tagStore_84 or
	  cau_tagStore_85 or
	  cau_tagStore_86 or
	  cau_tagStore_87 or
	  cau_tagStore_88 or
	  cau_tagStore_89 or
	  cau_tagStore_90 or
	  cau_tagStore_91 or
	  cau_tagStore_92 or
	  cau_tagStore_93 or
	  cau_tagStore_94 or
	  cau_tagStore_95 or
	  cau_tagStore_96 or
	  cau_tagStore_97 or
	  cau_tagStore_98 or
	  cau_tagStore_99 or
	  cau_tagStore_100 or
	  cau_tagStore_101 or
	  cau_tagStore_102 or
	  cau_tagStore_103 or
	  cau_tagStore_104 or
	  cau_tagStore_105 or
	  cau_tagStore_106 or
	  cau_tagStore_107 or
	  cau_tagStore_108 or
	  cau_tagStore_109 or
	  cau_tagStore_110 or
	  cau_tagStore_111 or
	  cau_tagStore_112 or
	  cau_tagStore_113 or
	  cau_tagStore_114 or
	  cau_tagStore_115 or
	  cau_tagStore_116 or
	  cau_tagStore_117 or
	  cau_tagStore_118 or
	  cau_tagStore_119 or
	  cau_tagStore_120 or
	  cau_tagStore_121 or
	  cau_tagStore_122 or
	  cau_tagStore_123 or
	  cau_tagStore_124 or
	  cau_tagStore_125 or cau_tagStore_126 or cau_tagStore_127)
  begin
    case (putFromProc_e[10:4])
      7'd0: cau_tagFifo_D_IN = cau_tagStore_0;
      7'd1: cau_tagFifo_D_IN = cau_tagStore_1;
      7'd2: cau_tagFifo_D_IN = cau_tagStore_2;
      7'd3: cau_tagFifo_D_IN = cau_tagStore_3;
      7'd4: cau_tagFifo_D_IN = cau_tagStore_4;
      7'd5: cau_tagFifo_D_IN = cau_tagStore_5;
      7'd6: cau_tagFifo_D_IN = cau_tagStore_6;
      7'd7: cau_tagFifo_D_IN = cau_tagStore_7;
      7'd8: cau_tagFifo_D_IN = cau_tagStore_8;
      7'd9: cau_tagFifo_D_IN = cau_tagStore_9;
      7'd10: cau_tagFifo_D_IN = cau_tagStore_10;
      7'd11: cau_tagFifo_D_IN = cau_tagStore_11;
      7'd12: cau_tagFifo_D_IN = cau_tagStore_12;
      7'd13: cau_tagFifo_D_IN = cau_tagStore_13;
      7'd14: cau_tagFifo_D_IN = cau_tagStore_14;
      7'd15: cau_tagFifo_D_IN = cau_tagStore_15;
      7'd16: cau_tagFifo_D_IN = cau_tagStore_16;
      7'd17: cau_tagFifo_D_IN = cau_tagStore_17;
      7'd18: cau_tagFifo_D_IN = cau_tagStore_18;
      7'd19: cau_tagFifo_D_IN = cau_tagStore_19;
      7'd20: cau_tagFifo_D_IN = cau_tagStore_20;
      7'd21: cau_tagFifo_D_IN = cau_tagStore_21;
      7'd22: cau_tagFifo_D_IN = cau_tagStore_22;
      7'd23: cau_tagFifo_D_IN = cau_tagStore_23;
      7'd24: cau_tagFifo_D_IN = cau_tagStore_24;
      7'd25: cau_tagFifo_D_IN = cau_tagStore_25;
      7'd26: cau_tagFifo_D_IN = cau_tagStore_26;
      7'd27: cau_tagFifo_D_IN = cau_tagStore_27;
      7'd28: cau_tagFifo_D_IN = cau_tagStore_28;
      7'd29: cau_tagFifo_D_IN = cau_tagStore_29;
      7'd30: cau_tagFifo_D_IN = cau_tagStore_30;
      7'd31: cau_tagFifo_D_IN = cau_tagStore_31;
      7'd32: cau_tagFifo_D_IN = cau_tagStore_32;
      7'd33: cau_tagFifo_D_IN = cau_tagStore_33;
      7'd34: cau_tagFifo_D_IN = cau_tagStore_34;
      7'd35: cau_tagFifo_D_IN = cau_tagStore_35;
      7'd36: cau_tagFifo_D_IN = cau_tagStore_36;
      7'd37: cau_tagFifo_D_IN = cau_tagStore_37;
      7'd38: cau_tagFifo_D_IN = cau_tagStore_38;
      7'd39: cau_tagFifo_D_IN = cau_tagStore_39;
      7'd40: cau_tagFifo_D_IN = cau_tagStore_40;
      7'd41: cau_tagFifo_D_IN = cau_tagStore_41;
      7'd42: cau_tagFifo_D_IN = cau_tagStore_42;
      7'd43: cau_tagFifo_D_IN = cau_tagStore_43;
      7'd44: cau_tagFifo_D_IN = cau_tagStore_44;
      7'd45: cau_tagFifo_D_IN = cau_tagStore_45;
      7'd46: cau_tagFifo_D_IN = cau_tagStore_46;
      7'd47: cau_tagFifo_D_IN = cau_tagStore_47;
      7'd48: cau_tagFifo_D_IN = cau_tagStore_48;
      7'd49: cau_tagFifo_D_IN = cau_tagStore_49;
      7'd50: cau_tagFifo_D_IN = cau_tagStore_50;
      7'd51: cau_tagFifo_D_IN = cau_tagStore_51;
      7'd52: cau_tagFifo_D_IN = cau_tagStore_52;
      7'd53: cau_tagFifo_D_IN = cau_tagStore_53;
      7'd54: cau_tagFifo_D_IN = cau_tagStore_54;
      7'd55: cau_tagFifo_D_IN = cau_tagStore_55;
      7'd56: cau_tagFifo_D_IN = cau_tagStore_56;
      7'd57: cau_tagFifo_D_IN = cau_tagStore_57;
      7'd58: cau_tagFifo_D_IN = cau_tagStore_58;
      7'd59: cau_tagFifo_D_IN = cau_tagStore_59;
      7'd60: cau_tagFifo_D_IN = cau_tagStore_60;
      7'd61: cau_tagFifo_D_IN = cau_tagStore_61;
      7'd62: cau_tagFifo_D_IN = cau_tagStore_62;
      7'd63: cau_tagFifo_D_IN = cau_tagStore_63;
      7'd64: cau_tagFifo_D_IN = cau_tagStore_64;
      7'd65: cau_tagFifo_D_IN = cau_tagStore_65;
      7'd66: cau_tagFifo_D_IN = cau_tagStore_66;
      7'd67: cau_tagFifo_D_IN = cau_tagStore_67;
      7'd68: cau_tagFifo_D_IN = cau_tagStore_68;
      7'd69: cau_tagFifo_D_IN = cau_tagStore_69;
      7'd70: cau_tagFifo_D_IN = cau_tagStore_70;
      7'd71: cau_tagFifo_D_IN = cau_tagStore_71;
      7'd72: cau_tagFifo_D_IN = cau_tagStore_72;
      7'd73: cau_tagFifo_D_IN = cau_tagStore_73;
      7'd74: cau_tagFifo_D_IN = cau_tagStore_74;
      7'd75: cau_tagFifo_D_IN = cau_tagStore_75;
      7'd76: cau_tagFifo_D_IN = cau_tagStore_76;
      7'd77: cau_tagFifo_D_IN = cau_tagStore_77;
      7'd78: cau_tagFifo_D_IN = cau_tagStore_78;
      7'd79: cau_tagFifo_D_IN = cau_tagStore_79;
      7'd80: cau_tagFifo_D_IN = cau_tagStore_80;
      7'd81: cau_tagFifo_D_IN = cau_tagStore_81;
      7'd82: cau_tagFifo_D_IN = cau_tagStore_82;
      7'd83: cau_tagFifo_D_IN = cau_tagStore_83;
      7'd84: cau_tagFifo_D_IN = cau_tagStore_84;
      7'd85: cau_tagFifo_D_IN = cau_tagStore_85;
      7'd86: cau_tagFifo_D_IN = cau_tagStore_86;
      7'd87: cau_tagFifo_D_IN = cau_tagStore_87;
      7'd88: cau_tagFifo_D_IN = cau_tagStore_88;
      7'd89: cau_tagFifo_D_IN = cau_tagStore_89;
      7'd90: cau_tagFifo_D_IN = cau_tagStore_90;
      7'd91: cau_tagFifo_D_IN = cau_tagStore_91;
      7'd92: cau_tagFifo_D_IN = cau_tagStore_92;
      7'd93: cau_tagFifo_D_IN = cau_tagStore_93;
      7'd94: cau_tagFifo_D_IN = cau_tagStore_94;
      7'd95: cau_tagFifo_D_IN = cau_tagStore_95;
      7'd96: cau_tagFifo_D_IN = cau_tagStore_96;
      7'd97: cau_tagFifo_D_IN = cau_tagStore_97;
      7'd98: cau_tagFifo_D_IN = cau_tagStore_98;
      7'd99: cau_tagFifo_D_IN = cau_tagStore_99;
      7'd100: cau_tagFifo_D_IN = cau_tagStore_100;
      7'd101: cau_tagFifo_D_IN = cau_tagStore_101;
      7'd102: cau_tagFifo_D_IN = cau_tagStore_102;
      7'd103: cau_tagFifo_D_IN = cau_tagStore_103;
      7'd104: cau_tagFifo_D_IN = cau_tagStore_104;
      7'd105: cau_tagFifo_D_IN = cau_tagStore_105;
      7'd106: cau_tagFifo_D_IN = cau_tagStore_106;
      7'd107: cau_tagFifo_D_IN = cau_tagStore_107;
      7'd108: cau_tagFifo_D_IN = cau_tagStore_108;
      7'd109: cau_tagFifo_D_IN = cau_tagStore_109;
      7'd110: cau_tagFifo_D_IN = cau_tagStore_110;
      7'd111: cau_tagFifo_D_IN = cau_tagStore_111;
      7'd112: cau_tagFifo_D_IN = cau_tagStore_112;
      7'd113: cau_tagFifo_D_IN = cau_tagStore_113;
      7'd114: cau_tagFifo_D_IN = cau_tagStore_114;
      7'd115: cau_tagFifo_D_IN = cau_tagStore_115;
      7'd116: cau_tagFifo_D_IN = cau_tagStore_116;
      7'd117: cau_tagFifo_D_IN = cau_tagStore_117;
      7'd118: cau_tagFifo_D_IN = cau_tagStore_118;
      7'd119: cau_tagFifo_D_IN = cau_tagStore_119;
      7'd120: cau_tagFifo_D_IN = cau_tagStore_120;
      7'd121: cau_tagFifo_D_IN = cau_tagStore_121;
      7'd122: cau_tagFifo_D_IN = cau_tagStore_122;
      7'd123: cau_tagFifo_D_IN = cau_tagStore_123;
      7'd124: cau_tagFifo_D_IN = cau_tagStore_124;
      7'd125: cau_tagFifo_D_IN = cau_tagStore_125;
      7'd126: cau_tagFifo_D_IN = cau_tagStore_126;
      7'd127: cau_tagFifo_D_IN = cau_tagStore_127;
    endcase
  end
  assign cau_tagFifo_ENQ = MUX_cau_dataStore_memory_put_1__SEL_1 ;
  assign cau_tagFifo_DEQ = WILL_FIRE_RL_handleCAUResponse ;
  assign cau_tagFifo_CLR = 1'b0 ;

  // submodule lineReqQ
  always@(MUX_lineReqQ_enq_1__SEL_1 or
	  MUX_lineReqQ_enq_1__VAL_1 or
	  WILL_FIRE_RL_handleWriteback or
	  MUX_lineReqQ_enq_1__VAL_2 or
	  WILL_FIRE_RL_startPassthrough or MUX_lineReqQ_enq_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      MUX_lineReqQ_enq_1__SEL_1: lineReqQ_D_IN = MUX_lineReqQ_enq_1__VAL_1;
      WILL_FIRE_RL_handleWriteback: lineReqQ_D_IN = MUX_lineReqQ_enq_1__VAL_2;
      WILL_FIRE_RL_startPassthrough:
	  lineReqQ_D_IN = MUX_lineReqQ_enq_1__VAL_3;
      default: lineReqQ_D_IN =
		   547'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign lineReqQ_ENQ =
	     WILL_FIRE_RL_handleCAUResponse && !currReqQ_rv[0] ||
	     WILL_FIRE_RL_handleWriteback ||
	     WILL_FIRE_RL_startPassthrough ;
  assign lineReqQ_DEQ = EN_getToMem ;
  assign lineReqQ_CLR = 1'b0 ;

  // submodule lineRespQ
  assign lineRespQ_D_IN = putFromMem_e ;
  assign lineRespQ_ENQ = EN_putFromMem ;
  assign lineRespQ_DEQ = MUX_state_write_1__SEL_2 ;
  assign lineRespQ_CLR = 1'b0 ;

  // remaining internal signals
  assign IF_cau_dataStore_serverAdapter_outData_ff_i_no_ETC___d158 =
	     cau_dataStore_serverAdapter_outData_ff_EMPTY_N ?
	       cau_dataStore_serverAdapter_outData_ff_D_OUT :
	       cau_dataStore_memory_DO ;
  assign IF_cau_dirtyStore_serverAdapter_outData_ff_i_n_ETC___d145 =
	     (cau_dirtyStore_serverAdapter_outData_ff_EMPTY_N ?
		!cau_dirtyStore_serverAdapter_outData_ff_D_OUT :
		!cau_dirtyStore_memory_DO) ||
	     cau_dataStore_serverAdapter_outData_beforeDeq_Q_OUT ;
  assign IF_cau_dirtyStore_serverAdapter_outData_ff_i_n_ETC___d169 =
	     cau_dirtyStore_serverAdapter_outData_ff_EMPTY_N ?
	       cau_dirtyStore_serverAdapter_outData_ff_D_OUT :
	       cau_dirtyStore_memory_DO ;
  assign IF_currReqQ_rv_port0__read__12_BIT_0_38_THEN_c_ETC___d148 =
	     currReqQ_rv[0] ?
	       cau_dataStore_serverAdapter_outData_beforeDeq_Q_OUT &&
	       !hitQ_rv[128] :
	       cau_dirtyStore_serverAdapter_outData_beforeDeq_Q_OUT &&
	       lineReqQ_FULL_N &&
	       IF_cau_dirtyStore_serverAdapter_outData_ff_i_n_ETC___d145 ;
  assign NOT_putFromProc_passthrough_44_AND_SEL_ARR_cau_ETC___d781 =
	     !putFromProc_passthrough &&
	     tag__h61454 == putFromProc_e[29:11] &&
	     CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 ;
  assign cau_dataStore_serverAdapter_cnt_6_PLUS_IF_cau__ETC___d22 =
	     cau_dataStore_serverAdapter_cnt +
	     (cau_dataStore_serverAdapter_cnt_1_whas ? 3'd1 : 3'd0) +
	     (WILL_FIRE_RL_handleCAUResponse ? 3'd7 : 3'd0) ;
  assign cau_dataStore_serverAdapter_cnt_6_SLT_3___d180 =
	     (cau_dataStore_serverAdapter_cnt ^ 3'h4) < 3'd7 ;
  assign cau_dataStore_serverAdapter_outData_ff_i_notEm_ETC___d151 =
	     (cau_dataStore_serverAdapter_outData_ff_EMPTY_N ||
	      cau_dataStore_serverAdapter_outData_enqw_whas) &&
	     (cau_dirtyStore_serverAdapter_outData_ff_EMPTY_N ||
	      cau_dirtyStore_serverAdapter_outData_enqw_whas) &&
	     cau_tagFifo_EMPTY_N &&
	     IF_currReqQ_rv_port0__read__12_BIT_0_38_THEN_c_ETC___d148 ;
  assign cau_dirtyStore_serverAdapter_cnt_8_PLUS_IF_cau_ETC___d74 =
	     cau_dirtyStore_serverAdapter_cnt +
	     (cau_dirtyStore_serverAdapter_cnt_1_whas ? 3'd1 : 3'd0) +
	     (WILL_FIRE_RL_handleCAUResponse ? 3'd7 : 3'd0) ;
  assign cau_dirtyStore_serverAdapter_cnt_8_SLT_3___d179 =
	     (cau_dirtyStore_serverAdapter_cnt ^ 3'h4) < 3'd7 ;
  assign tag__h61454 = cau_tagFifo_D_IN ;
  assign x_addr__h38212 = { cau_tagFifo_D_OUT, currReqQ_rv[11:5], 4'h0 } ;
  always@(currReqQ_rv or lineRespQ_D_OUT)
  begin
    case (currReqQ_rv[4:3])
      2'd0:
	  CASE_currReqQ_rv_BITS_4_TO_3_0_lineRespQD_OUT_ETC__q1 =
	      lineRespQ_D_OUT[127:0];
      2'd1:
	  CASE_currReqQ_rv_BITS_4_TO_3_0_lineRespQD_OUT_ETC__q1 =
	      lineRespQ_D_OUT[255:128];
      2'd2:
	  CASE_currReqQ_rv_BITS_4_TO_3_0_lineRespQD_OUT_ETC__q1 =
	      lineRespQ_D_OUT[383:256];
      2'd3:
	  CASE_currReqQ_rv_BITS_4_TO_3_0_lineRespQD_OUT_ETC__q1 =
	      lineRespQ_D_OUT[511:384];
    endcase
  end
  always@(currReqQ_rv or
	  IF_cau_dataStore_serverAdapter_outData_ff_i_no_ETC___d158)
  begin
    case (currReqQ_rv[4:3])
      2'd0:
	  CASE_currReqQ_rv_BITS_4_TO_3_0_IF_cau_dataStor_ETC__q2 =
	      IF_cau_dataStore_serverAdapter_outData_ff_i_no_ETC___d158[127:0];
      2'd1:
	  CASE_currReqQ_rv_BITS_4_TO_3_0_IF_cau_dataStor_ETC__q2 =
	      IF_cau_dataStore_serverAdapter_outData_ff_i_no_ETC___d158[255:128];
      2'd2:
	  CASE_currReqQ_rv_BITS_4_TO_3_0_IF_cau_dataStor_ETC__q2 =
	      IF_cau_dataStore_serverAdapter_outData_ff_i_no_ETC___d158[383:256];
      2'd3:
	  CASE_currReqQ_rv_BITS_4_TO_3_0_IF_cau_dataStor_ETC__q2 =
	      IF_cau_dataStore_serverAdapter_outData_ff_i_no_ETC___d158[511:384];
    endcase
  end
  always@(putFromProc_e or cau_validStore)
  begin
    case (putFromProc_e[10:4])
      7'd0:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[0];
      7'd1:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[1];
      7'd2:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[2];
      7'd3:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[3];
      7'd4:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[4];
      7'd5:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[5];
      7'd6:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[6];
      7'd7:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[7];
      7'd8:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[8];
      7'd9:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[9];
      7'd10:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[10];
      7'd11:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[11];
      7'd12:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[12];
      7'd13:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[13];
      7'd14:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[14];
      7'd15:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[15];
      7'd16:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[16];
      7'd17:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[17];
      7'd18:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[18];
      7'd19:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[19];
      7'd20:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[20];
      7'd21:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[21];
      7'd22:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[22];
      7'd23:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[23];
      7'd24:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[24];
      7'd25:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[25];
      7'd26:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[26];
      7'd27:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[27];
      7'd28:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[28];
      7'd29:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[29];
      7'd30:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[30];
      7'd31:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[31];
      7'd32:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[32];
      7'd33:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[33];
      7'd34:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[34];
      7'd35:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[35];
      7'd36:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[36];
      7'd37:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[37];
      7'd38:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[38];
      7'd39:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[39];
      7'd40:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[40];
      7'd41:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[41];
      7'd42:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[42];
      7'd43:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[43];
      7'd44:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[44];
      7'd45:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[45];
      7'd46:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[46];
      7'd47:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[47];
      7'd48:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[48];
      7'd49:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[49];
      7'd50:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[50];
      7'd51:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[51];
      7'd52:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[52];
      7'd53:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[53];
      7'd54:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[54];
      7'd55:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[55];
      7'd56:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[56];
      7'd57:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[57];
      7'd58:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[58];
      7'd59:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[59];
      7'd60:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[60];
      7'd61:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[61];
      7'd62:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[62];
      7'd63:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[63];
      7'd64:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[64];
      7'd65:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[65];
      7'd66:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[66];
      7'd67:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[67];
      7'd68:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[68];
      7'd69:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[69];
      7'd70:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[70];
      7'd71:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[71];
      7'd72:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[72];
      7'd73:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[73];
      7'd74:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[74];
      7'd75:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[75];
      7'd76:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[76];
      7'd77:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[77];
      7'd78:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[78];
      7'd79:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[79];
      7'd80:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[80];
      7'd81:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[81];
      7'd82:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[82];
      7'd83:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[83];
      7'd84:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[84];
      7'd85:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[85];
      7'd86:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[86];
      7'd87:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[87];
      7'd88:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[88];
      7'd89:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[89];
      7'd90:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[90];
      7'd91:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[91];
      7'd92:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[92];
      7'd93:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[93];
      7'd94:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[94];
      7'd95:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[95];
      7'd96:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[96];
      7'd97:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[97];
      7'd98:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[98];
      7'd99:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[99];
      7'd100:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[100];
      7'd101:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[101];
      7'd102:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[102];
      7'd103:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[103];
      7'd104:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[104];
      7'd105:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[105];
      7'd106:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[106];
      7'd107:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[107];
      7'd108:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[108];
      7'd109:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[109];
      7'd110:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[110];
      7'd111:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[111];
      7'd112:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[112];
      7'd113:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[113];
      7'd114:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[114];
      7'd115:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[115];
      7'd116:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[116];
      7'd117:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[117];
      7'd118:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[118];
      7'd119:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[119];
      7'd120:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[120];
      7'd121:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[121];
      7'd122:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[122];
      7'd123:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[123];
      7'd124:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[124];
      7'd125:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[125];
      7'd126:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[126];
      7'd127:
	  CASE_putFromProc_e_BITS_10_TO_4_0_cau_validSto_ETC__q3 =
	      cau_validStore[127];
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        cau_dataStore_serverAdapter_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	cau_dataStore_serverAdapter_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	cau_dataStore_serverAdapter_s2 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	cau_dirtyStore_serverAdapter_cnt <= `BSV_ASSIGNMENT_DELAY 3'd0;
	cau_dirtyStore_serverAdapter_s1 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	cau_dirtyStore_serverAdapter_s2 <= `BSV_ASSIGNMENT_DELAY 2'd0;
	cau_tagStore_0 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_1 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_10 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_100 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_101 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_102 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_103 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_104 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_105 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_106 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_107 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_108 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_109 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_11 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_110 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_111 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_112 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_113 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_114 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_115 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_116 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_117 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_118 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_119 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_12 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_120 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_121 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_122 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_123 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_124 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_125 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_126 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_127 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_13 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_14 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_15 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_16 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_17 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_18 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_19 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_2 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_20 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_21 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_22 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_23 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_24 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_25 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_26 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_27 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_28 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_29 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_3 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_30 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_31 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_32 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_33 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_34 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_35 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_36 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_37 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_38 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_39 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_4 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_40 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_41 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_42 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_43 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_44 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_45 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_46 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_47 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_48 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_49 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_5 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_50 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_51 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_52 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_53 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_54 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_55 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_56 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_57 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_58 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_59 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_6 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_60 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_61 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_62 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_63 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_64 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_65 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_66 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_67 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_68 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_69 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_7 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_70 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_71 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_72 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_73 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_74 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_75 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_76 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_77 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_78 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_79 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_8 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_80 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_81 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_82 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_83 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_84 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_85 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_86 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_87 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_88 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_89 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_9 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_90 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_91 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_92 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_93 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_94 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_95 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_96 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_97 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_98 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_tagStore_99 <= `BSV_ASSIGNMENT_DELAY 19'd0;
	cau_validStore <= `BSV_ASSIGNMENT_DELAY 128'd0;
	currReqQ_rv <= `BSV_ASSIGNMENT_DELAY 32'd715827882;
	cyc <= `BSV_ASSIGNMENT_DELAY 32'd0;
	doInvalidate <= `BSV_ASSIGNMENT_DELAY 1'd0;
	doPassthrough <= `BSV_ASSIGNMENT_DELAY 1'd0;
	hitQ_rv <= `BSV_ASSIGNMENT_DELAY
	    129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	state <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (cau_dataStore_serverAdapter_cnt_EN)
	  cau_dataStore_serverAdapter_cnt <= `BSV_ASSIGNMENT_DELAY
	      cau_dataStore_serverAdapter_cnt_D_IN;
	if (cau_dataStore_serverAdapter_s1_EN)
	  cau_dataStore_serverAdapter_s1 <= `BSV_ASSIGNMENT_DELAY
	      cau_dataStore_serverAdapter_s1_D_IN;
	if (cau_dataStore_serverAdapter_s2_EN)
	  cau_dataStore_serverAdapter_s2 <= `BSV_ASSIGNMENT_DELAY
	      cau_dataStore_serverAdapter_s2_D_IN;
	if (cau_dirtyStore_serverAdapter_cnt_EN)
	  cau_dirtyStore_serverAdapter_cnt <= `BSV_ASSIGNMENT_DELAY
	      cau_dirtyStore_serverAdapter_cnt_D_IN;
	if (cau_dirtyStore_serverAdapter_s1_EN)
	  cau_dirtyStore_serverAdapter_s1 <= `BSV_ASSIGNMENT_DELAY
	      cau_dirtyStore_serverAdapter_s1_D_IN;
	if (cau_dirtyStore_serverAdapter_s2_EN)
	  cau_dirtyStore_serverAdapter_s2 <= `BSV_ASSIGNMENT_DELAY
	      cau_dirtyStore_serverAdapter_s2_D_IN;
	if (cau_tagStore_0_EN)
	  cau_tagStore_0 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_0_D_IN;
	if (cau_tagStore_1_EN)
	  cau_tagStore_1 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_1_D_IN;
	if (cau_tagStore_10_EN)
	  cau_tagStore_10 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_10_D_IN;
	if (cau_tagStore_100_EN)
	  cau_tagStore_100 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_100_D_IN;
	if (cau_tagStore_101_EN)
	  cau_tagStore_101 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_101_D_IN;
	if (cau_tagStore_102_EN)
	  cau_tagStore_102 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_102_D_IN;
	if (cau_tagStore_103_EN)
	  cau_tagStore_103 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_103_D_IN;
	if (cau_tagStore_104_EN)
	  cau_tagStore_104 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_104_D_IN;
	if (cau_tagStore_105_EN)
	  cau_tagStore_105 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_105_D_IN;
	if (cau_tagStore_106_EN)
	  cau_tagStore_106 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_106_D_IN;
	if (cau_tagStore_107_EN)
	  cau_tagStore_107 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_107_D_IN;
	if (cau_tagStore_108_EN)
	  cau_tagStore_108 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_108_D_IN;
	if (cau_tagStore_109_EN)
	  cau_tagStore_109 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_109_D_IN;
	if (cau_tagStore_11_EN)
	  cau_tagStore_11 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_11_D_IN;
	if (cau_tagStore_110_EN)
	  cau_tagStore_110 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_110_D_IN;
	if (cau_tagStore_111_EN)
	  cau_tagStore_111 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_111_D_IN;
	if (cau_tagStore_112_EN)
	  cau_tagStore_112 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_112_D_IN;
	if (cau_tagStore_113_EN)
	  cau_tagStore_113 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_113_D_IN;
	if (cau_tagStore_114_EN)
	  cau_tagStore_114 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_114_D_IN;
	if (cau_tagStore_115_EN)
	  cau_tagStore_115 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_115_D_IN;
	if (cau_tagStore_116_EN)
	  cau_tagStore_116 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_116_D_IN;
	if (cau_tagStore_117_EN)
	  cau_tagStore_117 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_117_D_IN;
	if (cau_tagStore_118_EN)
	  cau_tagStore_118 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_118_D_IN;
	if (cau_tagStore_119_EN)
	  cau_tagStore_119 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_119_D_IN;
	if (cau_tagStore_12_EN)
	  cau_tagStore_12 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_12_D_IN;
	if (cau_tagStore_120_EN)
	  cau_tagStore_120 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_120_D_IN;
	if (cau_tagStore_121_EN)
	  cau_tagStore_121 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_121_D_IN;
	if (cau_tagStore_122_EN)
	  cau_tagStore_122 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_122_D_IN;
	if (cau_tagStore_123_EN)
	  cau_tagStore_123 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_123_D_IN;
	if (cau_tagStore_124_EN)
	  cau_tagStore_124 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_124_D_IN;
	if (cau_tagStore_125_EN)
	  cau_tagStore_125 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_125_D_IN;
	if (cau_tagStore_126_EN)
	  cau_tagStore_126 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_126_D_IN;
	if (cau_tagStore_127_EN)
	  cau_tagStore_127 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_127_D_IN;
	if (cau_tagStore_13_EN)
	  cau_tagStore_13 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_13_D_IN;
	if (cau_tagStore_14_EN)
	  cau_tagStore_14 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_14_D_IN;
	if (cau_tagStore_15_EN)
	  cau_tagStore_15 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_15_D_IN;
	if (cau_tagStore_16_EN)
	  cau_tagStore_16 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_16_D_IN;
	if (cau_tagStore_17_EN)
	  cau_tagStore_17 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_17_D_IN;
	if (cau_tagStore_18_EN)
	  cau_tagStore_18 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_18_D_IN;
	if (cau_tagStore_19_EN)
	  cau_tagStore_19 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_19_D_IN;
	if (cau_tagStore_2_EN)
	  cau_tagStore_2 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_2_D_IN;
	if (cau_tagStore_20_EN)
	  cau_tagStore_20 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_20_D_IN;
	if (cau_tagStore_21_EN)
	  cau_tagStore_21 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_21_D_IN;
	if (cau_tagStore_22_EN)
	  cau_tagStore_22 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_22_D_IN;
	if (cau_tagStore_23_EN)
	  cau_tagStore_23 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_23_D_IN;
	if (cau_tagStore_24_EN)
	  cau_tagStore_24 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_24_D_IN;
	if (cau_tagStore_25_EN)
	  cau_tagStore_25 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_25_D_IN;
	if (cau_tagStore_26_EN)
	  cau_tagStore_26 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_26_D_IN;
	if (cau_tagStore_27_EN)
	  cau_tagStore_27 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_27_D_IN;
	if (cau_tagStore_28_EN)
	  cau_tagStore_28 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_28_D_IN;
	if (cau_tagStore_29_EN)
	  cau_tagStore_29 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_29_D_IN;
	if (cau_tagStore_3_EN)
	  cau_tagStore_3 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_3_D_IN;
	if (cau_tagStore_30_EN)
	  cau_tagStore_30 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_30_D_IN;
	if (cau_tagStore_31_EN)
	  cau_tagStore_31 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_31_D_IN;
	if (cau_tagStore_32_EN)
	  cau_tagStore_32 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_32_D_IN;
	if (cau_tagStore_33_EN)
	  cau_tagStore_33 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_33_D_IN;
	if (cau_tagStore_34_EN)
	  cau_tagStore_34 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_34_D_IN;
	if (cau_tagStore_35_EN)
	  cau_tagStore_35 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_35_D_IN;
	if (cau_tagStore_36_EN)
	  cau_tagStore_36 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_36_D_IN;
	if (cau_tagStore_37_EN)
	  cau_tagStore_37 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_37_D_IN;
	if (cau_tagStore_38_EN)
	  cau_tagStore_38 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_38_D_IN;
	if (cau_tagStore_39_EN)
	  cau_tagStore_39 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_39_D_IN;
	if (cau_tagStore_4_EN)
	  cau_tagStore_4 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_4_D_IN;
	if (cau_tagStore_40_EN)
	  cau_tagStore_40 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_40_D_IN;
	if (cau_tagStore_41_EN)
	  cau_tagStore_41 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_41_D_IN;
	if (cau_tagStore_42_EN)
	  cau_tagStore_42 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_42_D_IN;
	if (cau_tagStore_43_EN)
	  cau_tagStore_43 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_43_D_IN;
	if (cau_tagStore_44_EN)
	  cau_tagStore_44 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_44_D_IN;
	if (cau_tagStore_45_EN)
	  cau_tagStore_45 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_45_D_IN;
	if (cau_tagStore_46_EN)
	  cau_tagStore_46 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_46_D_IN;
	if (cau_tagStore_47_EN)
	  cau_tagStore_47 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_47_D_IN;
	if (cau_tagStore_48_EN)
	  cau_tagStore_48 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_48_D_IN;
	if (cau_tagStore_49_EN)
	  cau_tagStore_49 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_49_D_IN;
	if (cau_tagStore_5_EN)
	  cau_tagStore_5 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_5_D_IN;
	if (cau_tagStore_50_EN)
	  cau_tagStore_50 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_50_D_IN;
	if (cau_tagStore_51_EN)
	  cau_tagStore_51 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_51_D_IN;
	if (cau_tagStore_52_EN)
	  cau_tagStore_52 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_52_D_IN;
	if (cau_tagStore_53_EN)
	  cau_tagStore_53 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_53_D_IN;
	if (cau_tagStore_54_EN)
	  cau_tagStore_54 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_54_D_IN;
	if (cau_tagStore_55_EN)
	  cau_tagStore_55 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_55_D_IN;
	if (cau_tagStore_56_EN)
	  cau_tagStore_56 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_56_D_IN;
	if (cau_tagStore_57_EN)
	  cau_tagStore_57 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_57_D_IN;
	if (cau_tagStore_58_EN)
	  cau_tagStore_58 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_58_D_IN;
	if (cau_tagStore_59_EN)
	  cau_tagStore_59 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_59_D_IN;
	if (cau_tagStore_6_EN)
	  cau_tagStore_6 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_6_D_IN;
	if (cau_tagStore_60_EN)
	  cau_tagStore_60 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_60_D_IN;
	if (cau_tagStore_61_EN)
	  cau_tagStore_61 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_61_D_IN;
	if (cau_tagStore_62_EN)
	  cau_tagStore_62 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_62_D_IN;
	if (cau_tagStore_63_EN)
	  cau_tagStore_63 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_63_D_IN;
	if (cau_tagStore_64_EN)
	  cau_tagStore_64 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_64_D_IN;
	if (cau_tagStore_65_EN)
	  cau_tagStore_65 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_65_D_IN;
	if (cau_tagStore_66_EN)
	  cau_tagStore_66 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_66_D_IN;
	if (cau_tagStore_67_EN)
	  cau_tagStore_67 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_67_D_IN;
	if (cau_tagStore_68_EN)
	  cau_tagStore_68 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_68_D_IN;
	if (cau_tagStore_69_EN)
	  cau_tagStore_69 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_69_D_IN;
	if (cau_tagStore_7_EN)
	  cau_tagStore_7 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_7_D_IN;
	if (cau_tagStore_70_EN)
	  cau_tagStore_70 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_70_D_IN;
	if (cau_tagStore_71_EN)
	  cau_tagStore_71 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_71_D_IN;
	if (cau_tagStore_72_EN)
	  cau_tagStore_72 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_72_D_IN;
	if (cau_tagStore_73_EN)
	  cau_tagStore_73 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_73_D_IN;
	if (cau_tagStore_74_EN)
	  cau_tagStore_74 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_74_D_IN;
	if (cau_tagStore_75_EN)
	  cau_tagStore_75 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_75_D_IN;
	if (cau_tagStore_76_EN)
	  cau_tagStore_76 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_76_D_IN;
	if (cau_tagStore_77_EN)
	  cau_tagStore_77 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_77_D_IN;
	if (cau_tagStore_78_EN)
	  cau_tagStore_78 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_78_D_IN;
	if (cau_tagStore_79_EN)
	  cau_tagStore_79 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_79_D_IN;
	if (cau_tagStore_8_EN)
	  cau_tagStore_8 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_8_D_IN;
	if (cau_tagStore_80_EN)
	  cau_tagStore_80 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_80_D_IN;
	if (cau_tagStore_81_EN)
	  cau_tagStore_81 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_81_D_IN;
	if (cau_tagStore_82_EN)
	  cau_tagStore_82 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_82_D_IN;
	if (cau_tagStore_83_EN)
	  cau_tagStore_83 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_83_D_IN;
	if (cau_tagStore_84_EN)
	  cau_tagStore_84 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_84_D_IN;
	if (cau_tagStore_85_EN)
	  cau_tagStore_85 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_85_D_IN;
	if (cau_tagStore_86_EN)
	  cau_tagStore_86 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_86_D_IN;
	if (cau_tagStore_87_EN)
	  cau_tagStore_87 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_87_D_IN;
	if (cau_tagStore_88_EN)
	  cau_tagStore_88 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_88_D_IN;
	if (cau_tagStore_89_EN)
	  cau_tagStore_89 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_89_D_IN;
	if (cau_tagStore_9_EN)
	  cau_tagStore_9 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_9_D_IN;
	if (cau_tagStore_90_EN)
	  cau_tagStore_90 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_90_D_IN;
	if (cau_tagStore_91_EN)
	  cau_tagStore_91 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_91_D_IN;
	if (cau_tagStore_92_EN)
	  cau_tagStore_92 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_92_D_IN;
	if (cau_tagStore_93_EN)
	  cau_tagStore_93 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_93_D_IN;
	if (cau_tagStore_94_EN)
	  cau_tagStore_94 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_94_D_IN;
	if (cau_tagStore_95_EN)
	  cau_tagStore_95 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_95_D_IN;
	if (cau_tagStore_96_EN)
	  cau_tagStore_96 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_96_D_IN;
	if (cau_tagStore_97_EN)
	  cau_tagStore_97 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_97_D_IN;
	if (cau_tagStore_98_EN)
	  cau_tagStore_98 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_98_D_IN;
	if (cau_tagStore_99_EN)
	  cau_tagStore_99 <= `BSV_ASSIGNMENT_DELAY cau_tagStore_99_D_IN;
	if (cau_validStore_EN)
	  cau_validStore <= `BSV_ASSIGNMENT_DELAY cau_validStore_D_IN;
	if (currReqQ_rv_EN)
	  currReqQ_rv <= `BSV_ASSIGNMENT_DELAY currReqQ_rv_D_IN;
	if (cyc_EN) cyc <= `BSV_ASSIGNMENT_DELAY cyc_D_IN;
	if (doInvalidate_EN)
	  doInvalidate <= `BSV_ASSIGNMENT_DELAY doInvalidate_D_IN;
	if (doPassthrough_EN)
	  doPassthrough <= `BSV_ASSIGNMENT_DELAY doPassthrough_D_IN;
	if (hitQ_rv_EN) hitQ_rv <= `BSV_ASSIGNMENT_DELAY hitQ_rv_D_IN;
	if (state_EN) state <= `BSV_ASSIGNMENT_DELAY state_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cau_dataStore_serverAdapter_cnt = 3'h2;
    cau_dataStore_serverAdapter_s1 = 2'h2;
    cau_dataStore_serverAdapter_s2 = 2'h2;
    cau_dirtyStore_serverAdapter_cnt = 3'h2;
    cau_dirtyStore_serverAdapter_s1 = 2'h2;
    cau_dirtyStore_serverAdapter_s2 = 2'h2;
    cau_tagStore_0 = 19'h2AAAA;
    cau_tagStore_1 = 19'h2AAAA;
    cau_tagStore_10 = 19'h2AAAA;
    cau_tagStore_100 = 19'h2AAAA;
    cau_tagStore_101 = 19'h2AAAA;
    cau_tagStore_102 = 19'h2AAAA;
    cau_tagStore_103 = 19'h2AAAA;
    cau_tagStore_104 = 19'h2AAAA;
    cau_tagStore_105 = 19'h2AAAA;
    cau_tagStore_106 = 19'h2AAAA;
    cau_tagStore_107 = 19'h2AAAA;
    cau_tagStore_108 = 19'h2AAAA;
    cau_tagStore_109 = 19'h2AAAA;
    cau_tagStore_11 = 19'h2AAAA;
    cau_tagStore_110 = 19'h2AAAA;
    cau_tagStore_111 = 19'h2AAAA;
    cau_tagStore_112 = 19'h2AAAA;
    cau_tagStore_113 = 19'h2AAAA;
    cau_tagStore_114 = 19'h2AAAA;
    cau_tagStore_115 = 19'h2AAAA;
    cau_tagStore_116 = 19'h2AAAA;
    cau_tagStore_117 = 19'h2AAAA;
    cau_tagStore_118 = 19'h2AAAA;
    cau_tagStore_119 = 19'h2AAAA;
    cau_tagStore_12 = 19'h2AAAA;
    cau_tagStore_120 = 19'h2AAAA;
    cau_tagStore_121 = 19'h2AAAA;
    cau_tagStore_122 = 19'h2AAAA;
    cau_tagStore_123 = 19'h2AAAA;
    cau_tagStore_124 = 19'h2AAAA;
    cau_tagStore_125 = 19'h2AAAA;
    cau_tagStore_126 = 19'h2AAAA;
    cau_tagStore_127 = 19'h2AAAA;
    cau_tagStore_13 = 19'h2AAAA;
    cau_tagStore_14 = 19'h2AAAA;
    cau_tagStore_15 = 19'h2AAAA;
    cau_tagStore_16 = 19'h2AAAA;
    cau_tagStore_17 = 19'h2AAAA;
    cau_tagStore_18 = 19'h2AAAA;
    cau_tagStore_19 = 19'h2AAAA;
    cau_tagStore_2 = 19'h2AAAA;
    cau_tagStore_20 = 19'h2AAAA;
    cau_tagStore_21 = 19'h2AAAA;
    cau_tagStore_22 = 19'h2AAAA;
    cau_tagStore_23 = 19'h2AAAA;
    cau_tagStore_24 = 19'h2AAAA;
    cau_tagStore_25 = 19'h2AAAA;
    cau_tagStore_26 = 19'h2AAAA;
    cau_tagStore_27 = 19'h2AAAA;
    cau_tagStore_28 = 19'h2AAAA;
    cau_tagStore_29 = 19'h2AAAA;
    cau_tagStore_3 = 19'h2AAAA;
    cau_tagStore_30 = 19'h2AAAA;
    cau_tagStore_31 = 19'h2AAAA;
    cau_tagStore_32 = 19'h2AAAA;
    cau_tagStore_33 = 19'h2AAAA;
    cau_tagStore_34 = 19'h2AAAA;
    cau_tagStore_35 = 19'h2AAAA;
    cau_tagStore_36 = 19'h2AAAA;
    cau_tagStore_37 = 19'h2AAAA;
    cau_tagStore_38 = 19'h2AAAA;
    cau_tagStore_39 = 19'h2AAAA;
    cau_tagStore_4 = 19'h2AAAA;
    cau_tagStore_40 = 19'h2AAAA;
    cau_tagStore_41 = 19'h2AAAA;
    cau_tagStore_42 = 19'h2AAAA;
    cau_tagStore_43 = 19'h2AAAA;
    cau_tagStore_44 = 19'h2AAAA;
    cau_tagStore_45 = 19'h2AAAA;
    cau_tagStore_46 = 19'h2AAAA;
    cau_tagStore_47 = 19'h2AAAA;
    cau_tagStore_48 = 19'h2AAAA;
    cau_tagStore_49 = 19'h2AAAA;
    cau_tagStore_5 = 19'h2AAAA;
    cau_tagStore_50 = 19'h2AAAA;
    cau_tagStore_51 = 19'h2AAAA;
    cau_tagStore_52 = 19'h2AAAA;
    cau_tagStore_53 = 19'h2AAAA;
    cau_tagStore_54 = 19'h2AAAA;
    cau_tagStore_55 = 19'h2AAAA;
    cau_tagStore_56 = 19'h2AAAA;
    cau_tagStore_57 = 19'h2AAAA;
    cau_tagStore_58 = 19'h2AAAA;
    cau_tagStore_59 = 19'h2AAAA;
    cau_tagStore_6 = 19'h2AAAA;
    cau_tagStore_60 = 19'h2AAAA;
    cau_tagStore_61 = 19'h2AAAA;
    cau_tagStore_62 = 19'h2AAAA;
    cau_tagStore_63 = 19'h2AAAA;
    cau_tagStore_64 = 19'h2AAAA;
    cau_tagStore_65 = 19'h2AAAA;
    cau_tagStore_66 = 19'h2AAAA;
    cau_tagStore_67 = 19'h2AAAA;
    cau_tagStore_68 = 19'h2AAAA;
    cau_tagStore_69 = 19'h2AAAA;
    cau_tagStore_7 = 19'h2AAAA;
    cau_tagStore_70 = 19'h2AAAA;
    cau_tagStore_71 = 19'h2AAAA;
    cau_tagStore_72 = 19'h2AAAA;
    cau_tagStore_73 = 19'h2AAAA;
    cau_tagStore_74 = 19'h2AAAA;
    cau_tagStore_75 = 19'h2AAAA;
    cau_tagStore_76 = 19'h2AAAA;
    cau_tagStore_77 = 19'h2AAAA;
    cau_tagStore_78 = 19'h2AAAA;
    cau_tagStore_79 = 19'h2AAAA;
    cau_tagStore_8 = 19'h2AAAA;
    cau_tagStore_80 = 19'h2AAAA;
    cau_tagStore_81 = 19'h2AAAA;
    cau_tagStore_82 = 19'h2AAAA;
    cau_tagStore_83 = 19'h2AAAA;
    cau_tagStore_84 = 19'h2AAAA;
    cau_tagStore_85 = 19'h2AAAA;
    cau_tagStore_86 = 19'h2AAAA;
    cau_tagStore_87 = 19'h2AAAA;
    cau_tagStore_88 = 19'h2AAAA;
    cau_tagStore_89 = 19'h2AAAA;
    cau_tagStore_9 = 19'h2AAAA;
    cau_tagStore_90 = 19'h2AAAA;
    cau_tagStore_91 = 19'h2AAAA;
    cau_tagStore_92 = 19'h2AAAA;
    cau_tagStore_93 = 19'h2AAAA;
    cau_tagStore_94 = 19'h2AAAA;
    cau_tagStore_95 = 19'h2AAAA;
    cau_tagStore_96 = 19'h2AAAA;
    cau_tagStore_97 = 19'h2AAAA;
    cau_tagStore_98 = 19'h2AAAA;
    cau_tagStore_99 = 19'h2AAAA;
    cau_validStore = 128'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    currReqQ_rv = 32'hAAAAAAAA;
    cyc = 32'hAAAAAAAA;
    doInvalidate = 1'h0;
    doPassthrough = 1'h0;
    hitQ_rv = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    state = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_handleWriteback && currReqQ_rv[0])
	$display("Sanity check failed, handling writeback for a hit request?");
    if (RST_N != `BSV_RESET_VALUE)
      if (cau_dataStore_serverAdapter_s2[1] &&
	  (!cau_dataStore_serverAdapter_outData_beforeEnq_Q_OUT ||
	   !cau_dataStore_serverAdapter_outData_beforeDeq_Q_OUT ||
	   !cau_dataStore_serverAdapter_outData_ff_FULL_N))
	$display("ERROR: %m: mkBRAMAdapter overrun");
    if (RST_N != `BSV_RESET_VALUE)
      if (cau_dirtyStore_serverAdapter_s2[1] &&
	  (!cau_dirtyStore_serverAdapter_outData_beforeEnq_Q_OUT ||
	   !cau_dirtyStore_serverAdapter_outData_beforeDeq_Q_OUT ||
	   !cau_dirtyStore_serverAdapter_outData_ff_FULL_N))
	$display("ERROR: %m: mkBRAMAdapter overrun");
  end
  // synopsys translate_on
endmodule  // mkICache

