//
// Generated by Bluespec Compiler, version 2024.07 (build b4f31db)
//
// On Wed Jan  8 18:48:57 CST 2025
//
//
// Ports:
// Name                         I/O  size props
// getBusReq                      O   547 reg
// RDY_getBusReq                  O     1 reg
// RDY_putBusResp                 O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// putBusResp_r                   I   512 reg
// putIrq_irq                     I     1
// putBusError_busError           I     1
// EN_putBusResp                  I     1
// EN_getBusReq                   I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkVROOM(CLK,
	       RST_N,

	       EN_getBusReq,
	       getBusReq,
	       RDY_getBusReq,

	       putBusResp_r,
	       EN_putBusResp,
	       RDY_putBusResp,

	       putIrq_irq,

	       putBusError_busError);
  input  CLK;
  input  RST_N;

  // actionvalue method getBusReq
  input  EN_getBusReq;
  output [546 : 0] getBusReq;
  output RDY_getBusReq;

  // action method putBusResp
  input  [511 : 0] putBusResp_r;
  input  EN_putBusResp;
  output RDY_putBusResp;

  // action method putIrq
  input  putIrq_irq;

  // action method putBusError
  input  putBusError_busError;

  // signals for module outputs
  wire [546 : 0] getBusReq;
  wire RDY_getBusReq, RDY_putBusResp;

  // inlined wires
  wire [129 : 0] mu_reqs_rv_port0__write_1,
		 mu_reqs_rv_port1__read,
		 mu_reqs_rv_port2__read;
  wire [128 : 0] fromImem_rv_port0__write_1,
		 fromImem_rv_port1__read,
		 fromImem_rv_port2__read;
  wire [66 : 0] mu_storeQueue_rv_port1__read,
		mu_storeQueue_rv_port1__write_1,
		mu_storeQueue_rv_port2__read;
  wire [32 : 0] fromDmem_rv_port0__write_1,
		fromDmem_rv_port1__read,
		fromDmem_rv_port2__read;
  wire [5 : 0] busTracker_rv_port1__read,
	       busTracker_rv_port1__write_1,
	       busTracker_rv_port2__read;
  wire busTracker_rv_EN_port1__write,
       crs_crf_0_port_0_whas,
       crs_crf_10_port_0_whas,
       crs_crf_11_port_0_whas,
       crs_crf_12_port_0_whas,
       crs_crf_13_port_0_whas,
       crs_crf_14_port_0_whas,
       crs_crf_15_port_0_whas,
       crs_crf_16_port_0_whas,
       crs_crf_17_port_0_whas,
       crs_crf_18_port_0_whas,
       crs_crf_19_port_0_whas,
       crs_crf_1_port_0_whas,
       crs_crf_20_port_0_whas,
       crs_crf_21_port_0_whas,
       crs_crf_22_port_0_whas,
       crs_crf_23_port_0_whas,
       crs_crf_24_port_0_whas,
       crs_crf_25_port_0_whas,
       crs_crf_26_port_0_whas,
       crs_crf_27_port_0_whas,
       crs_crf_28_port_0_whas,
       crs_crf_29_port_0_whas,
       crs_crf_2_port_0_whas,
       crs_crf_30_port_0_whas,
       crs_crf_31_port_0_whas,
       crs_crf_3_port_0_whas,
       crs_crf_4_port_0_whas,
       crs_crf_5_port_0_whas,
       crs_crf_6_port_0_whas,
       crs_crf_7_port_0_whas,
       crs_crf_8_port_0_whas,
       crs_crf_9_port_0_whas,
       decode_freeReg_whas,
       decode_incCounter_whas,
       decode_markReg_whas,
       decode_sc_ready_0_port_0_wget,
       decode_sc_ready_0_port_0_whas,
       decode_sc_ready_0_port_1_wget,
       decode_sc_ready_0_port_1_whas,
       decode_sc_ready_10_port_0_wget,
       decode_sc_ready_10_port_0_whas,
       decode_sc_ready_10_port_1_wget,
       decode_sc_ready_10_port_1_whas,
       decode_sc_ready_11_port_0_wget,
       decode_sc_ready_11_port_0_whas,
       decode_sc_ready_11_port_1_wget,
       decode_sc_ready_11_port_1_whas,
       decode_sc_ready_12_port_0_wget,
       decode_sc_ready_12_port_0_whas,
       decode_sc_ready_12_port_1_wget,
       decode_sc_ready_12_port_1_whas,
       decode_sc_ready_13_port_0_wget,
       decode_sc_ready_13_port_0_whas,
       decode_sc_ready_13_port_1_wget,
       decode_sc_ready_13_port_1_whas,
       decode_sc_ready_14_port_0_wget,
       decode_sc_ready_14_port_0_whas,
       decode_sc_ready_14_port_1_wget,
       decode_sc_ready_14_port_1_whas,
       decode_sc_ready_15_port_0_wget,
       decode_sc_ready_15_port_0_whas,
       decode_sc_ready_15_port_1_wget,
       decode_sc_ready_15_port_1_whas,
       decode_sc_ready_16_port_0_wget,
       decode_sc_ready_16_port_0_whas,
       decode_sc_ready_16_port_1_wget,
       decode_sc_ready_16_port_1_whas,
       decode_sc_ready_17_port_0_wget,
       decode_sc_ready_17_port_0_whas,
       decode_sc_ready_17_port_1_wget,
       decode_sc_ready_17_port_1_whas,
       decode_sc_ready_18_port_0_wget,
       decode_sc_ready_18_port_0_whas,
       decode_sc_ready_18_port_1_wget,
       decode_sc_ready_18_port_1_whas,
       decode_sc_ready_19_port_0_wget,
       decode_sc_ready_19_port_0_whas,
       decode_sc_ready_19_port_1_wget,
       decode_sc_ready_19_port_1_whas,
       decode_sc_ready_1_port_0_wget,
       decode_sc_ready_1_port_0_whas,
       decode_sc_ready_1_port_1_wget,
       decode_sc_ready_1_port_1_whas,
       decode_sc_ready_20_port_0_wget,
       decode_sc_ready_20_port_0_whas,
       decode_sc_ready_20_port_1_wget,
       decode_sc_ready_20_port_1_whas,
       decode_sc_ready_21_port_0_wget,
       decode_sc_ready_21_port_0_whas,
       decode_sc_ready_21_port_1_wget,
       decode_sc_ready_21_port_1_whas,
       decode_sc_ready_22_port_0_wget,
       decode_sc_ready_22_port_0_whas,
       decode_sc_ready_22_port_1_wget,
       decode_sc_ready_22_port_1_whas,
       decode_sc_ready_23_port_0_wget,
       decode_sc_ready_23_port_0_whas,
       decode_sc_ready_23_port_1_wget,
       decode_sc_ready_23_port_1_whas,
       decode_sc_ready_24_port_0_wget,
       decode_sc_ready_24_port_0_whas,
       decode_sc_ready_24_port_1_wget,
       decode_sc_ready_24_port_1_whas,
       decode_sc_ready_25_port_0_wget,
       decode_sc_ready_25_port_0_whas,
       decode_sc_ready_25_port_1_wget,
       decode_sc_ready_25_port_1_whas,
       decode_sc_ready_26_port_0_wget,
       decode_sc_ready_26_port_0_whas,
       decode_sc_ready_26_port_1_wget,
       decode_sc_ready_26_port_1_whas,
       decode_sc_ready_27_port_0_wget,
       decode_sc_ready_27_port_0_whas,
       decode_sc_ready_27_port_1_wget,
       decode_sc_ready_27_port_1_whas,
       decode_sc_ready_28_port_0_wget,
       decode_sc_ready_28_port_0_whas,
       decode_sc_ready_28_port_1_wget,
       decode_sc_ready_28_port_1_whas,
       decode_sc_ready_29_port_0_wget,
       decode_sc_ready_29_port_0_whas,
       decode_sc_ready_29_port_1_wget,
       decode_sc_ready_29_port_1_whas,
       decode_sc_ready_2_port_0_wget,
       decode_sc_ready_2_port_0_whas,
       decode_sc_ready_2_port_1_wget,
       decode_sc_ready_2_port_1_whas,
       decode_sc_ready_30_port_0_wget,
       decode_sc_ready_30_port_0_whas,
       decode_sc_ready_30_port_1_wget,
       decode_sc_ready_30_port_1_whas,
       decode_sc_ready_31_port_0_wget,
       decode_sc_ready_31_port_0_whas,
       decode_sc_ready_31_port_1_wget,
       decode_sc_ready_31_port_1_whas,
       decode_sc_ready_3_port_0_wget,
       decode_sc_ready_3_port_0_whas,
       decode_sc_ready_3_port_1_wget,
       decode_sc_ready_3_port_1_whas,
       decode_sc_ready_4_port_0_wget,
       decode_sc_ready_4_port_0_whas,
       decode_sc_ready_4_port_1_wget,
       decode_sc_ready_4_port_1_whas,
       decode_sc_ready_5_port_0_wget,
       decode_sc_ready_5_port_0_whas,
       decode_sc_ready_5_port_1_wget,
       decode_sc_ready_5_port_1_whas,
       decode_sc_ready_6_port_0_wget,
       decode_sc_ready_6_port_0_whas,
       decode_sc_ready_6_port_1_wget,
       decode_sc_ready_6_port_1_whas,
       decode_sc_ready_7_port_0_wget,
       decode_sc_ready_7_port_0_whas,
       decode_sc_ready_7_port_1_wget,
       decode_sc_ready_7_port_1_whas,
       decode_sc_ready_8_port_0_wget,
       decode_sc_ready_8_port_0_whas,
       decode_sc_ready_8_port_1_wget,
       decode_sc_ready_8_port_1_whas,
       decode_sc_ready_9_port_0_wget,
       decode_sc_ready_9_port_0_whas,
       decode_sc_ready_9_port_1_wget,
       decode_sc_ready_9_port_1_whas,
       fetch_pc_port_0_whas,
       fetch_pc_port_1_whas,
       fromDmem_rv_EN_port0__write,
       fromDmem_rv_EN_port1__write,
       fromImem_rv_EN_port0__write,
       fromImem_rv_EN_port1__write,
       fsm_restartDecode_whas,
       fsm_stopDecode_whas,
       globalFlushStall_setState_whas,
       mdu_fsm_start_wire_whas,
       mdu_fsm_state_set_pw_whas,
       mu_reqs_rv_EN_port0__write,
       mu_reqs_rv_EN_port1__write,
       mu_storeQueue_rv_EN_port1__write,
       npc_port_1_whas;

  // register busTracker_rv
  reg [5 : 0] busTracker_rv;
  wire [5 : 0] busTracker_rv_D_IN;
  wire busTracker_rv_EN;

  // register crs_crf_0_register
  reg [31 : 0] crs_crf_0_register;
  wire [31 : 0] crs_crf_0_register_D_IN;
  wire crs_crf_0_register_EN;

  // register crs_crf_10_register
  reg [31 : 0] crs_crf_10_register;
  wire [31 : 0] crs_crf_10_register_D_IN;
  wire crs_crf_10_register_EN;

  // register crs_crf_11_register
  reg [31 : 0] crs_crf_11_register;
  wire [31 : 0] crs_crf_11_register_D_IN;
  wire crs_crf_11_register_EN;

  // register crs_crf_12_register
  reg [31 : 0] crs_crf_12_register;
  wire [31 : 0] crs_crf_12_register_D_IN;
  wire crs_crf_12_register_EN;

  // register crs_crf_13_register
  reg [31 : 0] crs_crf_13_register;
  wire [31 : 0] crs_crf_13_register_D_IN;
  wire crs_crf_13_register_EN;

  // register crs_crf_14_register
  reg [31 : 0] crs_crf_14_register;
  wire [31 : 0] crs_crf_14_register_D_IN;
  wire crs_crf_14_register_EN;

  // register crs_crf_15_register
  reg [31 : 0] crs_crf_15_register;
  wire [31 : 0] crs_crf_15_register_D_IN;
  wire crs_crf_15_register_EN;

  // register crs_crf_16_register
  reg [31 : 0] crs_crf_16_register;
  wire [31 : 0] crs_crf_16_register_D_IN;
  wire crs_crf_16_register_EN;

  // register crs_crf_17_register
  reg [31 : 0] crs_crf_17_register;
  wire [31 : 0] crs_crf_17_register_D_IN;
  wire crs_crf_17_register_EN;

  // register crs_crf_18_register
  reg [31 : 0] crs_crf_18_register;
  wire [31 : 0] crs_crf_18_register_D_IN;
  wire crs_crf_18_register_EN;

  // register crs_crf_19_register
  reg [31 : 0] crs_crf_19_register;
  wire [31 : 0] crs_crf_19_register_D_IN;
  wire crs_crf_19_register_EN;

  // register crs_crf_1_register
  reg [31 : 0] crs_crf_1_register;
  wire [31 : 0] crs_crf_1_register_D_IN;
  wire crs_crf_1_register_EN;

  // register crs_crf_20_register
  reg [31 : 0] crs_crf_20_register;
  wire [31 : 0] crs_crf_20_register_D_IN;
  wire crs_crf_20_register_EN;

  // register crs_crf_21_register
  reg [31 : 0] crs_crf_21_register;
  wire [31 : 0] crs_crf_21_register_D_IN;
  wire crs_crf_21_register_EN;

  // register crs_crf_22_register
  reg [31 : 0] crs_crf_22_register;
  wire [31 : 0] crs_crf_22_register_D_IN;
  wire crs_crf_22_register_EN;

  // register crs_crf_23_register
  reg [31 : 0] crs_crf_23_register;
  wire [31 : 0] crs_crf_23_register_D_IN;
  wire crs_crf_23_register_EN;

  // register crs_crf_24_register
  reg [31 : 0] crs_crf_24_register;
  wire [31 : 0] crs_crf_24_register_D_IN;
  wire crs_crf_24_register_EN;

  // register crs_crf_25_register
  reg [31 : 0] crs_crf_25_register;
  wire [31 : 0] crs_crf_25_register_D_IN;
  wire crs_crf_25_register_EN;

  // register crs_crf_26_register
  reg [31 : 0] crs_crf_26_register;
  wire [31 : 0] crs_crf_26_register_D_IN;
  wire crs_crf_26_register_EN;

  // register crs_crf_27_register
  reg [31 : 0] crs_crf_27_register;
  wire [31 : 0] crs_crf_27_register_D_IN;
  wire crs_crf_27_register_EN;

  // register crs_crf_28_register
  reg [31 : 0] crs_crf_28_register;
  wire [31 : 0] crs_crf_28_register_D_IN;
  wire crs_crf_28_register_EN;

  // register crs_crf_29_register
  reg [31 : 0] crs_crf_29_register;
  wire [31 : 0] crs_crf_29_register_D_IN;
  wire crs_crf_29_register_EN;

  // register crs_crf_2_register
  reg [31 : 0] crs_crf_2_register;
  wire [31 : 0] crs_crf_2_register_D_IN;
  wire crs_crf_2_register_EN;

  // register crs_crf_30_register
  reg [31 : 0] crs_crf_30_register;
  wire [31 : 0] crs_crf_30_register_D_IN;
  wire crs_crf_30_register_EN;

  // register crs_crf_31_register
  reg [31 : 0] crs_crf_31_register;
  wire [31 : 0] crs_crf_31_register_D_IN;
  wire crs_crf_31_register_EN;

  // register crs_crf_3_register
  reg [31 : 0] crs_crf_3_register;
  wire [31 : 0] crs_crf_3_register_D_IN;
  wire crs_crf_3_register_EN;

  // register crs_crf_4_register
  reg [31 : 0] crs_crf_4_register;
  wire [31 : 0] crs_crf_4_register_D_IN;
  wire crs_crf_4_register_EN;

  // register crs_crf_5_register
  reg [31 : 0] crs_crf_5_register;
  wire [31 : 0] crs_crf_5_register_D_IN;
  wire crs_crf_5_register_EN;

  // register crs_crf_6_register
  reg [31 : 0] crs_crf_6_register;
  wire [31 : 0] crs_crf_6_register_D_IN;
  wire crs_crf_6_register_EN;

  // register crs_crf_7_register
  reg [31 : 0] crs_crf_7_register;
  wire [31 : 0] crs_crf_7_register_D_IN;
  wire crs_crf_7_register_EN;

  // register crs_crf_8_register
  reg [31 : 0] crs_crf_8_register;
  wire [31 : 0] crs_crf_8_register_D_IN;
  wire crs_crf_8_register_EN;

  // register crs_crf_9_register
  reg [31 : 0] crs_crf_9_register;
  wire [31 : 0] crs_crf_9_register_D_IN;
  wire crs_crf_9_register_EN;

  // register decode_fetchedLine
  reg [127 : 0] decode_fetchedLine;
  wire [127 : 0] decode_fetchedLine_D_IN;
  wire decode_fetchedLine_EN;

  // register decode_inflightCounter
  reg [3 : 0] decode_inflightCounter;
  wire [3 : 0] decode_inflightCounter_D_IN;
  wire decode_inflightCounter_EN;

  // register decode_sc_ready_0_register
  reg decode_sc_ready_0_register;
  wire decode_sc_ready_0_register_D_IN, decode_sc_ready_0_register_EN;

  // register decode_sc_ready_10_register
  reg decode_sc_ready_10_register;
  wire decode_sc_ready_10_register_D_IN, decode_sc_ready_10_register_EN;

  // register decode_sc_ready_11_register
  reg decode_sc_ready_11_register;
  wire decode_sc_ready_11_register_D_IN, decode_sc_ready_11_register_EN;

  // register decode_sc_ready_12_register
  reg decode_sc_ready_12_register;
  wire decode_sc_ready_12_register_D_IN, decode_sc_ready_12_register_EN;

  // register decode_sc_ready_13_register
  reg decode_sc_ready_13_register;
  wire decode_sc_ready_13_register_D_IN, decode_sc_ready_13_register_EN;

  // register decode_sc_ready_14_register
  reg decode_sc_ready_14_register;
  wire decode_sc_ready_14_register_D_IN, decode_sc_ready_14_register_EN;

  // register decode_sc_ready_15_register
  reg decode_sc_ready_15_register;
  wire decode_sc_ready_15_register_D_IN, decode_sc_ready_15_register_EN;

  // register decode_sc_ready_16_register
  reg decode_sc_ready_16_register;
  wire decode_sc_ready_16_register_D_IN, decode_sc_ready_16_register_EN;

  // register decode_sc_ready_17_register
  reg decode_sc_ready_17_register;
  wire decode_sc_ready_17_register_D_IN, decode_sc_ready_17_register_EN;

  // register decode_sc_ready_18_register
  reg decode_sc_ready_18_register;
  wire decode_sc_ready_18_register_D_IN, decode_sc_ready_18_register_EN;

  // register decode_sc_ready_19_register
  reg decode_sc_ready_19_register;
  wire decode_sc_ready_19_register_D_IN, decode_sc_ready_19_register_EN;

  // register decode_sc_ready_1_register
  reg decode_sc_ready_1_register;
  wire decode_sc_ready_1_register_D_IN, decode_sc_ready_1_register_EN;

  // register decode_sc_ready_20_register
  reg decode_sc_ready_20_register;
  wire decode_sc_ready_20_register_D_IN, decode_sc_ready_20_register_EN;

  // register decode_sc_ready_21_register
  reg decode_sc_ready_21_register;
  wire decode_sc_ready_21_register_D_IN, decode_sc_ready_21_register_EN;

  // register decode_sc_ready_22_register
  reg decode_sc_ready_22_register;
  wire decode_sc_ready_22_register_D_IN, decode_sc_ready_22_register_EN;

  // register decode_sc_ready_23_register
  reg decode_sc_ready_23_register;
  wire decode_sc_ready_23_register_D_IN, decode_sc_ready_23_register_EN;

  // register decode_sc_ready_24_register
  reg decode_sc_ready_24_register;
  wire decode_sc_ready_24_register_D_IN, decode_sc_ready_24_register_EN;

  // register decode_sc_ready_25_register
  reg decode_sc_ready_25_register;
  wire decode_sc_ready_25_register_D_IN, decode_sc_ready_25_register_EN;

  // register decode_sc_ready_26_register
  reg decode_sc_ready_26_register;
  wire decode_sc_ready_26_register_D_IN, decode_sc_ready_26_register_EN;

  // register decode_sc_ready_27_register
  reg decode_sc_ready_27_register;
  wire decode_sc_ready_27_register_D_IN, decode_sc_ready_27_register_EN;

  // register decode_sc_ready_28_register
  reg decode_sc_ready_28_register;
  wire decode_sc_ready_28_register_D_IN, decode_sc_ready_28_register_EN;

  // register decode_sc_ready_29_register
  reg decode_sc_ready_29_register;
  wire decode_sc_ready_29_register_D_IN, decode_sc_ready_29_register_EN;

  // register decode_sc_ready_2_register
  reg decode_sc_ready_2_register;
  wire decode_sc_ready_2_register_D_IN, decode_sc_ready_2_register_EN;

  // register decode_sc_ready_30_register
  reg decode_sc_ready_30_register;
  wire decode_sc_ready_30_register_D_IN, decode_sc_ready_30_register_EN;

  // register decode_sc_ready_31_register
  reg decode_sc_ready_31_register;
  wire decode_sc_ready_31_register_D_IN, decode_sc_ready_31_register_EN;

  // register decode_sc_ready_3_register
  reg decode_sc_ready_3_register;
  wire decode_sc_ready_3_register_D_IN, decode_sc_ready_3_register_EN;

  // register decode_sc_ready_4_register
  reg decode_sc_ready_4_register;
  wire decode_sc_ready_4_register_D_IN, decode_sc_ready_4_register_EN;

  // register decode_sc_ready_5_register
  reg decode_sc_ready_5_register;
  wire decode_sc_ready_5_register_D_IN, decode_sc_ready_5_register_EN;

  // register decode_sc_ready_6_register
  reg decode_sc_ready_6_register;
  wire decode_sc_ready_6_register_D_IN, decode_sc_ready_6_register_EN;

  // register decode_sc_ready_7_register
  reg decode_sc_ready_7_register;
  wire decode_sc_ready_7_register_D_IN, decode_sc_ready_7_register_EN;

  // register decode_sc_ready_8_register
  reg decode_sc_ready_8_register;
  wire decode_sc_ready_8_register_D_IN, decode_sc_ready_8_register_EN;

  // register decode_sc_ready_9_register
  reg decode_sc_ready_9_register;
  wire decode_sc_ready_9_register_D_IN, decode_sc_ready_9_register_EN;

  // register epoch_register
  reg [1 : 0] epoch_register;
  wire [1 : 0] epoch_register_D_IN;
  wire epoch_register_EN;

  // register exceptions_busy
  reg exceptions_busy;
  wire exceptions_busy_D_IN, exceptions_busy_EN;

  // register exceptions_erReg
  reg [3 : 0] exceptions_erReg;
  wire [3 : 0] exceptions_erReg_D_IN;
  wire exceptions_erReg_EN;

  // register fetch_epoch_register
  reg [1 : 0] fetch_epoch_register;
  wire [1 : 0] fetch_epoch_register_D_IN;
  wire fetch_epoch_register_EN;

  // register fetch_lastImemAddr
  reg [27 : 0] fetch_lastImemAddr;
  wire [27 : 0] fetch_lastImemAddr_D_IN;
  wire fetch_lastImemAddr_EN;

  // register fetch_pc_register
  reg [31 : 0] fetch_pc_register;
  wire [31 : 0] fetch_pc_register_D_IN;
  wire fetch_pc_register_EN;

  // register fromDmem_rv
  reg [32 : 0] fromDmem_rv;
  wire [32 : 0] fromDmem_rv_D_IN;
  wire fromDmem_rv_EN;

  // register fromImem_rv
  reg [128 : 0] fromImem_rv;
  wire [128 : 0] fromImem_rv_D_IN;
  wire fromImem_rv_EN;

  // register fsm_state
  reg [1 : 0] fsm_state;
  reg [1 : 0] fsm_state_D_IN;
  wire fsm_state_EN;

  // register globalFlushStall_state
  reg globalFlushStall_state;
  wire globalFlushStall_state_D_IN, globalFlushStall_state_EN;

  // register mdu_b
  reg [31 : 0] mdu_b;
  reg [31 : 0] mdu_b_D_IN;
  wire mdu_b_EN;

  // register mdu_fsm_start_reg
  reg mdu_fsm_start_reg;
  wire mdu_fsm_start_reg_D_IN, mdu_fsm_start_reg_EN;

  // register mdu_fsm_start_reg_1
  reg mdu_fsm_start_reg_1;
  wire mdu_fsm_start_reg_1_D_IN, mdu_fsm_start_reg_1_EN;

  // register mdu_fsm_state_can_overlap
  reg mdu_fsm_state_can_overlap;
  wire mdu_fsm_state_can_overlap_D_IN, mdu_fsm_state_can_overlap_EN;

  // register mdu_fsm_state_fired
  reg mdu_fsm_state_fired;
  wire mdu_fsm_state_fired_D_IN, mdu_fsm_state_fired_EN;

  // register mdu_fsm_state_mkFSMstate
  reg [3 : 0] mdu_fsm_state_mkFSMstate;
  reg [3 : 0] mdu_fsm_state_mkFSMstate_D_IN;
  wire mdu_fsm_state_mkFSMstate_EN;

  // register mdu_op
  reg [1 : 0] mdu_op;
  wire [1 : 0] mdu_op_D_IN;
  wire mdu_op_EN;

  // register mdu_res
  reg [31 : 0] mdu_res;
  wire [31 : 0] mdu_res_D_IN;
  wire mdu_res_EN;

  // register mdu_running
  reg mdu_running;
  wire mdu_running_D_IN, mdu_running_EN;

  // register mdu_rv1
  reg [31 : 0] mdu_rv1;
  wire [31 : 0] mdu_rv1_D_IN;
  wire mdu_rv1_EN;

  // register mdu_rv2
  reg [31 : 0] mdu_rv2;
  reg [31 : 0] mdu_rv2_D_IN;
  wire mdu_rv2_EN;

  // register mdu_sign
  reg mdu_sign;
  wire mdu_sign_D_IN, mdu_sign_EN;

  // register mu_barrier
  reg mu_barrier;
  wire mu_barrier_D_IN, mu_barrier_EN;

  // register mu_reqs_rv
  reg [129 : 0] mu_reqs_rv;
  wire [129 : 0] mu_reqs_rv_D_IN;
  wire mu_reqs_rv_EN;

  // register mu_storeQueue_rv
  reg [66 : 0] mu_storeQueue_rv;
  wire [66 : 0] mu_storeQueue_rv_D_IN;
  wire mu_storeQueue_rv_EN;

  // register npc_register
  reg [31 : 0] npc_register;
  wire [31 : 0] npc_register_D_IN;
  wire npc_register_EN;

  // ports of submodule alu_results
  wire [36 : 0] alu_results_D_IN, alu_results_D_OUT;
  wire alu_results_CLR,
       alu_results_DEQ,
       alu_results_EMPTY_N,
       alu_results_ENQ,
       alu_results_FULL_N;

  // ports of submodule bu_redirs
  wire [34 : 0] bu_redirs_D_IN, bu_redirs_D_OUT;
  wire bu_redirs_CLR,
       bu_redirs_DEQ,
       bu_redirs_EMPTY_N,
       bu_redirs_ENQ,
       bu_redirs_FULL_N;

  // ports of submodule bu_results
  wire [36 : 0] bu_results_D_IN, bu_results_D_OUT;
  wire bu_results_CLR,
       bu_results_DEQ,
       bu_results_EMPTY_N,
       bu_results_ENQ,
       bu_results_FULL_N;

  // ports of submodule crs_crf_0_readBeforeLaterWrites_0
  wire crs_crf_0_readBeforeLaterWrites_0_D_IN,
       crs_crf_0_readBeforeLaterWrites_0_EN,
       crs_crf_0_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_0_readBeforeLaterWrites_1
  wire crs_crf_0_readBeforeLaterWrites_1_D_IN,
       crs_crf_0_readBeforeLaterWrites_1_EN,
       crs_crf_0_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule crs_crf_10_readBeforeLaterWrites_0
  wire crs_crf_10_readBeforeLaterWrites_0_D_IN,
       crs_crf_10_readBeforeLaterWrites_0_EN,
       crs_crf_10_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_10_readBeforeLaterWrites_1
  wire crs_crf_10_readBeforeLaterWrites_1_D_IN,
       crs_crf_10_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_11_readBeforeLaterWrites_0
  wire crs_crf_11_readBeforeLaterWrites_0_D_IN,
       crs_crf_11_readBeforeLaterWrites_0_EN,
       crs_crf_11_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_11_readBeforeLaterWrites_1
  wire crs_crf_11_readBeforeLaterWrites_1_D_IN,
       crs_crf_11_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_12_readBeforeLaterWrites_0
  wire crs_crf_12_readBeforeLaterWrites_0_D_IN,
       crs_crf_12_readBeforeLaterWrites_0_EN,
       crs_crf_12_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_12_readBeforeLaterWrites_1
  wire crs_crf_12_readBeforeLaterWrites_1_D_IN,
       crs_crf_12_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_13_readBeforeLaterWrites_0
  wire crs_crf_13_readBeforeLaterWrites_0_D_IN,
       crs_crf_13_readBeforeLaterWrites_0_EN,
       crs_crf_13_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_13_readBeforeLaterWrites_1
  wire crs_crf_13_readBeforeLaterWrites_1_D_IN,
       crs_crf_13_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_14_readBeforeLaterWrites_0
  wire crs_crf_14_readBeforeLaterWrites_0_D_IN,
       crs_crf_14_readBeforeLaterWrites_0_EN,
       crs_crf_14_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_14_readBeforeLaterWrites_1
  wire crs_crf_14_readBeforeLaterWrites_1_D_IN,
       crs_crf_14_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_15_readBeforeLaterWrites_0
  wire crs_crf_15_readBeforeLaterWrites_0_D_IN,
       crs_crf_15_readBeforeLaterWrites_0_EN,
       crs_crf_15_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_15_readBeforeLaterWrites_1
  wire crs_crf_15_readBeforeLaterWrites_1_D_IN,
       crs_crf_15_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_16_readBeforeLaterWrites_0
  wire crs_crf_16_readBeforeLaterWrites_0_D_IN,
       crs_crf_16_readBeforeLaterWrites_0_EN,
       crs_crf_16_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_16_readBeforeLaterWrites_1
  wire crs_crf_16_readBeforeLaterWrites_1_D_IN,
       crs_crf_16_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_17_readBeforeLaterWrites_0
  wire crs_crf_17_readBeforeLaterWrites_0_D_IN,
       crs_crf_17_readBeforeLaterWrites_0_EN,
       crs_crf_17_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_17_readBeforeLaterWrites_1
  wire crs_crf_17_readBeforeLaterWrites_1_D_IN,
       crs_crf_17_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_18_readBeforeLaterWrites_0
  wire crs_crf_18_readBeforeLaterWrites_0_D_IN,
       crs_crf_18_readBeforeLaterWrites_0_EN,
       crs_crf_18_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_18_readBeforeLaterWrites_1
  wire crs_crf_18_readBeforeLaterWrites_1_D_IN,
       crs_crf_18_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_19_readBeforeLaterWrites_0
  wire crs_crf_19_readBeforeLaterWrites_0_D_IN,
       crs_crf_19_readBeforeLaterWrites_0_EN,
       crs_crf_19_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_19_readBeforeLaterWrites_1
  wire crs_crf_19_readBeforeLaterWrites_1_D_IN,
       crs_crf_19_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_1_readBeforeLaterWrites_0
  wire crs_crf_1_readBeforeLaterWrites_0_D_IN,
       crs_crf_1_readBeforeLaterWrites_0_EN,
       crs_crf_1_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_1_readBeforeLaterWrites_1
  wire crs_crf_1_readBeforeLaterWrites_1_D_IN,
       crs_crf_1_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_20_readBeforeLaterWrites_0
  wire crs_crf_20_readBeforeLaterWrites_0_D_IN,
       crs_crf_20_readBeforeLaterWrites_0_EN,
       crs_crf_20_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_20_readBeforeLaterWrites_1
  wire crs_crf_20_readBeforeLaterWrites_1_D_IN,
       crs_crf_20_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_21_readBeforeLaterWrites_0
  wire crs_crf_21_readBeforeLaterWrites_0_D_IN,
       crs_crf_21_readBeforeLaterWrites_0_EN,
       crs_crf_21_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_21_readBeforeLaterWrites_1
  wire crs_crf_21_readBeforeLaterWrites_1_D_IN,
       crs_crf_21_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_22_readBeforeLaterWrites_0
  wire crs_crf_22_readBeforeLaterWrites_0_D_IN,
       crs_crf_22_readBeforeLaterWrites_0_EN,
       crs_crf_22_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_22_readBeforeLaterWrites_1
  wire crs_crf_22_readBeforeLaterWrites_1_D_IN,
       crs_crf_22_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_23_readBeforeLaterWrites_0
  wire crs_crf_23_readBeforeLaterWrites_0_D_IN,
       crs_crf_23_readBeforeLaterWrites_0_EN,
       crs_crf_23_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_23_readBeforeLaterWrites_1
  wire crs_crf_23_readBeforeLaterWrites_1_D_IN,
       crs_crf_23_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_24_readBeforeLaterWrites_0
  wire crs_crf_24_readBeforeLaterWrites_0_D_IN,
       crs_crf_24_readBeforeLaterWrites_0_EN,
       crs_crf_24_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_24_readBeforeLaterWrites_1
  wire crs_crf_24_readBeforeLaterWrites_1_D_IN,
       crs_crf_24_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_25_readBeforeLaterWrites_0
  wire crs_crf_25_readBeforeLaterWrites_0_D_IN,
       crs_crf_25_readBeforeLaterWrites_0_EN,
       crs_crf_25_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_25_readBeforeLaterWrites_1
  wire crs_crf_25_readBeforeLaterWrites_1_D_IN,
       crs_crf_25_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_26_readBeforeLaterWrites_0
  wire crs_crf_26_readBeforeLaterWrites_0_D_IN,
       crs_crf_26_readBeforeLaterWrites_0_EN,
       crs_crf_26_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_26_readBeforeLaterWrites_1
  wire crs_crf_26_readBeforeLaterWrites_1_D_IN,
       crs_crf_26_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_27_readBeforeLaterWrites_0
  wire crs_crf_27_readBeforeLaterWrites_0_D_IN,
       crs_crf_27_readBeforeLaterWrites_0_EN,
       crs_crf_27_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_27_readBeforeLaterWrites_1
  wire crs_crf_27_readBeforeLaterWrites_1_D_IN,
       crs_crf_27_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_28_readBeforeLaterWrites_0
  wire crs_crf_28_readBeforeLaterWrites_0_D_IN,
       crs_crf_28_readBeforeLaterWrites_0_EN,
       crs_crf_28_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_28_readBeforeLaterWrites_1
  wire crs_crf_28_readBeforeLaterWrites_1_D_IN,
       crs_crf_28_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_29_readBeforeLaterWrites_0
  wire crs_crf_29_readBeforeLaterWrites_0_D_IN,
       crs_crf_29_readBeforeLaterWrites_0_EN,
       crs_crf_29_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_29_readBeforeLaterWrites_1
  wire crs_crf_29_readBeforeLaterWrites_1_D_IN,
       crs_crf_29_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_2_readBeforeLaterWrites_0
  wire crs_crf_2_readBeforeLaterWrites_0_D_IN,
       crs_crf_2_readBeforeLaterWrites_0_EN,
       crs_crf_2_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_2_readBeforeLaterWrites_1
  wire crs_crf_2_readBeforeLaterWrites_1_D_IN,
       crs_crf_2_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_30_readBeforeLaterWrites_0
  wire crs_crf_30_readBeforeLaterWrites_0_D_IN,
       crs_crf_30_readBeforeLaterWrites_0_EN,
       crs_crf_30_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_30_readBeforeLaterWrites_1
  wire crs_crf_30_readBeforeLaterWrites_1_D_IN,
       crs_crf_30_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_31_readBeforeLaterWrites_0
  wire crs_crf_31_readBeforeLaterWrites_0_D_IN,
       crs_crf_31_readBeforeLaterWrites_0_EN,
       crs_crf_31_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_31_readBeforeLaterWrites_1
  wire crs_crf_31_readBeforeLaterWrites_1_D_IN,
       crs_crf_31_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_3_readBeforeLaterWrites_0
  wire crs_crf_3_readBeforeLaterWrites_0_D_IN,
       crs_crf_3_readBeforeLaterWrites_0_EN,
       crs_crf_3_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_3_readBeforeLaterWrites_1
  wire crs_crf_3_readBeforeLaterWrites_1_D_IN,
       crs_crf_3_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_4_readBeforeLaterWrites_0
  wire crs_crf_4_readBeforeLaterWrites_0_D_IN,
       crs_crf_4_readBeforeLaterWrites_0_EN,
       crs_crf_4_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_4_readBeforeLaterWrites_1
  wire crs_crf_4_readBeforeLaterWrites_1_D_IN,
       crs_crf_4_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_5_readBeforeLaterWrites_0
  wire crs_crf_5_readBeforeLaterWrites_0_D_IN,
       crs_crf_5_readBeforeLaterWrites_0_EN,
       crs_crf_5_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_5_readBeforeLaterWrites_1
  wire crs_crf_5_readBeforeLaterWrites_1_D_IN,
       crs_crf_5_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_6_readBeforeLaterWrites_0
  wire crs_crf_6_readBeforeLaterWrites_0_D_IN,
       crs_crf_6_readBeforeLaterWrites_0_EN,
       crs_crf_6_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_6_readBeforeLaterWrites_1
  wire crs_crf_6_readBeforeLaterWrites_1_D_IN,
       crs_crf_6_readBeforeLaterWrites_1_EN,
       crs_crf_6_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule crs_crf_7_readBeforeLaterWrites_0
  wire crs_crf_7_readBeforeLaterWrites_0_D_IN,
       crs_crf_7_readBeforeLaterWrites_0_EN,
       crs_crf_7_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_7_readBeforeLaterWrites_1
  wire crs_crf_7_readBeforeLaterWrites_1_D_IN,
       crs_crf_7_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_8_readBeforeLaterWrites_0
  wire crs_crf_8_readBeforeLaterWrites_0_D_IN,
       crs_crf_8_readBeforeLaterWrites_0_EN,
       crs_crf_8_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_8_readBeforeLaterWrites_1
  wire crs_crf_8_readBeforeLaterWrites_1_D_IN,
       crs_crf_8_readBeforeLaterWrites_1_EN;

  // ports of submodule crs_crf_9_readBeforeLaterWrites_0
  wire crs_crf_9_readBeforeLaterWrites_0_D_IN,
       crs_crf_9_readBeforeLaterWrites_0_EN,
       crs_crf_9_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule crs_crf_9_readBeforeLaterWrites_1
  wire crs_crf_9_readBeforeLaterWrites_1_D_IN,
       crs_crf_9_readBeforeLaterWrites_1_EN;

  // ports of submodule d2e
  wire [228 : 0] d2e_D_IN, d2e_D_OUT;
  wire d2e_CLR, d2e_DEQ, d2e_EMPTY_N, d2e_ENQ, d2e_FULL_N;

  // ports of submodule dCache
  wire [546 : 0] dCache_getToMem;
  wire [511 : 0] dCache_putFromMem_e;
  wire [65 : 0] dCache_putFromProc_e;
  wire [31 : 0] dCache_getToProc;
  wire dCache_EN_blockTillFlushDone,
       dCache_EN_getToMem,
       dCache_EN_getToProc,
       dCache_EN_invalidateLines,
       dCache_EN_putFlushRequest,
       dCache_EN_putFromMem,
       dCache_EN_putFromProc,
       dCache_RDY_blockTillFlushDone,
       dCache_RDY_getToMem,
       dCache_RDY_getToProc,
       dCache_RDY_putFromMem,
       dCache_RDY_putFromProc,
       dCache_putFromProc_passthrough;

  // ports of submodule decode_decodeWord
  wire [31 : 0] decode_decodeWord_D_IN, decode_decodeWord_D_OUT;
  wire decode_decodeWord_CLR,
       decode_decodeWord_DEQ,
       decode_decodeWord_EMPTY_N,
       decode_decodeWord_ENQ,
       decode_decodeWord_FULL_N;

  // ports of submodule decode_rf
  wire [31 : 0] decode_rf_D_IN,
		decode_rf_D_OUT_1,
		decode_rf_D_OUT_2,
		decode_rf_D_OUT_3;
  wire [4 : 0] decode_rf_ADDR_1,
	       decode_rf_ADDR_2,
	       decode_rf_ADDR_3,
	       decode_rf_ADDR_4,
	       decode_rf_ADDR_5,
	       decode_rf_ADDR_IN;
  wire decode_rf_WE;

  // ports of submodule decode_sc_ready_0_readBeforeLaterWrites_0
  wire decode_sc_ready_0_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_0_readBeforeLaterWrites_0_EN,
       decode_sc_ready_0_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_0_readBeforeLaterWrites_1
  wire decode_sc_ready_0_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_0_readBeforeLaterWrites_1_EN,
       decode_sc_ready_0_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_10_readBeforeLaterWrites_0
  wire decode_sc_ready_10_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_10_readBeforeLaterWrites_0_EN,
       decode_sc_ready_10_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_10_readBeforeLaterWrites_1
  wire decode_sc_ready_10_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_10_readBeforeLaterWrites_1_EN,
       decode_sc_ready_10_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_11_readBeforeLaterWrites_0
  wire decode_sc_ready_11_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_11_readBeforeLaterWrites_0_EN,
       decode_sc_ready_11_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_11_readBeforeLaterWrites_1
  wire decode_sc_ready_11_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_11_readBeforeLaterWrites_1_EN,
       decode_sc_ready_11_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_12_readBeforeLaterWrites_0
  wire decode_sc_ready_12_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_12_readBeforeLaterWrites_0_EN,
       decode_sc_ready_12_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_12_readBeforeLaterWrites_1
  wire decode_sc_ready_12_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_12_readBeforeLaterWrites_1_EN,
       decode_sc_ready_12_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_13_readBeforeLaterWrites_0
  wire decode_sc_ready_13_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_13_readBeforeLaterWrites_0_EN,
       decode_sc_ready_13_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_13_readBeforeLaterWrites_1
  wire decode_sc_ready_13_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_13_readBeforeLaterWrites_1_EN,
       decode_sc_ready_13_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_14_readBeforeLaterWrites_0
  wire decode_sc_ready_14_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_14_readBeforeLaterWrites_0_EN,
       decode_sc_ready_14_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_14_readBeforeLaterWrites_1
  wire decode_sc_ready_14_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_14_readBeforeLaterWrites_1_EN,
       decode_sc_ready_14_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_15_readBeforeLaterWrites_0
  wire decode_sc_ready_15_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_15_readBeforeLaterWrites_0_EN,
       decode_sc_ready_15_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_15_readBeforeLaterWrites_1
  wire decode_sc_ready_15_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_15_readBeforeLaterWrites_1_EN,
       decode_sc_ready_15_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_16_readBeforeLaterWrites_0
  wire decode_sc_ready_16_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_16_readBeforeLaterWrites_0_EN,
       decode_sc_ready_16_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_16_readBeforeLaterWrites_1
  wire decode_sc_ready_16_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_16_readBeforeLaterWrites_1_EN,
       decode_sc_ready_16_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_17_readBeforeLaterWrites_0
  wire decode_sc_ready_17_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_17_readBeforeLaterWrites_0_EN,
       decode_sc_ready_17_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_17_readBeforeLaterWrites_1
  wire decode_sc_ready_17_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_17_readBeforeLaterWrites_1_EN,
       decode_sc_ready_17_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_18_readBeforeLaterWrites_0
  wire decode_sc_ready_18_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_18_readBeforeLaterWrites_0_EN,
       decode_sc_ready_18_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_18_readBeforeLaterWrites_1
  wire decode_sc_ready_18_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_18_readBeforeLaterWrites_1_EN,
       decode_sc_ready_18_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_19_readBeforeLaterWrites_0
  wire decode_sc_ready_19_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_19_readBeforeLaterWrites_0_EN,
       decode_sc_ready_19_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_19_readBeforeLaterWrites_1
  wire decode_sc_ready_19_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_19_readBeforeLaterWrites_1_EN,
       decode_sc_ready_19_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_1_readBeforeLaterWrites_0
  wire decode_sc_ready_1_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_1_readBeforeLaterWrites_0_EN,
       decode_sc_ready_1_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_1_readBeforeLaterWrites_1
  wire decode_sc_ready_1_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_1_readBeforeLaterWrites_1_EN,
       decode_sc_ready_1_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_20_readBeforeLaterWrites_0
  wire decode_sc_ready_20_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_20_readBeforeLaterWrites_0_EN,
       decode_sc_ready_20_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_20_readBeforeLaterWrites_1
  wire decode_sc_ready_20_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_20_readBeforeLaterWrites_1_EN,
       decode_sc_ready_20_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_21_readBeforeLaterWrites_0
  wire decode_sc_ready_21_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_21_readBeforeLaterWrites_0_EN,
       decode_sc_ready_21_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_21_readBeforeLaterWrites_1
  wire decode_sc_ready_21_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_21_readBeforeLaterWrites_1_EN,
       decode_sc_ready_21_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_22_readBeforeLaterWrites_0
  wire decode_sc_ready_22_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_22_readBeforeLaterWrites_0_EN,
       decode_sc_ready_22_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_22_readBeforeLaterWrites_1
  wire decode_sc_ready_22_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_22_readBeforeLaterWrites_1_EN,
       decode_sc_ready_22_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_23_readBeforeLaterWrites_0
  wire decode_sc_ready_23_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_23_readBeforeLaterWrites_0_EN,
       decode_sc_ready_23_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_23_readBeforeLaterWrites_1
  wire decode_sc_ready_23_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_23_readBeforeLaterWrites_1_EN,
       decode_sc_ready_23_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_24_readBeforeLaterWrites_0
  wire decode_sc_ready_24_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_24_readBeforeLaterWrites_0_EN,
       decode_sc_ready_24_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_24_readBeforeLaterWrites_1
  wire decode_sc_ready_24_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_24_readBeforeLaterWrites_1_EN,
       decode_sc_ready_24_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_25_readBeforeLaterWrites_0
  wire decode_sc_ready_25_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_25_readBeforeLaterWrites_0_EN,
       decode_sc_ready_25_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_25_readBeforeLaterWrites_1
  wire decode_sc_ready_25_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_25_readBeforeLaterWrites_1_EN,
       decode_sc_ready_25_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_26_readBeforeLaterWrites_0
  wire decode_sc_ready_26_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_26_readBeforeLaterWrites_0_EN,
       decode_sc_ready_26_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_26_readBeforeLaterWrites_1
  wire decode_sc_ready_26_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_26_readBeforeLaterWrites_1_EN,
       decode_sc_ready_26_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_27_readBeforeLaterWrites_0
  wire decode_sc_ready_27_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_27_readBeforeLaterWrites_0_EN,
       decode_sc_ready_27_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_27_readBeforeLaterWrites_1
  wire decode_sc_ready_27_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_27_readBeforeLaterWrites_1_EN,
       decode_sc_ready_27_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_28_readBeforeLaterWrites_0
  wire decode_sc_ready_28_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_28_readBeforeLaterWrites_0_EN,
       decode_sc_ready_28_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_28_readBeforeLaterWrites_1
  wire decode_sc_ready_28_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_28_readBeforeLaterWrites_1_EN,
       decode_sc_ready_28_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_29_readBeforeLaterWrites_0
  wire decode_sc_ready_29_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_29_readBeforeLaterWrites_0_EN,
       decode_sc_ready_29_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_29_readBeforeLaterWrites_1
  wire decode_sc_ready_29_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_29_readBeforeLaterWrites_1_EN,
       decode_sc_ready_29_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_2_readBeforeLaterWrites_0
  wire decode_sc_ready_2_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_2_readBeforeLaterWrites_0_EN,
       decode_sc_ready_2_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_2_readBeforeLaterWrites_1
  wire decode_sc_ready_2_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_2_readBeforeLaterWrites_1_EN,
       decode_sc_ready_2_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_30_readBeforeLaterWrites_0
  wire decode_sc_ready_30_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_30_readBeforeLaterWrites_0_EN,
       decode_sc_ready_30_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_30_readBeforeLaterWrites_1
  wire decode_sc_ready_30_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_30_readBeforeLaterWrites_1_EN,
       decode_sc_ready_30_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_31_readBeforeLaterWrites_0
  wire decode_sc_ready_31_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_31_readBeforeLaterWrites_0_EN,
       decode_sc_ready_31_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_31_readBeforeLaterWrites_1
  wire decode_sc_ready_31_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_31_readBeforeLaterWrites_1_EN,
       decode_sc_ready_31_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_3_readBeforeLaterWrites_0
  wire decode_sc_ready_3_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_3_readBeforeLaterWrites_0_EN,
       decode_sc_ready_3_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_3_readBeforeLaterWrites_1
  wire decode_sc_ready_3_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_3_readBeforeLaterWrites_1_EN,
       decode_sc_ready_3_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_4_readBeforeLaterWrites_0
  wire decode_sc_ready_4_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_4_readBeforeLaterWrites_0_EN,
       decode_sc_ready_4_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_4_readBeforeLaterWrites_1
  wire decode_sc_ready_4_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_4_readBeforeLaterWrites_1_EN,
       decode_sc_ready_4_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_5_readBeforeLaterWrites_0
  wire decode_sc_ready_5_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_5_readBeforeLaterWrites_0_EN,
       decode_sc_ready_5_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_5_readBeforeLaterWrites_1
  wire decode_sc_ready_5_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_5_readBeforeLaterWrites_1_EN,
       decode_sc_ready_5_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_6_readBeforeLaterWrites_0
  wire decode_sc_ready_6_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_6_readBeforeLaterWrites_0_EN,
       decode_sc_ready_6_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_6_readBeforeLaterWrites_1
  wire decode_sc_ready_6_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_6_readBeforeLaterWrites_1_EN,
       decode_sc_ready_6_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_7_readBeforeLaterWrites_0
  wire decode_sc_ready_7_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_7_readBeforeLaterWrites_0_EN,
       decode_sc_ready_7_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_7_readBeforeLaterWrites_1
  wire decode_sc_ready_7_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_7_readBeforeLaterWrites_1_EN,
       decode_sc_ready_7_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_8_readBeforeLaterWrites_0
  wire decode_sc_ready_8_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_8_readBeforeLaterWrites_0_EN,
       decode_sc_ready_8_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_8_readBeforeLaterWrites_1
  wire decode_sc_ready_8_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_8_readBeforeLaterWrites_1_EN,
       decode_sc_ready_8_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_sc_ready_9_readBeforeLaterWrites_0
  wire decode_sc_ready_9_readBeforeLaterWrites_0_D_IN,
       decode_sc_ready_9_readBeforeLaterWrites_0_EN,
       decode_sc_ready_9_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule decode_sc_ready_9_readBeforeLaterWrites_1
  wire decode_sc_ready_9_readBeforeLaterWrites_1_D_IN,
       decode_sc_ready_9_readBeforeLaterWrites_1_EN,
       decode_sc_ready_9_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule decode_ws2d
  wire [69 : 0] decode_ws2d_D_IN, decode_ws2d_D_OUT;
  wire decode_ws2d_CLR,
       decode_ws2d_DEQ,
       decode_ws2d_EMPTY_N,
       decode_ws2d_ENQ,
       decode_ws2d_FULL_N;

  // ports of submodule dmemReqs
  wire [65 : 0] dmemReqs_D_IN, dmemReqs_D_OUT;
  wire dmemReqs_CLR,
       dmemReqs_DEQ,
       dmemReqs_EMPTY_N,
       dmemReqs_ENQ,
       dmemReqs_FULL_N;

  // ports of submodule e2w
  wire [132 : 0] e2w_D_IN, e2w_D_OUT;
  wire e2w_CLR, e2w_DEQ, e2w_EMPTY_N, e2w_ENQ, e2w_FULL_N;

  // ports of submodule epoch_readBeforeLaterWrites_0
  wire epoch_readBeforeLaterWrites_0_D_IN, epoch_readBeforeLaterWrites_0_EN;

  // ports of submodule epoch_readBeforeLaterWrites_1
  wire epoch_readBeforeLaterWrites_1_D_IN,
       epoch_readBeforeLaterWrites_1_EN,
       epoch_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule f2d
  wire [69 : 0] f2d_D_IN, f2d_D_OUT;
  wire f2d_CLR, f2d_DEQ, f2d_EMPTY_N, f2d_ENQ, f2d_FULL_N;

  // ports of submodule fetch_epoch_readBeforeLaterWrites_0
  wire fetch_epoch_readBeforeLaterWrites_0_D_IN,
       fetch_epoch_readBeforeLaterWrites_0_EN;

  // ports of submodule fetch_epoch_readBeforeLaterWrites_1
  wire fetch_epoch_readBeforeLaterWrites_1_D_IN,
       fetch_epoch_readBeforeLaterWrites_1_EN,
       fetch_epoch_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule fetch_pc_readBeforeLaterWrites_0
  wire fetch_pc_readBeforeLaterWrites_0_D_IN,
       fetch_pc_readBeforeLaterWrites_0_EN,
       fetch_pc_readBeforeLaterWrites_0_Q_OUT;

  // ports of submodule fetch_pc_readBeforeLaterWrites_1
  wire fetch_pc_readBeforeLaterWrites_1_D_IN,
       fetch_pc_readBeforeLaterWrites_1_EN,
       fetch_pc_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule fromBus
  wire [511 : 0] fromBus_D_IN, fromBus_D_OUT;
  wire fromBus_CLR, fromBus_DEQ, fromBus_EMPTY_N, fromBus_ENQ, fromBus_FULL_N;

  // ports of submodule iCache
  wire [546 : 0] iCache_getToMem;
  wire [511 : 0] iCache_putFromMem_e;
  wire [127 : 0] iCache_getToProc;
  wire [29 : 0] iCache_putFromProc_e;
  wire iCache_EN_getToMem,
       iCache_EN_getToProc,
       iCache_EN_invalidateLines,
       iCache_EN_putFromMem,
       iCache_EN_putFromProc,
       iCache_RDY_getToMem,
       iCache_RDY_getToProc,
       iCache_RDY_invalidateLines,
       iCache_RDY_putFromMem,
       iCache_RDY_putFromProc,
       iCache_putFromProc_passthrough;

  // ports of submodule mdu_reqs
  wire [66 : 0] mdu_reqs_D_IN, mdu_reqs_D_OUT;
  wire mdu_reqs_CLR,
       mdu_reqs_DEQ,
       mdu_reqs_EMPTY_N,
       mdu_reqs_ENQ,
       mdu_reqs_FULL_N;

  // ports of submodule mdu_results
  wire [36 : 0] mdu_results_D_IN, mdu_results_D_OUT;
  wire mdu_results_CLR,
       mdu_results_DEQ,
       mdu_results_EMPTY_N,
       mdu_results_ENQ,
       mdu_results_FULL_N;

  // ports of submodule mu_currBusiness
  wire [3 : 0] mu_currBusiness_D_IN, mu_currBusiness_D_OUT;
  wire mu_currBusiness_CLR,
       mu_currBusiness_DEQ,
       mu_currBusiness_EMPTY_N,
       mu_currBusiness_ENQ,
       mu_currBusiness_FULL_N;

  // ports of submodule mu_results
  wire [36 : 0] mu_results_D_IN, mu_results_D_OUT;
  wire mu_results_CLR,
       mu_results_DEQ,
       mu_results_EMPTY_N,
       mu_results_ENQ,
       mu_results_FULL_N;

  // ports of submodule mu_stage1
  wire [38 : 0] mu_stage1_D_IN, mu_stage1_D_OUT;
  wire mu_stage1_CLR,
       mu_stage1_DEQ,
       mu_stage1_EMPTY_N,
       mu_stage1_ENQ,
       mu_stage1_FULL_N;

  // ports of submodule npc_readBeforeLaterWrites_0
  wire npc_readBeforeLaterWrites_0_D_IN, npc_readBeforeLaterWrites_0_EN;

  // ports of submodule npc_readBeforeLaterWrites_1
  wire npc_readBeforeLaterWrites_1_D_IN,
       npc_readBeforeLaterWrites_1_EN,
       npc_readBeforeLaterWrites_1_Q_OUT;

  // ports of submodule toBus
  wire [546 : 0] toBus_D_IN, toBus_D_OUT;
  wire toBus_CLR, toBus_DEQ, toBus_EMPTY_N, toBus_ENQ, toBus_FULL_N;

  // rule scheduling signals
  wire CAN_FIRE_RL_mu_handleRequest,
       WILL_FIRE_RL_commit_commit,
       WILL_FIRE_RL_decode_decode,
       WILL_FIRE_RL_execute_execute,
       WILL_FIRE_RL_handleAsyncException,
       WILL_FIRE_RL_handleBusResp,
       WILL_FIRE_RL_handleDCacheRequest,
       WILL_FIRE_RL_handleICacheRequest,
       WILL_FIRE_RL_mdu_fsm_action_l47c20,
       WILL_FIRE_RL_mdu_fsm_action_l56c19,
       WILL_FIRE_RL_mdu_fsm_action_l61c25,
       WILL_FIRE_RL_mdu_fsm_action_l63c19,
       WILL_FIRE_RL_mdu_fsm_action_l64c21,
       WILL_FIRE_RL_mdu_fsm_action_l66c20,
       WILL_FIRE_RL_mdu_fsm_action_l71c17,
       WILL_FIRE_RL_mdu_fsm_fsm_start,
       WILL_FIRE_RL_mdu_fsm_idle_l35c14,
       WILL_FIRE_RL_mdu_handleReq,
       WILL_FIRE_RL_mu_getMemoryResponse,
       WILL_FIRE_RL_mu_handleRequest;

  // inputs to muxes for submodule ports
  wire [65 : 0] MUX_dmemReqs_enq_1__VAL_1;
  wire [36 : 0] MUX_mdu_results_enq_1__VAL_1,
		MUX_mdu_results_enq_1__VAL_2,
		MUX_mu_results_enq_1__VAL_1;
  wire [31 : 0] MUX_fetch_pc_port_1_wset_1__VAL_1,
		MUX_fetch_pc_port_1_wset_1__VAL_2,
		MUX_mdu_b_write_1__VAL_1,
		MUX_mdu_b_write_1__VAL_2,
		MUX_mdu_res_write_1__VAL_1,
		MUX_mdu_rv1_write_1__VAL_1,
		MUX_mdu_rv1_write_1__VAL_2,
		MUX_mdu_rv2_write_1__VAL_1,
		MUX_mdu_rv2_write_1__VAL_2,
		MUX_mdu_rv2_write_1__VAL_3,
		MUX_npc_port_1_wset_1__VAL_1,
		MUX_npc_port_1_wset_1__VAL_2;
  wire [3 : 0] MUX_exceptions_erReg_write_1__VAL_2;
  wire [1 : 0] MUX_epoch_port_1_wset_1__VAL_1,
	       MUX_epoch_port_1_wset_1__VAL_2,
	       MUX_fetch_epoch_port_1_wset_1__VAL_1,
	       MUX_fetch_epoch_port_1_wset_1__VAL_2;
  wire MUX_busTracker_rv_port1__write_1__SEL_1,
       MUX_dmemReqs_enq_1__SEL_1,
       MUX_dmemReqs_enq_1__SEL_2,
       MUX_epoch_readBeforeLaterWrites_1_write_1__SEL_1,
       MUX_exceptions_busy_write_1__SEL_1,
       MUX_exceptions_busy_write_1__SEL_2,
       MUX_fetch_epoch_port_1_wset_1__SEL_1,
       MUX_mu_results_enq_1__SEL_2;

  // remaining internal signals
  reg [31 : 0] CASE_d2eD_OUT_BITS_104_TO_102_0b0_pcPlus41551_ETC__q20,
	       CASE_d2eD_OUT_BITS_129_TO_128_0b0_d2eD_OUT_B_ETC__q8,
	       CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp011201__ETC__q10,
	       CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp111202__ETC__q12,
	       CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp211203__ETC__q14,
	       CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp311204__ETC__q16,
	       IF_IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b_ETC___d2012,
	       SEL_ARR_IF_f2d_first__263_BIT_0_264_THEN_IF_fr_ETC___d1287,
	       data___1__h105850,
	       pc__h116027,
	       val__h119412,
	       x__h115931,
	       x_data__h29455;
  reg [4 : 0] CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b110_ETC__q2,
	      CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b110_ETC__q3,
	      IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1398,
	      IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1610;
  reg [3 : 0] CASE_e2wD_OUT_BITS_2_TO_0_1_9_2_7_8__q17,
	      CASE_x9109_0b0_0_1_15_0b10_1_0b11_0_15__q25,
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2499,
	      _theResult___fst__h30098;
  reg [2 : 0] CASE_decode_decodeWordD_OUT_BITS_2_TO_0_0b0_1_ETC__q24,
	      CASE_decode_decodeWordD_OUT_BITS_31_TO_28_0b0_ETC__q22,
	      CASE_decode_decodeWordD_OUT_BITS_31_TO_28_0b1_ETC__q21,
	      CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b101_ETC__q23;
  reg [1 : 0] CASE_d2eD_OUT_BITS_133_TO_130_0b1011_2_0b1100_ETC__q26;
  reg CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296,
      CASE_decode_decodeWordD_OUT_BITS_2_TO_0_0b0_N_ETC__q5,
      CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b110_ETC__q4,
      IF_d2e_first__678_BITS_101_TO_99_692_EQ_0_693__ETC___d1720,
      IF_d2e_first__678_BITS_107_TO_105_745_EQ_0b111_ETC___d2044,
      IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1345,
      IF_decode_decodeWord_first__295_BITS_5_TO_3_30_ETC___d1589,
      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2156,
      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165,
      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2175,
      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2192,
      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2201,
      SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470,
      SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489,
      SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520;
  wire [127 : 0] IF_f2d_first__263_BIT_0_264_THEN_IF_fromImem_r_ETC___d1277;
  wire [98 : 0] IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1673;
  wire [63 : 0] mdu_rv1_53_MUL_mdu_rv2_54___d555;
  wire [31 : 0] IF_IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b_ETC___d2005,
		IF_mu_reqs_rv_port1__read__17_BIT_6_76_THEN_mu_ETC___d480,
		_theResult___fst__h105782,
		d2eD_OUT_BITS_66_TO_35__q6,
		data__h105761,
		data__h29475,
		data__h29609,
		data__h29881,
		def__h10225,
		def__h10867,
		def__h11509,
		def__h12151,
		def__h1237,
		def__h12793,
		def__h13435,
		def__h14075,
		def__h14717,
		def__h15359,
		def__h16001,
		def__h16643,
		def__h17285,
		def__h17927,
		def__h18569,
		def__h1879,
		def__h19211,
		def__h19853,
		def__h20495,
		def__h21137,
		def__h2521,
		def__h26446,
		def__h3163,
		def__h3805,
		def__h4447,
		def__h5089,
		def__h5731,
		def__h6373,
		def__h7015,
		def__h7657,
		def__h8299,
		def__h8941,
		def__h9583,
		fromDmem_rvport1__read_BITS_31_TO_0__q18,
		immExt__h115517,
		imm__h105754,
		mem_data__h29446,
		mu_reqs_rv_port1__read__17_BITS_128_TO_97_29_P_ETC___d438,
		op2__h105759,
		op2_reg__h105758,
		pcPlus4__h115518,
		pc__h116025,
		pc_add__h115519,
		result__h115864,
		temp0__h111201,
		temp1__h111202,
		temp2__h111203,
		temp3__h111204,
		x__h104891,
		x__h104897,
		x__h104903,
		x__h111957,
		x__h117721,
		x__h118032,
		x__h122945,
		x__h27838,
		x__h30200,
		x__h70722,
		x__h70796,
		x_data__h105772,
		x_data__h69372,
		x_wget__h10557,
		x_wget__h11199,
		x_wget__h11841,
		x_wget__h12483,
		x_wget__h13125,
		x_wget__h13763,
		x_wget__h14407,
		x_wget__h15049,
		x_wget__h1569,
		x_wget__h15691,
		x_wget__h16333,
		x_wget__h16975,
		x_wget__h17617,
		x_wget__h18259,
		x_wget__h18901,
		x_wget__h19543,
		x_wget__h20185,
		x_wget__h20827,
		x_wget__h21514,
		x_wget__h2211,
		x_wget__h26136,
		x_wget__h26185,
		x_wget__h2853,
		x_wget__h3495,
		x_wget__h4137,
		x_wget__h4779,
		x_wget__h4828,
		x_wget__h5421,
		x_wget__h6063,
		x_wget__h6705,
		x_wget__h7347,
		x_wget__h7989,
		x_wget__h8631,
		x_wget__h927,
		x_wget__h9273,
		x_wget__h976,
		x_wget__h9915,
		y__h111958,
		y__h115163;
  wire [30 : 0] d2eD_OUT_BITS_66_TO_35_BITS_31_TO_1__q7;
  wire [29 : 0] d2eD_OUT_BITS_66_TO_35_BITS_31_TO_2__q9;
  wire [27 : 0] d2eD_OUT_BITS_66_TO_35_BITS_31_TO_4__q11;
  wire [23 : 0] d2eD_OUT_BITS_66_TO_35_BITS_31_TO_8__q13;
  wire [22 : 0] x__h116165;
  wire [17 : 0] x__h116141;
  wire [15 : 0] d2eD_OUT_BITS_133_TO_118__q1,
		d2eD_OUT_BITS_66_TO_35_BITS_31_TO_16__q15;
  wire [4 : 0] IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b1_7_ETC___d1885,
	       dst__h96123,
	       idx__h116186,
	       idx__h119589,
	       rd__h104066,
	       rs1__h100489,
	       rs2__h100491,
	       rs3__h100493,
	       shift_amount__h29876,
	       x__h29583;
  wire [3 : 0] IF_e2w_first__134_BITS_2_TO_0_135_EQ_0_136_AND_ETC___d2503,
	       byte_en__h30100,
	       byte_en__h30381,
	       req_word_byte__h30377;
  wire [2 : 0] IF_IF_crs_crf_0_readBeforeLaterWrites_0_read___ETC___d1689,
	       IF_mu_reqs_rvport1__read_BITS_3_TO_1_EQ_0b1_T_ETC__q19,
	       aluOp__h105760;
  wire [1 : 0] immShift__h29872,
	       n_epoch__h115520,
	       sel__h100051,
	       x__h116337,
	       x__h123168,
	       x__h89109,
	       x_wget__h22121,
	       x_wget__h26792;
  wire IF_busError_wget__529_THEN_NOT_exceptions_busy_ETC___d2539,
       IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1508,
       IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1522,
       IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1574,
       IF_decode_decodeWord_first__295_BITS_5_TO_3_30_ETC___d1378,
       IF_decode_sc_ready_0_port_0_whas__31_THEN_deco_ETC___d734,
       IF_decode_sc_ready_10_port_0_whas__01_THEN_dec_ETC___d804,
       IF_decode_sc_ready_11_port_0_whas__08_THEN_dec_ETC___d811,
       IF_decode_sc_ready_12_port_0_whas__15_THEN_dec_ETC___d818,
       IF_decode_sc_ready_13_port_0_whas__22_THEN_dec_ETC___d825,
       IF_decode_sc_ready_14_port_0_whas__29_THEN_dec_ETC___d832,
       IF_decode_sc_ready_15_port_0_whas__36_THEN_dec_ETC___d839,
       IF_decode_sc_ready_16_port_0_whas__43_THEN_dec_ETC___d846,
       IF_decode_sc_ready_17_port_0_whas__50_THEN_dec_ETC___d853,
       IF_decode_sc_ready_18_port_0_whas__57_THEN_dec_ETC___d860,
       IF_decode_sc_ready_19_port_0_whas__64_THEN_dec_ETC___d867,
       IF_decode_sc_ready_1_port_0_whas__38_THEN_deco_ETC___d741,
       IF_decode_sc_ready_20_port_0_whas__71_THEN_dec_ETC___d874,
       IF_decode_sc_ready_21_port_0_whas__78_THEN_dec_ETC___d881,
       IF_decode_sc_ready_22_port_0_whas__85_THEN_dec_ETC___d888,
       IF_decode_sc_ready_23_port_0_whas__92_THEN_dec_ETC___d895,
       IF_decode_sc_ready_24_port_0_whas__99_THEN_dec_ETC___d902,
       IF_decode_sc_ready_25_port_0_whas__06_THEN_dec_ETC___d909,
       IF_decode_sc_ready_26_port_0_whas__13_THEN_dec_ETC___d916,
       IF_decode_sc_ready_27_port_0_whas__20_THEN_dec_ETC___d923,
       IF_decode_sc_ready_28_port_0_whas__27_THEN_dec_ETC___d930,
       IF_decode_sc_ready_29_port_0_whas__34_THEN_dec_ETC___d937,
       IF_decode_sc_ready_2_port_0_whas__45_THEN_deco_ETC___d748,
       IF_decode_sc_ready_30_port_0_whas__41_THEN_dec_ETC___d944,
       IF_decode_sc_ready_31_port_0_whas__48_THEN_dec_ETC___d951,
       IF_decode_sc_ready_3_port_0_whas__52_THEN_deco_ETC___d755,
       IF_decode_sc_ready_4_port_0_whas__59_THEN_deco_ETC___d762,
       IF_decode_sc_ready_5_port_0_whas__66_THEN_deco_ETC___d769,
       IF_decode_sc_ready_6_port_0_whas__73_THEN_deco_ETC___d776,
       IF_decode_sc_ready_7_port_0_whas__80_THEN_deco_ETC___d783,
       IF_decode_sc_ready_8_port_0_whas__87_THEN_deco_ETC___d790,
       IF_decode_sc_ready_9_port_0_whas__94_THEN_deco_ETC___d797,
       IF_e2w_first__134_BIT_40_205_AND_e2w_first__13_ETC___d2315,
       IF_e2w_first__134_BIT_47_158_THEN_0_OR_NOT_e2w_ETC___d2350,
       IF_e2w_i_notEmpty__133_AND_e2w_first__134_BITS_ETC___d2154,
       IF_fetch_pc_readBeforeLaterWrites_0_read__45_A_ETC___d354,
       IF_mu_reqs_rv_port1__read__17_BITS_3_TO_1_20_E_ETC___d467,
       NOT_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b1_ETC___d2298,
       NOT_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b1_ETC___d2306,
       NOT_IF_fetch_epoch_readBeforeLaterWrites_0_rea_ETC___d1713,
       NOT_IF_mu_reqs_rv_port1__read__17_BITS_3_TO_1__ETC___d446,
       NOT_IF_mu_reqs_rv_port1__read__17_BITS_3_TO_1__ETC___d459,
       NOT_decode_decodeWord_first__295_BITS_2_TO_0_2_ETC___d1382,
       NOT_decode_decodeWord_first__295_BITS_2_TO_0_2_ETC___d1479,
       NOT_decode_decodeWord_first__295_BITS_2_TO_0_2_ETC___d1575,
       NOT_decode_decodeWord_first__295_BITS_2_TO_0_2_ETC___d1576,
       NOT_decode_decodeWord_first__295_BITS_31_TO_28_ETC___d1620,
       NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_136_13_ETC___d2312,
       NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_136_13_ETC___d2334,
       NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_136_13_ETC___d2346,
       NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_136_13_ETC___d2349,
       NOT_e2w_first__134_BIT_40_205_473_OR_NOT_e2w_f_ETC___d2479,
       NOT_mdu_op_41_EQ_0_42_59_AND_mdu_op_41_EQ_1_60_ETC___d631,
       NOT_mdu_op_41_EQ_0_42_59_AND_mdu_op_41_EQ_1_60_ETC___d644,
       NOT_mdu_op_41_EQ_1_60_59_AND_NOT_mdu_op_41_EQ__ETC___d684,
       NOT_mdu_op_41_EQ_1_60_59_AND_NOT_mdu_op_41_EQ__ETC___d689,
       NOT_mdu_rv2_54_ULT_mdu_rv1_53_63_91_OR_mdu_rv2_ETC___d601,
       NOT_mdu_rv2_54_ULT_mdu_rv1_53_63_91_OR_mdu_rv2_ETC___d623,
       _0_OR_NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_1_ETC___d2204,
       _0_OR_NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_1_ETC___d2308,
       d2e_first__678_BITS_101_TO_99_692_EQ_1_702_AND_ETC___d2049,
       decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1354,
       decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1404,
       decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1475,
       decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1498,
       decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1523,
       decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1593,
       decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1624,
       decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1662,
       decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1665,
       decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1668,
       decode_decodeWord_first__295_BIT_31_578_AND_IN_ETC___d1585,
       decode_decodeWord_i_notEmpty__294_AND_decode_d_ETC___d1529,
       decode_ws2d_i_notFull__261_AND_decode_decodeWo_ETC___d1270,
       e2w_first__134_BITS_2_TO_0_135_EQ_0_136_AND_e2_ETC___d2364,
       e2w_first__134_BITS_2_TO_0_135_EQ_0_136_AND_e2_ETC___d2367,
       e2w_first__134_BITS_2_TO_0_135_EQ_0_136_AND_e2_ETC___d2432,
       e2w_first__134_BITS_2_TO_0_135_EQ_0_136_AND_e2_ETC___d2459,
       e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160,
       e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371,
       f2d_i_notFull__44_AND_NOT_IF_fetch_pc_readBefo_ETC___d358,
       fromBus_i_notEmpty__87_AND_IF_busTracker_rv_po_ETC___d292,
       fsm_state_read_EQ_1_AND_fsm_enterASExcEn_whas__ETC___d26,
       mdu_fsm_abort_whas__13_AND_mdu_fsm_abort_wget__ETC___d705,
       mdu_op_41_EQ_0_42_OR_NOT_mdu_op_41_EQ_1_60_59__ETC___d699,
       mdu_op_41_EQ_0_42_OR_NOT_mdu_op_41_EQ_1_60_59__ETC___d700,
       mdu_op_41_EQ_1_60_OR_mdu_op_41_EQ_2_61_62_AND__ETC___d571,
       mdu_op_41_EQ_1_60_OR_mdu_op_41_EQ_2_61_62_AND__ETC___d597,
       mdu_op_41_EQ_1_60_OR_mdu_op_41_EQ_2_61_62_AND__ETC___d619,
       mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d582,
       mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d609,
       mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d652,
       mdu_rv1_53_ULT_mdu_rv2_54___d593,
       mdu_rv2_54_ULT_mdu_rv1_53___d563,
       mu_results_i_notFull__74_AND_mu_stage1_first___ETC___d382,
       x__h104121,
       x__h111921,
       x__h111928,
       x__h70854,
       y__h104122,
       y__h104124;

  // actionvalue method getBusReq
  assign getBusReq = toBus_D_OUT ;
  assign RDY_getBusReq = toBus_EMPTY_N ;

  // action method putBusResp
  assign RDY_putBusResp = fromBus_FULL_N ;

  // submodule alu_results
  FIFO2 #(.width(32'd37), .guarded(1'd1)) alu_results(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(alu_results_D_IN),
						      .ENQ(alu_results_ENQ),
						      .DEQ(alu_results_DEQ),
						      .CLR(alu_results_CLR),
						      .D_OUT(alu_results_D_OUT),
						      .FULL_N(alu_results_FULL_N),
						      .EMPTY_N(alu_results_EMPTY_N));

  // submodule bu_redirs
  FIFO2 #(.width(32'd35), .guarded(1'd1)) bu_redirs(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(bu_redirs_D_IN),
						    .ENQ(bu_redirs_ENQ),
						    .DEQ(bu_redirs_DEQ),
						    .CLR(bu_redirs_CLR),
						    .D_OUT(bu_redirs_D_OUT),
						    .FULL_N(bu_redirs_FULL_N),
						    .EMPTY_N(bu_redirs_EMPTY_N));

  // submodule bu_results
  FIFO2 #(.width(32'd37), .guarded(1'd1)) bu_results(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(bu_results_D_IN),
						     .ENQ(bu_results_ENQ),
						     .DEQ(bu_results_DEQ),
						     .CLR(bu_results_CLR),
						     .D_OUT(bu_results_D_OUT),
						     .FULL_N(bu_results_FULL_N),
						     .EMPTY_N(bu_results_EMPTY_N));

  // submodule crs_crf_0_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_0_readBeforeLaterWrites_0(.CLK(CLK),
							     .D_IN(crs_crf_0_readBeforeLaterWrites_0_D_IN),
							     .EN(crs_crf_0_readBeforeLaterWrites_0_EN),
							     .Q_OUT(crs_crf_0_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_0_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_0_readBeforeLaterWrites_1(.CLK(CLK),
							     .D_IN(crs_crf_0_readBeforeLaterWrites_1_D_IN),
							     .EN(crs_crf_0_readBeforeLaterWrites_1_EN),
							     .Q_OUT(crs_crf_0_readBeforeLaterWrites_1_Q_OUT));

  // submodule crs_crf_10_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_10_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_10_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_10_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_10_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_10_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_10_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_10_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_10_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_11_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_11_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_11_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_11_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_11_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_11_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_11_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_11_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_11_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_12_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_12_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_12_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_12_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_12_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_12_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_12_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_12_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_12_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_13_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_13_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_13_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_13_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_13_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_13_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_13_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_13_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_13_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_14_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_14_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_14_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_14_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_14_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_14_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_14_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_14_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_14_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_15_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_15_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_15_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_15_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_15_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_15_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_15_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_15_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_15_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_16_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_16_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_16_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_16_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_16_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_16_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_16_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_16_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_16_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_17_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_17_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_17_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_17_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_17_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_17_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_17_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_17_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_17_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_18_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_18_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_18_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_18_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_18_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_18_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_18_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_18_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_18_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_19_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_19_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_19_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_19_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_19_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_19_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_19_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_19_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_19_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_1_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_1_readBeforeLaterWrites_0(.CLK(CLK),
							     .D_IN(crs_crf_1_readBeforeLaterWrites_0_D_IN),
							     .EN(crs_crf_1_readBeforeLaterWrites_0_EN),
							     .Q_OUT(crs_crf_1_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_1_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_1_readBeforeLaterWrites_1(.CLK(CLK),
							     .D_IN(crs_crf_1_readBeforeLaterWrites_1_D_IN),
							     .EN(crs_crf_1_readBeforeLaterWrites_1_EN),
							     .Q_OUT());

  // submodule crs_crf_20_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_20_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_20_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_20_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_20_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_20_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_20_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_20_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_20_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_21_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_21_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_21_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_21_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_21_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_21_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_21_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_21_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_21_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_22_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_22_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_22_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_22_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_22_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_22_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_22_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_22_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_22_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_23_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_23_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_23_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_23_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_23_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_23_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_23_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_23_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_23_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_24_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_24_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_24_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_24_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_24_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_24_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_24_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_24_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_24_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_25_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_25_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_25_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_25_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_25_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_25_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_25_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_25_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_25_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_26_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_26_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_26_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_26_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_26_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_26_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_26_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_26_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_26_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_27_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_27_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_27_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_27_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_27_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_27_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_27_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_27_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_27_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_28_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_28_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_28_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_28_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_28_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_28_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_28_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_28_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_28_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_29_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_29_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_29_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_29_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_29_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_29_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_29_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_29_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_29_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_2_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_2_readBeforeLaterWrites_0(.CLK(CLK),
							     .D_IN(crs_crf_2_readBeforeLaterWrites_0_D_IN),
							     .EN(crs_crf_2_readBeforeLaterWrites_0_EN),
							     .Q_OUT(crs_crf_2_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_2_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_2_readBeforeLaterWrites_1(.CLK(CLK),
							     .D_IN(crs_crf_2_readBeforeLaterWrites_1_D_IN),
							     .EN(crs_crf_2_readBeforeLaterWrites_1_EN),
							     .Q_OUT());

  // submodule crs_crf_30_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_30_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_30_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_30_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_30_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_30_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_30_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_30_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_30_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_31_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_31_readBeforeLaterWrites_0(.CLK(CLK),
							      .D_IN(crs_crf_31_readBeforeLaterWrites_0_D_IN),
							      .EN(crs_crf_31_readBeforeLaterWrites_0_EN),
							      .Q_OUT(crs_crf_31_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_31_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_31_readBeforeLaterWrites_1(.CLK(CLK),
							      .D_IN(crs_crf_31_readBeforeLaterWrites_1_D_IN),
							      .EN(crs_crf_31_readBeforeLaterWrites_1_EN),
							      .Q_OUT());

  // submodule crs_crf_3_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_3_readBeforeLaterWrites_0(.CLK(CLK),
							     .D_IN(crs_crf_3_readBeforeLaterWrites_0_D_IN),
							     .EN(crs_crf_3_readBeforeLaterWrites_0_EN),
							     .Q_OUT(crs_crf_3_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_3_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_3_readBeforeLaterWrites_1(.CLK(CLK),
							     .D_IN(crs_crf_3_readBeforeLaterWrites_1_D_IN),
							     .EN(crs_crf_3_readBeforeLaterWrites_1_EN),
							     .Q_OUT());

  // submodule crs_crf_4_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_4_readBeforeLaterWrites_0(.CLK(CLK),
							     .D_IN(crs_crf_4_readBeforeLaterWrites_0_D_IN),
							     .EN(crs_crf_4_readBeforeLaterWrites_0_EN),
							     .Q_OUT(crs_crf_4_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_4_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_4_readBeforeLaterWrites_1(.CLK(CLK),
							     .D_IN(crs_crf_4_readBeforeLaterWrites_1_D_IN),
							     .EN(crs_crf_4_readBeforeLaterWrites_1_EN),
							     .Q_OUT());

  // submodule crs_crf_5_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_5_readBeforeLaterWrites_0(.CLK(CLK),
							     .D_IN(crs_crf_5_readBeforeLaterWrites_0_D_IN),
							     .EN(crs_crf_5_readBeforeLaterWrites_0_EN),
							     .Q_OUT(crs_crf_5_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_5_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_5_readBeforeLaterWrites_1(.CLK(CLK),
							     .D_IN(crs_crf_5_readBeforeLaterWrites_1_D_IN),
							     .EN(crs_crf_5_readBeforeLaterWrites_1_EN),
							     .Q_OUT());

  // submodule crs_crf_6_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_6_readBeforeLaterWrites_0(.CLK(CLK),
							     .D_IN(crs_crf_6_readBeforeLaterWrites_0_D_IN),
							     .EN(crs_crf_6_readBeforeLaterWrites_0_EN),
							     .Q_OUT(crs_crf_6_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_6_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_6_readBeforeLaterWrites_1(.CLK(CLK),
							     .D_IN(crs_crf_6_readBeforeLaterWrites_1_D_IN),
							     .EN(crs_crf_6_readBeforeLaterWrites_1_EN),
							     .Q_OUT(crs_crf_6_readBeforeLaterWrites_1_Q_OUT));

  // submodule crs_crf_7_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_7_readBeforeLaterWrites_0(.CLK(CLK),
							     .D_IN(crs_crf_7_readBeforeLaterWrites_0_D_IN),
							     .EN(crs_crf_7_readBeforeLaterWrites_0_EN),
							     .Q_OUT(crs_crf_7_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_7_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_7_readBeforeLaterWrites_1(.CLK(CLK),
							     .D_IN(crs_crf_7_readBeforeLaterWrites_1_D_IN),
							     .EN(crs_crf_7_readBeforeLaterWrites_1_EN),
							     .Q_OUT());

  // submodule crs_crf_8_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_8_readBeforeLaterWrites_0(.CLK(CLK),
							     .D_IN(crs_crf_8_readBeforeLaterWrites_0_D_IN),
							     .EN(crs_crf_8_readBeforeLaterWrites_0_EN),
							     .Q_OUT(crs_crf_8_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_8_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_8_readBeforeLaterWrites_1(.CLK(CLK),
							     .D_IN(crs_crf_8_readBeforeLaterWrites_1_D_IN),
							     .EN(crs_crf_8_readBeforeLaterWrites_1_EN),
							     .Q_OUT());

  // submodule crs_crf_9_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_9_readBeforeLaterWrites_0(.CLK(CLK),
							     .D_IN(crs_crf_9_readBeforeLaterWrites_0_D_IN),
							     .EN(crs_crf_9_readBeforeLaterWrites_0_EN),
							     .Q_OUT(crs_crf_9_readBeforeLaterWrites_0_Q_OUT));

  // submodule crs_crf_9_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) crs_crf_9_readBeforeLaterWrites_1(.CLK(CLK),
							     .D_IN(crs_crf_9_readBeforeLaterWrites_1_D_IN),
							     .EN(crs_crf_9_readBeforeLaterWrites_1_EN),
							     .Q_OUT());

  // submodule d2e
  FIFO2 #(.width(32'd229), .guarded(1'd1)) d2e(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(d2e_D_IN),
					       .ENQ(d2e_ENQ),
					       .DEQ(d2e_DEQ),
					       .CLR(d2e_CLR),
					       .D_OUT(d2e_D_OUT),
					       .FULL_N(d2e_FULL_N),
					       .EMPTY_N(d2e_EMPTY_N));

  // submodule dCache
  mkCache32 dCache(.CLK(CLK),
		   .RST_N(RST_N),
		   .putFromMem_e(dCache_putFromMem_e),
		   .putFromProc_e(dCache_putFromProc_e),
		   .putFromProc_passthrough(dCache_putFromProc_passthrough),
		   .EN_putFromProc(dCache_EN_putFromProc),
		   .EN_getToProc(dCache_EN_getToProc),
		   .EN_getToMem(dCache_EN_getToMem),
		   .EN_putFromMem(dCache_EN_putFromMem),
		   .EN_invalidateLines(dCache_EN_invalidateLines),
		   .EN_putFlushRequest(dCache_EN_putFlushRequest),
		   .EN_blockTillFlushDone(dCache_EN_blockTillFlushDone),
		   .RDY_putFromProc(dCache_RDY_putFromProc),
		   .getToProc(dCache_getToProc),
		   .RDY_getToProc(dCache_RDY_getToProc),
		   .getToMem(dCache_getToMem),
		   .RDY_getToMem(dCache_RDY_getToMem),
		   .RDY_putFromMem(dCache_RDY_putFromMem),
		   .RDY_invalidateLines(),
		   .RDY_putFlushRequest(),
		   .RDY_blockTillFlushDone(dCache_RDY_blockTillFlushDone));

  // submodule decode_decodeWord
  FIFO2 #(.width(32'd32), .guarded(1'd1)) decode_decodeWord(.RST(RST_N),
							    .CLK(CLK),
							    .D_IN(decode_decodeWord_D_IN),
							    .ENQ(decode_decodeWord_ENQ),
							    .DEQ(decode_decodeWord_DEQ),
							    .CLR(decode_decodeWord_CLR),
							    .D_OUT(decode_decodeWord_D_OUT),
							    .FULL_N(decode_decodeWord_FULL_N),
							    .EMPTY_N(decode_decodeWord_EMPTY_N));

  // submodule decode_rf
  RegFile #(.addr_width(32'd5),
	    .data_width(32'd32),
	    .lo(5'h0),
	    .hi(5'd31)) decode_rf(.CLK(CLK),
				  .ADDR_1(decode_rf_ADDR_1),
				  .ADDR_2(decode_rf_ADDR_2),
				  .ADDR_3(decode_rf_ADDR_3),
				  .ADDR_4(decode_rf_ADDR_4),
				  .ADDR_5(decode_rf_ADDR_5),
				  .ADDR_IN(decode_rf_ADDR_IN),
				  .D_IN(decode_rf_D_IN),
				  .WE(decode_rf_WE),
				  .D_OUT_1(decode_rf_D_OUT_1),
				  .D_OUT_2(decode_rf_D_OUT_2),
				  .D_OUT_3(decode_rf_D_OUT_3),
				  .D_OUT_4(),
				  .D_OUT_5());

  // submodule decode_sc_ready_0_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_0_readBeforeLaterWrites_0(.CLK(CLK),
								     .D_IN(decode_sc_ready_0_readBeforeLaterWrites_0_D_IN),
								     .EN(decode_sc_ready_0_readBeforeLaterWrites_0_EN),
								     .Q_OUT(decode_sc_ready_0_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_0_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_0_readBeforeLaterWrites_1(.CLK(CLK),
								     .D_IN(decode_sc_ready_0_readBeforeLaterWrites_1_D_IN),
								     .EN(decode_sc_ready_0_readBeforeLaterWrites_1_EN),
								     .Q_OUT(decode_sc_ready_0_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_10_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_10_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_10_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_10_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_10_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_10_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_10_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_10_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_10_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_10_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_11_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_11_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_11_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_11_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_11_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_11_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_11_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_11_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_11_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_11_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_12_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_12_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_12_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_12_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_12_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_12_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_12_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_12_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_12_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_12_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_13_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_13_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_13_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_13_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_13_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_13_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_13_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_13_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_13_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_13_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_14_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_14_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_14_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_14_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_14_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_14_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_14_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_14_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_14_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_14_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_15_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_15_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_15_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_15_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_15_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_15_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_15_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_15_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_15_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_15_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_16_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_16_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_16_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_16_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_16_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_16_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_16_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_16_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_16_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_16_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_17_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_17_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_17_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_17_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_17_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_17_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_17_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_17_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_17_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_17_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_18_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_18_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_18_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_18_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_18_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_18_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_18_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_18_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_18_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_18_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_19_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_19_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_19_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_19_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_19_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_19_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_19_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_19_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_19_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_19_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_1_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_1_readBeforeLaterWrites_0(.CLK(CLK),
								     .D_IN(decode_sc_ready_1_readBeforeLaterWrites_0_D_IN),
								     .EN(decode_sc_ready_1_readBeforeLaterWrites_0_EN),
								     .Q_OUT(decode_sc_ready_1_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_1_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_1_readBeforeLaterWrites_1(.CLK(CLK),
								     .D_IN(decode_sc_ready_1_readBeforeLaterWrites_1_D_IN),
								     .EN(decode_sc_ready_1_readBeforeLaterWrites_1_EN),
								     .Q_OUT(decode_sc_ready_1_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_20_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_20_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_20_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_20_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_20_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_20_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_20_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_20_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_20_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_20_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_21_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_21_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_21_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_21_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_21_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_21_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_21_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_21_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_21_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_21_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_22_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_22_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_22_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_22_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_22_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_22_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_22_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_22_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_22_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_22_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_23_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_23_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_23_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_23_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_23_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_23_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_23_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_23_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_23_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_23_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_24_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_24_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_24_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_24_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_24_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_24_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_24_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_24_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_24_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_24_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_25_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_25_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_25_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_25_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_25_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_25_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_25_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_25_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_25_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_25_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_26_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_26_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_26_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_26_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_26_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_26_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_26_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_26_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_26_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_26_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_27_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_27_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_27_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_27_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_27_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_27_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_27_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_27_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_27_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_27_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_28_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_28_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_28_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_28_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_28_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_28_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_28_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_28_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_28_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_28_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_29_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_29_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_29_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_29_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_29_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_29_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_29_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_29_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_29_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_29_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_2_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_2_readBeforeLaterWrites_0(.CLK(CLK),
								     .D_IN(decode_sc_ready_2_readBeforeLaterWrites_0_D_IN),
								     .EN(decode_sc_ready_2_readBeforeLaterWrites_0_EN),
								     .Q_OUT(decode_sc_ready_2_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_2_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_2_readBeforeLaterWrites_1(.CLK(CLK),
								     .D_IN(decode_sc_ready_2_readBeforeLaterWrites_1_D_IN),
								     .EN(decode_sc_ready_2_readBeforeLaterWrites_1_EN),
								     .Q_OUT(decode_sc_ready_2_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_30_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_30_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_30_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_30_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_30_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_30_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_30_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_30_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_30_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_30_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_31_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_31_readBeforeLaterWrites_0(.CLK(CLK),
								      .D_IN(decode_sc_ready_31_readBeforeLaterWrites_0_D_IN),
								      .EN(decode_sc_ready_31_readBeforeLaterWrites_0_EN),
								      .Q_OUT(decode_sc_ready_31_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_31_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_31_readBeforeLaterWrites_1(.CLK(CLK),
								      .D_IN(decode_sc_ready_31_readBeforeLaterWrites_1_D_IN),
								      .EN(decode_sc_ready_31_readBeforeLaterWrites_1_EN),
								      .Q_OUT(decode_sc_ready_31_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_3_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_3_readBeforeLaterWrites_0(.CLK(CLK),
								     .D_IN(decode_sc_ready_3_readBeforeLaterWrites_0_D_IN),
								     .EN(decode_sc_ready_3_readBeforeLaterWrites_0_EN),
								     .Q_OUT(decode_sc_ready_3_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_3_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_3_readBeforeLaterWrites_1(.CLK(CLK),
								     .D_IN(decode_sc_ready_3_readBeforeLaterWrites_1_D_IN),
								     .EN(decode_sc_ready_3_readBeforeLaterWrites_1_EN),
								     .Q_OUT(decode_sc_ready_3_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_4_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_4_readBeforeLaterWrites_0(.CLK(CLK),
								     .D_IN(decode_sc_ready_4_readBeforeLaterWrites_0_D_IN),
								     .EN(decode_sc_ready_4_readBeforeLaterWrites_0_EN),
								     .Q_OUT(decode_sc_ready_4_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_4_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_4_readBeforeLaterWrites_1(.CLK(CLK),
								     .D_IN(decode_sc_ready_4_readBeforeLaterWrites_1_D_IN),
								     .EN(decode_sc_ready_4_readBeforeLaterWrites_1_EN),
								     .Q_OUT(decode_sc_ready_4_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_5_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_5_readBeforeLaterWrites_0(.CLK(CLK),
								     .D_IN(decode_sc_ready_5_readBeforeLaterWrites_0_D_IN),
								     .EN(decode_sc_ready_5_readBeforeLaterWrites_0_EN),
								     .Q_OUT(decode_sc_ready_5_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_5_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_5_readBeforeLaterWrites_1(.CLK(CLK),
								     .D_IN(decode_sc_ready_5_readBeforeLaterWrites_1_D_IN),
								     .EN(decode_sc_ready_5_readBeforeLaterWrites_1_EN),
								     .Q_OUT(decode_sc_ready_5_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_6_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_6_readBeforeLaterWrites_0(.CLK(CLK),
								     .D_IN(decode_sc_ready_6_readBeforeLaterWrites_0_D_IN),
								     .EN(decode_sc_ready_6_readBeforeLaterWrites_0_EN),
								     .Q_OUT(decode_sc_ready_6_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_6_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_6_readBeforeLaterWrites_1(.CLK(CLK),
								     .D_IN(decode_sc_ready_6_readBeforeLaterWrites_1_D_IN),
								     .EN(decode_sc_ready_6_readBeforeLaterWrites_1_EN),
								     .Q_OUT(decode_sc_ready_6_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_7_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_7_readBeforeLaterWrites_0(.CLK(CLK),
								     .D_IN(decode_sc_ready_7_readBeforeLaterWrites_0_D_IN),
								     .EN(decode_sc_ready_7_readBeforeLaterWrites_0_EN),
								     .Q_OUT(decode_sc_ready_7_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_7_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_7_readBeforeLaterWrites_1(.CLK(CLK),
								     .D_IN(decode_sc_ready_7_readBeforeLaterWrites_1_D_IN),
								     .EN(decode_sc_ready_7_readBeforeLaterWrites_1_EN),
								     .Q_OUT(decode_sc_ready_7_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_8_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_8_readBeforeLaterWrites_0(.CLK(CLK),
								     .D_IN(decode_sc_ready_8_readBeforeLaterWrites_0_D_IN),
								     .EN(decode_sc_ready_8_readBeforeLaterWrites_0_EN),
								     .Q_OUT(decode_sc_ready_8_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_8_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_8_readBeforeLaterWrites_1(.CLK(CLK),
								     .D_IN(decode_sc_ready_8_readBeforeLaterWrites_1_D_IN),
								     .EN(decode_sc_ready_8_readBeforeLaterWrites_1_EN),
								     .Q_OUT(decode_sc_ready_8_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_sc_ready_9_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_9_readBeforeLaterWrites_0(.CLK(CLK),
								     .D_IN(decode_sc_ready_9_readBeforeLaterWrites_0_D_IN),
								     .EN(decode_sc_ready_9_readBeforeLaterWrites_0_EN),
								     .Q_OUT(decode_sc_ready_9_readBeforeLaterWrites_0_Q_OUT));

  // submodule decode_sc_ready_9_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) decode_sc_ready_9_readBeforeLaterWrites_1(.CLK(CLK),
								     .D_IN(decode_sc_ready_9_readBeforeLaterWrites_1_D_IN),
								     .EN(decode_sc_ready_9_readBeforeLaterWrites_1_EN),
								     .Q_OUT(decode_sc_ready_9_readBeforeLaterWrites_1_Q_OUT));

  // submodule decode_ws2d
  FIFO2 #(.width(32'd70), .guarded(1'd1)) decode_ws2d(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(decode_ws2d_D_IN),
						      .ENQ(decode_ws2d_ENQ),
						      .DEQ(decode_ws2d_DEQ),
						      .CLR(decode_ws2d_CLR),
						      .D_OUT(decode_ws2d_D_OUT),
						      .FULL_N(decode_ws2d_FULL_N),
						      .EMPTY_N(decode_ws2d_EMPTY_N));

  // submodule dmemReqs
  FIFO2 #(.width(32'd66), .guarded(1'd1)) dmemReqs(.RST(RST_N),
						   .CLK(CLK),
						   .D_IN(dmemReqs_D_IN),
						   .ENQ(dmemReqs_ENQ),
						   .DEQ(dmemReqs_DEQ),
						   .CLR(dmemReqs_CLR),
						   .D_OUT(dmemReqs_D_OUT),
						   .FULL_N(dmemReqs_FULL_N),
						   .EMPTY_N(dmemReqs_EMPTY_N));

  // submodule e2w
  SizedFIFO #(.p1width(32'd133),
	      .p2depth(32'd4),
	      .p3cntr_width(32'd2),
	      .guarded(1'd1)) e2w(.RST(RST_N),
				  .CLK(CLK),
				  .D_IN(e2w_D_IN),
				  .ENQ(e2w_ENQ),
				  .DEQ(e2w_DEQ),
				  .CLR(e2w_CLR),
				  .D_OUT(e2w_D_OUT),
				  .FULL_N(e2w_FULL_N),
				  .EMPTY_N(e2w_EMPTY_N));

  // submodule epoch_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) epoch_readBeforeLaterWrites_0(.CLK(CLK),
							 .D_IN(epoch_readBeforeLaterWrites_0_D_IN),
							 .EN(epoch_readBeforeLaterWrites_0_EN),
							 .Q_OUT());

  // submodule epoch_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) epoch_readBeforeLaterWrites_1(.CLK(CLK),
							 .D_IN(epoch_readBeforeLaterWrites_1_D_IN),
							 .EN(epoch_readBeforeLaterWrites_1_EN),
							 .Q_OUT(epoch_readBeforeLaterWrites_1_Q_OUT));

  // submodule f2d
  FIFO2 #(.width(32'd70), .guarded(1'd1)) f2d(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(f2d_D_IN),
					      .ENQ(f2d_ENQ),
					      .DEQ(f2d_DEQ),
					      .CLR(f2d_CLR),
					      .D_OUT(f2d_D_OUT),
					      .FULL_N(f2d_FULL_N),
					      .EMPTY_N(f2d_EMPTY_N));

  // submodule fetch_epoch_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) fetch_epoch_readBeforeLaterWrites_0(.CLK(CLK),
							       .D_IN(fetch_epoch_readBeforeLaterWrites_0_D_IN),
							       .EN(fetch_epoch_readBeforeLaterWrites_0_EN),
							       .Q_OUT());

  // submodule fetch_epoch_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) fetch_epoch_readBeforeLaterWrites_1(.CLK(CLK),
							       .D_IN(fetch_epoch_readBeforeLaterWrites_1_D_IN),
							       .EN(fetch_epoch_readBeforeLaterWrites_1_EN),
							       .Q_OUT(fetch_epoch_readBeforeLaterWrites_1_Q_OUT));

  // submodule fetch_pc_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) fetch_pc_readBeforeLaterWrites_0(.CLK(CLK),
							    .D_IN(fetch_pc_readBeforeLaterWrites_0_D_IN),
							    .EN(fetch_pc_readBeforeLaterWrites_0_EN),
							    .Q_OUT(fetch_pc_readBeforeLaterWrites_0_Q_OUT));

  // submodule fetch_pc_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) fetch_pc_readBeforeLaterWrites_1(.CLK(CLK),
							    .D_IN(fetch_pc_readBeforeLaterWrites_1_D_IN),
							    .EN(fetch_pc_readBeforeLaterWrites_1_EN),
							    .Q_OUT(fetch_pc_readBeforeLaterWrites_1_Q_OUT));

  // submodule fromBus
  FIFO2 #(.width(32'd512), .guarded(1'd1)) fromBus(.RST(RST_N),
						   .CLK(CLK),
						   .D_IN(fromBus_D_IN),
						   .ENQ(fromBus_ENQ),
						   .DEQ(fromBus_DEQ),
						   .CLR(fromBus_CLR),
						   .D_OUT(fromBus_D_OUT),
						   .FULL_N(fromBus_FULL_N),
						   .EMPTY_N(fromBus_EMPTY_N));

  // submodule iCache
  mkICache iCache(.CLK(CLK),
		  .RST_N(RST_N),
		  .putFromMem_e(iCache_putFromMem_e),
		  .putFromProc_e(iCache_putFromProc_e),
		  .putFromProc_passthrough(iCache_putFromProc_passthrough),
		  .EN_putFromProc(iCache_EN_putFromProc),
		  .EN_getToProc(iCache_EN_getToProc),
		  .EN_getToMem(iCache_EN_getToMem),
		  .EN_putFromMem(iCache_EN_putFromMem),
		  .EN_invalidateLines(iCache_EN_invalidateLines),
		  .RDY_putFromProc(iCache_RDY_putFromProc),
		  .getToProc(iCache_getToProc),
		  .RDY_getToProc(iCache_RDY_getToProc),
		  .getToMem(iCache_getToMem),
		  .RDY_getToMem(iCache_RDY_getToMem),
		  .RDY_putFromMem(iCache_RDY_putFromMem),
		  .RDY_invalidateLines(iCache_RDY_invalidateLines));

  // submodule mdu_reqs
  FIFO2 #(.width(32'd67), .guarded(1'd1)) mdu_reqs(.RST(RST_N),
						   .CLK(CLK),
						   .D_IN(mdu_reqs_D_IN),
						   .ENQ(mdu_reqs_ENQ),
						   .DEQ(mdu_reqs_DEQ),
						   .CLR(mdu_reqs_CLR),
						   .D_OUT(mdu_reqs_D_OUT),
						   .FULL_N(mdu_reqs_FULL_N),
						   .EMPTY_N(mdu_reqs_EMPTY_N));

  // submodule mdu_results
  FIFO2 #(.width(32'd37), .guarded(1'd1)) mdu_results(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(mdu_results_D_IN),
						      .ENQ(mdu_results_ENQ),
						      .DEQ(mdu_results_DEQ),
						      .CLR(mdu_results_CLR),
						      .D_OUT(mdu_results_D_OUT),
						      .FULL_N(mdu_results_FULL_N),
						      .EMPTY_N(mdu_results_EMPTY_N));

  // submodule mu_currBusiness
  FIFO2 #(.width(32'd4), .guarded(1'd1)) mu_currBusiness(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(mu_currBusiness_D_IN),
							 .ENQ(mu_currBusiness_ENQ),
							 .DEQ(mu_currBusiness_DEQ),
							 .CLR(mu_currBusiness_CLR),
							 .D_OUT(mu_currBusiness_D_OUT),
							 .FULL_N(mu_currBusiness_FULL_N),
							 .EMPTY_N(mu_currBusiness_EMPTY_N));

  // submodule mu_results
  FIFO2 #(.width(32'd37), .guarded(1'd1)) mu_results(.RST(RST_N),
						     .CLK(CLK),
						     .D_IN(mu_results_D_IN),
						     .ENQ(mu_results_ENQ),
						     .DEQ(mu_results_DEQ),
						     .CLR(mu_results_CLR),
						     .D_OUT(mu_results_D_OUT),
						     .FULL_N(mu_results_FULL_N),
						     .EMPTY_N(mu_results_EMPTY_N));

  // submodule mu_stage1
  FIFO2 #(.width(32'd39), .guarded(1'd1)) mu_stage1(.RST(RST_N),
						    .CLK(CLK),
						    .D_IN(mu_stage1_D_IN),
						    .ENQ(mu_stage1_ENQ),
						    .DEQ(mu_stage1_DEQ),
						    .CLR(mu_stage1_CLR),
						    .D_OUT(mu_stage1_D_OUT),
						    .FULL_N(mu_stage1_FULL_N),
						    .EMPTY_N(mu_stage1_EMPTY_N));

  // submodule npc_readBeforeLaterWrites_0
  RevertReg #(.width(32'd1),
	      .init(1'd1)) npc_readBeforeLaterWrites_0(.CLK(CLK),
						       .D_IN(npc_readBeforeLaterWrites_0_D_IN),
						       .EN(npc_readBeforeLaterWrites_0_EN),
						       .Q_OUT());

  // submodule npc_readBeforeLaterWrites_1
  RevertReg #(.width(32'd1),
	      .init(1'd1)) npc_readBeforeLaterWrites_1(.CLK(CLK),
						       .D_IN(npc_readBeforeLaterWrites_1_D_IN),
						       .EN(npc_readBeforeLaterWrites_1_EN),
						       .Q_OUT(npc_readBeforeLaterWrites_1_Q_OUT));

  // submodule toBus
  FIFO2 #(.width(32'd547), .guarded(1'd1)) toBus(.RST(RST_N),
						 .CLK(CLK),
						 .D_IN(toBus_D_IN),
						 .ENQ(toBus_ENQ),
						 .DEQ(toBus_DEQ),
						 .CLR(toBus_CLR),
						 .D_OUT(toBus_D_OUT),
						 .FULL_N(toBus_FULL_N),
						 .EMPTY_N(toBus_EMPTY_N));

  // rule RL_handleBusResp
  assign WILL_FIRE_RL_handleBusResp =
	     busTracker_rv[5] &&
	     fromBus_i_notEmpty__87_AND_IF_busTracker_rv_po_ETC___d292 ;

  // rule RL_handleICacheRequest
  assign WILL_FIRE_RL_handleICacheRequest =
	     iCache_RDY_getToMem && !busTracker_rv_port1__read[5] &&
	     toBus_FULL_N &&
	     !globalFlushStall_state ;

  // rule RL_handleDCacheRequest
  assign WILL_FIRE_RL_handleDCacheRequest =
	     dCache_RDY_getToMem && toBus_FULL_N &&
	     !busTracker_rv_port1__read[5] &&
	     !WILL_FIRE_RL_handleICacheRequest ;

  // rule RL_mu_getMemoryResponse
  assign WILL_FIRE_RL_mu_getMemoryResponse =
	     mu_stage1_EMPTY_N &&
	     mu_results_i_notFull__74_AND_mu_stage1_first___ETC___d382 &&
	     (fsm_state == 2'd1 || fsm_state == 2'd2) &&
	     !mu_barrier ;

  // rule RL_mdu_fsm_action_l56c19
  assign WILL_FIRE_RL_mdu_fsm_action_l56c19 =
	     mdu_running && mdu_fsm_state_mkFSMstate == 4'd2 ;

  // rule RL_mdu_fsm_action_l61c25
  assign WILL_FIRE_RL_mdu_fsm_action_l61c25 =
	     mdu_running && mdu_fsm_state_mkFSMstate == 4'd4 ;

  // rule RL_mdu_fsm_action_l64c21
  assign WILL_FIRE_RL_mdu_fsm_action_l64c21 =
	     mdu_running && mdu_fsm_state_mkFSMstate == 4'd6 ;

  // rule RL_mdu_fsm_fsm_start
  assign WILL_FIRE_RL_mdu_fsm_fsm_start =
	     mdu_fsm_abort_whas__13_AND_mdu_fsm_abort_wget__ETC___d705 &&
	     mdu_fsm_start_reg ;

  // rule RL_mdu_fsm_action_l47c20
  assign WILL_FIRE_RL_mdu_fsm_action_l47c20 =
	     mdu_results_FULL_N && mdu_running && mdu_op == 2'd0 &&
	     mdu_fsm_start_wire_whas &&
	     (mdu_fsm_state_mkFSMstate == 4'd0 ||
	      mdu_fsm_state_mkFSMstate == 4'd9) ;

  // rule RL_mdu_fsm_action_l63c19
  assign WILL_FIRE_RL_mdu_fsm_action_l63c19 =
	     mdu_running &&
	     NOT_mdu_op_41_EQ_0_42_59_AND_mdu_op_41_EQ_1_60_ETC___d631 ;

  // rule RL_mdu_fsm_action_l66c20
  assign WILL_FIRE_RL_mdu_fsm_action_l66c20 =
	     mdu_results_FULL_N &&
	     mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d652 ;

  // rule RL_mdu_fsm_action_l71c17
  assign WILL_FIRE_RL_mdu_fsm_action_l71c17 =
	     mdu_running &&
	     (mdu_op != 2'd0 && mdu_op != 2'd1 && mdu_op != 2'd2 &&
	      mdu_fsm_start_wire_whas &&
	      mdu_fsm_state_mkFSMstate == 4'd0 ||
	      mdu_fsm_state_mkFSMstate == 4'd1 ||
	      mdu_fsm_state_mkFSMstate == 4'd8 ||
	      mdu_op != 2'd0 && mdu_op != 2'd1 && mdu_op != 2'd2 &&
	      mdu_fsm_start_wire_whas &&
	      mdu_fsm_state_mkFSMstate == 4'd9) ;

  // rule RL_mdu_fsm_idle_l35c14
  assign WILL_FIRE_RL_mdu_fsm_idle_l35c14 =
	     (mdu_op != 2'd0 || !mdu_fsm_start_wire_whas) &&
	     mdu_op_41_EQ_0_42_OR_NOT_mdu_op_41_EQ_1_60_59__ETC___d700 &&
	     mdu_fsm_state_mkFSMstate == 4'd9 ;

  // rule RL_mdu_handleReq
  assign WILL_FIRE_RL_mdu_handleReq =
	     mdu_reqs_EMPTY_N &&
	     mdu_fsm_abort_whas__13_AND_mdu_fsm_abort_wget__ETC___d705 &&
	     !mdu_fsm_start_reg &&
	     !mdu_running ;

  // rule RL_decode_decode
  assign WILL_FIRE_RL_decode_decode =
	     decode_decodeWord_i_notEmpty__294_AND_decode_d_ETC___d1529 &&
	     fsm_state == 2'd1 ;

  // rule RL_execute_execute
  assign WILL_FIRE_RL_execute_execute =
	     d2e_EMPTY_N && e2w_FULL_N &&
	     (IF_IF_crs_crf_0_readBeforeLaterWrites_0_read___ETC___d1689 !=
	      3'd0 ||
	      IF_d2e_first__678_BITS_101_TO_99_692_EQ_0_693__ETC___d1720) &&
	     (fsm_state == 2'd1 || fsm_state == 2'd2) ;

  // rule RL_commit_commit
  assign WILL_FIRE_RL_commit_commit =
	     e2w_EMPTY_N &&
	     (e2w_D_OUT[2:0] != 3'd0 ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2156) &&
	     IF_e2w_first__134_BIT_47_158_THEN_0_OR_NOT_e2w_ETC___d2350 &&
	     (fsm_state == 2'd1 || fsm_state == 2'd2) ;

  // rule RL_handleAsyncException
  assign WILL_FIRE_RL_handleAsyncException =
	     IF_busError_wget__529_THEN_NOT_exceptions_busy_ETC___d2539 &&
	     (fsm_state == 2'd1 || fsm_state == 2'd2) &&
	     !WILL_FIRE_RL_commit_commit ;

  // rule RL_mu_handleRequest
  assign CAN_FIRE_RL_mu_handleRequest =
	     mu_reqs_rv_port1__read[129] && mu_stage1_FULL_N &&
	     NOT_IF_mu_reqs_rv_port1__read__17_BITS_3_TO_1__ETC___d459 &&
	     (fsm_state == 2'd1 || fsm_state == 2'd2) &&
	     !mu_barrier ;
  assign WILL_FIRE_RL_mu_handleRequest =
	     CAN_FIRE_RL_mu_handleRequest && !WILL_FIRE_RL_commit_commit ;

  // inputs to muxes for submodule ports
  assign MUX_busTracker_rv_port1__write_1__SEL_1 =
	     WILL_FIRE_RL_handleDCacheRequest &&
	     dCache_getToMem[546:543] == 4'd0 ;
  assign MUX_dmemReqs_enq_1__SEL_1 =
	     WILL_FIRE_RL_mu_handleRequest &&
	     IF_mu_reqs_rv_port1__read__17_BITS_3_TO_1_20_E_ETC___d467 &&
	     !mu_reqs_rv_port1__read[0] ;
  assign MUX_dmemReqs_enq_1__SEL_2 =
	     WILL_FIRE_RL_commit_commit && !e2w_D_OUT[47] &&
	     NOT_e2w_first__134_BIT_40_205_473_OR_NOT_e2w_f_ETC___d2479 ;
  assign MUX_epoch_readBeforeLaterWrites_1_write_1__SEL_1 =
	     WILL_FIRE_RL_commit_commit && e2w_D_OUT[2:0] == 3'd0 &&
	     e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 &&
	     (IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2192 ||
	      e2w_D_OUT[38]) ;
  assign MUX_exceptions_busy_write_1__SEL_1 =
	     WILL_FIRE_RL_commit_commit &&
	     (e2w_D_OUT[2:0] == 3'd0 &&
	      e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 &&
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2201 ||
	      e2w_D_OUT[2:0] == 3'd1 ||
	      e2w_D_OUT[2:0] == 3'd2 ||
	      e2w_D_OUT[2:0] == 3'd3) ;
  assign MUX_exceptions_busy_write_1__SEL_2 =
	     WILL_FIRE_RL_handleAsyncException &&
	     (putBusError_busError || putIrq_irq) ;
  assign MUX_fetch_epoch_port_1_wset_1__SEL_1 =
	     WILL_FIRE_RL_execute_execute &&
	     IF_IF_crs_crf_0_readBeforeLaterWrites_0_read___ETC___d1689 ==
	     3'd0 &&
	     d2e_first__678_BITS_101_TO_99_692_EQ_1_702_AND_ETC___d2049 ;
  assign MUX_mu_results_enq_1__SEL_2 =
	     dCache_RDY_blockTillFlushDone && mu_results_FULL_N &&
	     (fsm_state == 2'd1 || fsm_state == 2'd2) &&
	     mu_barrier ;
  assign MUX_dmemReqs_enq_1__VAL_1 =
	     { req_word_byte__h30377,
	       mu_reqs_rv_port1__read__17_BITS_128_TO_97_29_P_ETC___d438[31:2],
	       data__h29881 } ;
  assign MUX_epoch_port_1_wset_1__VAL_1 =
	     epoch_readBeforeLaterWrites_1_Q_OUT ?
	       x__h123168 :
	       epoch_register ;
  assign MUX_epoch_port_1_wset_1__VAL_2 =
	     epoch_readBeforeLaterWrites_1_Q_OUT ?
	       n_epoch__h115520 :
	       epoch_register ;
  assign MUX_exceptions_erReg_write_1__VAL_2 =
	     putBusError_busError ? 4'd4 : 4'd1 ;
  assign MUX_fetch_epoch_port_1_wset_1__VAL_1 =
	     fetch_epoch_readBeforeLaterWrites_1_Q_OUT ?
	       x__h116337 :
	       fetch_epoch_register ;
  assign MUX_fetch_epoch_port_1_wset_1__VAL_2 =
	     fetch_epoch_readBeforeLaterWrites_1_Q_OUT ?
	       n_epoch__h115520 :
	       fetch_epoch_register ;
  assign MUX_fetch_pc_port_1_wset_1__VAL_1 =
	     fetch_pc_readBeforeLaterWrites_1_Q_OUT ?
	       x__h115931 :
	       def__h26446 ;
  assign MUX_fetch_pc_port_1_wset_1__VAL_2 =
	     fetch_pc_readBeforeLaterWrites_1_Q_OUT ?
	       x__h118032 :
	       def__h26446 ;
  assign MUX_mdu_b_write_1__VAL_1 = { 1'd0, mdu_b[31:1] } ;
  assign MUX_mdu_b_write_1__VAL_2 = { mdu_b[30:0], 1'd0 } ;
  assign MUX_mdu_res_write_1__VAL_1 = mdu_res | mdu_b ;
  assign MUX_mdu_results_enq_1__VAL_1 =
	     { mdu_rv1_53_MUL_mdu_rv2_54___d555[31:0], 5'd10 } ;
  assign MUX_mdu_results_enq_1__VAL_2 = { x_data__h69372, 5'd10 } ;
  assign MUX_mdu_rv1_write_1__VAL_1 = mdu_rv1 - mdu_rv2 ;
  assign MUX_mdu_rv1_write_1__VAL_2 =
	     mdu_reqs_D_OUT[2] ? x__h70722 : mdu_reqs_D_OUT[66:35] ;
  assign MUX_mdu_rv2_write_1__VAL_1 = { 1'd0, mdu_rv2[31:1] } ;
  assign MUX_mdu_rv2_write_1__VAL_2 = { mdu_rv2[30:0], 1'd0 } ;
  assign MUX_mdu_rv2_write_1__VAL_3 =
	     mdu_reqs_D_OUT[2] ? x__h70796 : mdu_reqs_D_OUT[34:3] ;
  assign MUX_mu_results_enq_1__VAL_1 =
	     mu_stage1_D_OUT[38] ?
	       mu_stage1_D_OUT[37:1] :
	       { x_data__h29455, 5'd10 } ;
  assign MUX_npc_port_1_wset_1__VAL_1 =
	     npc_readBeforeLaterWrites_1_Q_OUT ? x__h122945 : npc_register ;
  assign MUX_npc_port_1_wset_1__VAL_2 =
	     npc_readBeforeLaterWrites_1_Q_OUT ? x__h118032 : npc_register ;

  // inlined wires
  assign crs_crf_0_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd0 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_1_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd1 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_2_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd2 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_3_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd3 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_4_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd4 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_5_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd5 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_6_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd6 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_7_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd7 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_8_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd8 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_9_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd9 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_10_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd10 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_11_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd11 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_12_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd12 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_13_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd13 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_14_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd14 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_15_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd15 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_16_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd16 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_17_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd17 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_18_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd18 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_19_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd19 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_20_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd20 &&
	     !e2w_D_OUT[47] &&
	     e2w_D_OUT[40] &&
	     (e2w_D_OUT[37:34] == 4'b1110 || e2w_D_OUT[37:34] == 4'b1011) &&
	     e2w_first__134_BITS_2_TO_0_135_EQ_0_136_AND_e2_ETC___d2432 ;
  assign crs_crf_21_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd21 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_22_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd22 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_23_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd23 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_24_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd24 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_25_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd25 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_26_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd26 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_27_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd27 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_28_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd28 &&
	     !e2w_D_OUT[47] &&
	     e2w_D_OUT[40] &&
	     (e2w_D_OUT[37:34] == 4'b1110 || e2w_D_OUT[37:34] == 4'b1011) &&
	     e2w_first__134_BITS_2_TO_0_135_EQ_0_136_AND_e2_ETC___d2459 ;
  assign crs_crf_29_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd29 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_30_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd30 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign crs_crf_31_port_0_whas =
	     WILL_FIRE_RL_commit_commit && idx__h119589 == 5'd31 &&
	     !e2w_D_OUT[47] &&
	     e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 ;
  assign npc_port_1_whas =
	     WILL_FIRE_RL_commit_commit && e2w_D_OUT[2:0] == 3'd0 &&
	     e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 &&
	     (IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2192 ||
	      e2w_D_OUT[38]) ||
	     fsm_state == 2'd3 ;
  assign fetch_pc_port_0_whas =
	     f2d_i_notFull__44_AND_NOT_IF_fetch_pc_readBefo_ETC___d358 &&
	     (fsm_state == 2'd1 || fsm_state == 2'd2) &&
	     !globalFlushStall_state ;
  assign fetch_pc_port_1_whas =
	     WILL_FIRE_RL_execute_execute &&
	     IF_IF_crs_crf_0_readBeforeLaterWrites_0_read___ETC___d1689 ==
	     3'd0 &&
	     d2e_first__678_BITS_101_TO_99_692_EQ_1_702_AND_ETC___d2049 ||
	     fsm_state == 2'd3 ;
  assign mdu_fsm_start_wire_whas =
	     WILL_FIRE_RL_mdu_fsm_fsm_start ||
	     mdu_fsm_start_reg_1 && !mdu_fsm_state_fired ;
  assign decode_freeReg_whas = WILL_FIRE_RL_commit_commit && e2w_D_OUT[47] ;
  assign decode_markReg_whas =
	     WILL_FIRE_RL_decode_decode &&
	     NOT_decode_decodeWord_first__295_BITS_2_TO_0_2_ETC___d1576 &&
	     decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1593 &&
	     rd__h104066 != 5'h0 ;
  assign decode_sc_ready_0_port_0_wget =
	     decode_sc_ready_0_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_0_register ;
  assign decode_sc_ready_0_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd0 && decode_freeReg_whas ;
  assign decode_sc_ready_0_port_1_wget =
	     !decode_sc_ready_0_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_0_port_0_whas__31_THEN_deco_ETC___d734 ;
  assign decode_sc_ready_0_port_1_whas =
	     dst__h96123 == 5'd0 && decode_markReg_whas ;
  assign decode_sc_ready_1_port_0_wget =
	     decode_sc_ready_1_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_1_register ;
  assign decode_sc_ready_1_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd1 && decode_freeReg_whas ;
  assign decode_sc_ready_1_port_1_wget =
	     !decode_sc_ready_1_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_1_port_0_whas__38_THEN_deco_ETC___d741 ;
  assign decode_sc_ready_1_port_1_whas =
	     dst__h96123 == 5'd1 && decode_markReg_whas ;
  assign decode_sc_ready_2_port_0_wget =
	     decode_sc_ready_2_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_2_register ;
  assign decode_sc_ready_2_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd2 && decode_freeReg_whas ;
  assign decode_sc_ready_2_port_1_wget =
	     !decode_sc_ready_2_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_2_port_0_whas__45_THEN_deco_ETC___d748 ;
  assign decode_sc_ready_2_port_1_whas =
	     dst__h96123 == 5'd2 && decode_markReg_whas ;
  assign decode_sc_ready_3_port_0_wget =
	     decode_sc_ready_3_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_3_register ;
  assign decode_sc_ready_3_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd3 && decode_freeReg_whas ;
  assign decode_sc_ready_3_port_1_wget =
	     !decode_sc_ready_3_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_3_port_0_whas__52_THEN_deco_ETC___d755 ;
  assign decode_sc_ready_3_port_1_whas =
	     dst__h96123 == 5'd3 && decode_markReg_whas ;
  assign decode_sc_ready_4_port_0_wget =
	     decode_sc_ready_4_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_4_register ;
  assign decode_sc_ready_4_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd4 && decode_freeReg_whas ;
  assign decode_sc_ready_4_port_1_wget =
	     !decode_sc_ready_4_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_4_port_0_whas__59_THEN_deco_ETC___d762 ;
  assign decode_sc_ready_4_port_1_whas =
	     dst__h96123 == 5'd4 && decode_markReg_whas ;
  assign decode_sc_ready_5_port_0_wget =
	     decode_sc_ready_5_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_5_register ;
  assign decode_sc_ready_5_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd5 && decode_freeReg_whas ;
  assign decode_sc_ready_5_port_1_wget =
	     !decode_sc_ready_5_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_5_port_0_whas__66_THEN_deco_ETC___d769 ;
  assign decode_sc_ready_5_port_1_whas =
	     dst__h96123 == 5'd5 && decode_markReg_whas ;
  assign decode_sc_ready_6_port_0_wget =
	     decode_sc_ready_6_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_6_register ;
  assign decode_sc_ready_6_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd6 && decode_freeReg_whas ;
  assign decode_sc_ready_6_port_1_wget =
	     !decode_sc_ready_6_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_6_port_0_whas__73_THEN_deco_ETC___d776 ;
  assign decode_sc_ready_6_port_1_whas =
	     dst__h96123 == 5'd6 && decode_markReg_whas ;
  assign decode_sc_ready_7_port_0_wget =
	     decode_sc_ready_7_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_7_register ;
  assign decode_sc_ready_7_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd7 && decode_freeReg_whas ;
  assign decode_sc_ready_7_port_1_wget =
	     !decode_sc_ready_7_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_7_port_0_whas__80_THEN_deco_ETC___d783 ;
  assign decode_sc_ready_7_port_1_whas =
	     dst__h96123 == 5'd7 && decode_markReg_whas ;
  assign decode_sc_ready_8_port_0_wget =
	     decode_sc_ready_8_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_8_register ;
  assign decode_sc_ready_8_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd8 && decode_freeReg_whas ;
  assign decode_sc_ready_8_port_1_wget =
	     !decode_sc_ready_8_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_8_port_0_whas__87_THEN_deco_ETC___d790 ;
  assign decode_sc_ready_8_port_1_whas =
	     dst__h96123 == 5'd8 && decode_markReg_whas ;
  assign decode_sc_ready_9_port_0_wget =
	     decode_sc_ready_9_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_9_register ;
  assign decode_sc_ready_9_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd9 && decode_freeReg_whas ;
  assign decode_sc_ready_9_port_1_wget =
	     !decode_sc_ready_9_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_9_port_0_whas__94_THEN_deco_ETC___d797 ;
  assign decode_sc_ready_9_port_1_whas =
	     dst__h96123 == 5'd9 && decode_markReg_whas ;
  assign decode_sc_ready_10_port_0_wget =
	     decode_sc_ready_10_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_10_register ;
  assign decode_sc_ready_10_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd10 && decode_freeReg_whas ;
  assign decode_sc_ready_10_port_1_wget =
	     !decode_sc_ready_10_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_10_port_0_whas__01_THEN_dec_ETC___d804 ;
  assign decode_sc_ready_10_port_1_whas =
	     dst__h96123 == 5'd10 && decode_markReg_whas ;
  assign decode_sc_ready_11_port_0_wget =
	     decode_sc_ready_11_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_11_register ;
  assign decode_sc_ready_11_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd11 && decode_freeReg_whas ;
  assign decode_sc_ready_11_port_1_wget =
	     !decode_sc_ready_11_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_11_port_0_whas__08_THEN_dec_ETC___d811 ;
  assign decode_sc_ready_11_port_1_whas =
	     dst__h96123 == 5'd11 && decode_markReg_whas ;
  assign decode_sc_ready_12_port_0_wget =
	     decode_sc_ready_12_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_12_register ;
  assign decode_sc_ready_12_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd12 && decode_freeReg_whas ;
  assign decode_sc_ready_12_port_1_wget =
	     !decode_sc_ready_12_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_12_port_0_whas__15_THEN_dec_ETC___d818 ;
  assign decode_sc_ready_12_port_1_whas =
	     dst__h96123 == 5'd12 && decode_markReg_whas ;
  assign decode_sc_ready_13_port_0_wget =
	     decode_sc_ready_13_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_13_register ;
  assign decode_sc_ready_13_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd13 && decode_freeReg_whas ;
  assign decode_sc_ready_13_port_1_wget =
	     !decode_sc_ready_13_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_13_port_0_whas__22_THEN_dec_ETC___d825 ;
  assign decode_sc_ready_13_port_1_whas =
	     dst__h96123 == 5'd13 && decode_markReg_whas ;
  assign decode_sc_ready_14_port_0_wget =
	     decode_sc_ready_14_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_14_register ;
  assign decode_sc_ready_14_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd14 && decode_freeReg_whas ;
  assign decode_sc_ready_14_port_1_wget =
	     !decode_sc_ready_14_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_14_port_0_whas__29_THEN_dec_ETC___d832 ;
  assign decode_sc_ready_14_port_1_whas =
	     dst__h96123 == 5'd14 && decode_markReg_whas ;
  assign decode_sc_ready_15_port_0_wget =
	     decode_sc_ready_15_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_15_register ;
  assign decode_sc_ready_15_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd15 && decode_freeReg_whas ;
  assign decode_sc_ready_15_port_1_wget =
	     !decode_sc_ready_15_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_15_port_0_whas__36_THEN_dec_ETC___d839 ;
  assign decode_sc_ready_15_port_1_whas =
	     dst__h96123 == 5'd15 && decode_markReg_whas ;
  assign decode_sc_ready_16_port_0_wget =
	     decode_sc_ready_16_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_16_register ;
  assign decode_sc_ready_16_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd16 && decode_freeReg_whas ;
  assign decode_sc_ready_16_port_1_wget =
	     !decode_sc_ready_16_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_16_port_0_whas__43_THEN_dec_ETC___d846 ;
  assign decode_sc_ready_16_port_1_whas =
	     dst__h96123 == 5'd16 && decode_markReg_whas ;
  assign decode_sc_ready_17_port_0_wget =
	     decode_sc_ready_17_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_17_register ;
  assign decode_sc_ready_17_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd17 && decode_freeReg_whas ;
  assign decode_sc_ready_17_port_1_wget =
	     !decode_sc_ready_17_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_17_port_0_whas__50_THEN_dec_ETC___d853 ;
  assign decode_sc_ready_17_port_1_whas =
	     dst__h96123 == 5'd17 && decode_markReg_whas ;
  assign decode_sc_ready_18_port_0_wget =
	     decode_sc_ready_18_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_18_register ;
  assign decode_sc_ready_18_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd18 && decode_freeReg_whas ;
  assign decode_sc_ready_18_port_1_wget =
	     !decode_sc_ready_18_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_18_port_0_whas__57_THEN_dec_ETC___d860 ;
  assign decode_sc_ready_18_port_1_whas =
	     dst__h96123 == 5'd18 && decode_markReg_whas ;
  assign decode_sc_ready_19_port_0_wget =
	     decode_sc_ready_19_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_19_register ;
  assign decode_sc_ready_19_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd19 && decode_freeReg_whas ;
  assign decode_sc_ready_19_port_1_wget =
	     !decode_sc_ready_19_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_19_port_0_whas__64_THEN_dec_ETC___d867 ;
  assign decode_sc_ready_19_port_1_whas =
	     dst__h96123 == 5'd19 && decode_markReg_whas ;
  assign decode_sc_ready_20_port_0_wget =
	     decode_sc_ready_20_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_20_register ;
  assign decode_sc_ready_20_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd20 && decode_freeReg_whas ;
  assign decode_sc_ready_20_port_1_wget =
	     !decode_sc_ready_20_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_20_port_0_whas__71_THEN_dec_ETC___d874 ;
  assign decode_sc_ready_20_port_1_whas =
	     dst__h96123 == 5'd20 && decode_markReg_whas ;
  assign decode_sc_ready_21_port_0_wget =
	     decode_sc_ready_21_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_21_register ;
  assign decode_sc_ready_21_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd21 && decode_freeReg_whas ;
  assign decode_sc_ready_21_port_1_wget =
	     !decode_sc_ready_21_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_21_port_0_whas__78_THEN_dec_ETC___d881 ;
  assign decode_sc_ready_21_port_1_whas =
	     dst__h96123 == 5'd21 && decode_markReg_whas ;
  assign decode_sc_ready_22_port_0_wget =
	     decode_sc_ready_22_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_22_register ;
  assign decode_sc_ready_22_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd22 && decode_freeReg_whas ;
  assign decode_sc_ready_22_port_1_wget =
	     !decode_sc_ready_22_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_22_port_0_whas__85_THEN_dec_ETC___d888 ;
  assign decode_sc_ready_22_port_1_whas =
	     dst__h96123 == 5'd22 && decode_markReg_whas ;
  assign decode_sc_ready_23_port_0_wget =
	     decode_sc_ready_23_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_23_register ;
  assign decode_sc_ready_23_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd23 && decode_freeReg_whas ;
  assign decode_sc_ready_23_port_1_wget =
	     !decode_sc_ready_23_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_23_port_0_whas__92_THEN_dec_ETC___d895 ;
  assign decode_sc_ready_23_port_1_whas =
	     dst__h96123 == 5'd23 && decode_markReg_whas ;
  assign decode_sc_ready_24_port_0_wget =
	     decode_sc_ready_24_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_24_register ;
  assign decode_sc_ready_24_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd24 && decode_freeReg_whas ;
  assign decode_sc_ready_24_port_1_wget =
	     !decode_sc_ready_24_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_24_port_0_whas__99_THEN_dec_ETC___d902 ;
  assign decode_sc_ready_24_port_1_whas =
	     dst__h96123 == 5'd24 && decode_markReg_whas ;
  assign decode_sc_ready_25_port_0_wget =
	     decode_sc_ready_25_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_25_register ;
  assign decode_sc_ready_25_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd25 && decode_freeReg_whas ;
  assign decode_sc_ready_25_port_1_wget =
	     !decode_sc_ready_25_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_25_port_0_whas__06_THEN_dec_ETC___d909 ;
  assign decode_sc_ready_25_port_1_whas =
	     dst__h96123 == 5'd25 && decode_markReg_whas ;
  assign decode_sc_ready_26_port_0_wget =
	     decode_sc_ready_26_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_26_register ;
  assign decode_sc_ready_26_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd26 && decode_freeReg_whas ;
  assign decode_sc_ready_26_port_1_wget =
	     !decode_sc_ready_26_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_26_port_0_whas__13_THEN_dec_ETC___d916 ;
  assign decode_sc_ready_26_port_1_whas =
	     dst__h96123 == 5'd26 && decode_markReg_whas ;
  assign decode_sc_ready_27_port_0_wget =
	     decode_sc_ready_27_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_27_register ;
  assign decode_sc_ready_27_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd27 && decode_freeReg_whas ;
  assign decode_sc_ready_27_port_1_wget =
	     !decode_sc_ready_27_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_27_port_0_whas__20_THEN_dec_ETC___d923 ;
  assign decode_sc_ready_27_port_1_whas =
	     dst__h96123 == 5'd27 && decode_markReg_whas ;
  assign decode_sc_ready_28_port_0_wget =
	     decode_sc_ready_28_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_28_register ;
  assign decode_sc_ready_28_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd28 && decode_freeReg_whas ;
  assign decode_sc_ready_28_port_1_wget =
	     !decode_sc_ready_28_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_28_port_0_whas__27_THEN_dec_ETC___d930 ;
  assign decode_sc_ready_28_port_1_whas =
	     dst__h96123 == 5'd28 && decode_markReg_whas ;
  assign decode_sc_ready_29_port_0_wget =
	     decode_sc_ready_29_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_29_register ;
  assign decode_sc_ready_29_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd29 && decode_freeReg_whas ;
  assign decode_sc_ready_29_port_1_wget =
	     !decode_sc_ready_29_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_29_port_0_whas__34_THEN_dec_ETC___d937 ;
  assign decode_sc_ready_29_port_1_whas =
	     dst__h96123 == 5'd29 && decode_markReg_whas ;
  assign decode_sc_ready_30_port_0_wget =
	     decode_sc_ready_30_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_30_register ;
  assign decode_sc_ready_30_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd30 && decode_freeReg_whas ;
  assign decode_sc_ready_30_port_1_wget =
	     !decode_sc_ready_30_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_30_port_0_whas__41_THEN_dec_ETC___d944 ;
  assign decode_sc_ready_30_port_1_whas =
	     dst__h96123 == 5'd30 && decode_markReg_whas ;
  assign decode_sc_ready_31_port_0_wget =
	     decode_sc_ready_31_readBeforeLaterWrites_0_Q_OUT ||
	     decode_sc_ready_31_register ;
  assign decode_sc_ready_31_port_0_whas =
	     e2w_D_OUT[46:42] == 5'd31 && decode_freeReg_whas ;
  assign decode_sc_ready_31_port_1_wget =
	     !decode_sc_ready_31_readBeforeLaterWrites_1_Q_OUT &&
	     IF_decode_sc_ready_31_port_0_whas__48_THEN_dec_ETC___d951 ;
  assign decode_sc_ready_31_port_1_whas =
	     dst__h96123 == 5'd31 && decode_markReg_whas ;
  assign globalFlushStall_setState_whas =
	     WILL_FIRE_RL_execute_execute &&
	     IF_IF_crs_crf_0_readBeforeLaterWrites_0_read___ETC___d1689 ==
	     3'd0 &&
	     d2e_D_OUT[101:99] == 3'd0 &&
	     d2e_D_OUT[135] ;
  assign fsm_stopDecode_whas =
	     WILL_FIRE_RL_decode_decode &&
	     NOT_decode_decodeWord_first__295_BITS_31_TO_28_ETC___d1620 &&
	     decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1624 ;
  assign fsm_restartDecode_whas =
	     WILL_FIRE_RL_commit_commit && e2w_D_OUT[41] &&
	     e2w_D_OUT[37:34] != 4'b1100 ;
  assign mdu_fsm_state_set_pw_whas =
	     WILL_FIRE_RL_mdu_fsm_idle_l35c14 ||
	     WILL_FIRE_RL_mdu_fsm_action_l71c17 ||
	     WILL_FIRE_RL_mdu_fsm_action_l66c20 ||
	     WILL_FIRE_RL_mdu_fsm_action_l64c21 ||
	     WILL_FIRE_RL_mdu_fsm_action_l63c19 ||
	     WILL_FIRE_RL_mdu_fsm_action_l61c25 ||
	     mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d609 ||
	     WILL_FIRE_RL_mdu_fsm_action_l56c19 ||
	     mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d582 ||
	     WILL_FIRE_RL_mdu_fsm_action_l47c20 ;
  assign decode_incCounter_whas =
	     WILL_FIRE_RL_decode_decode &&
	     NOT_decode_decodeWord_first__295_BITS_2_TO_0_2_ETC___d1576 ;
  assign busTracker_rv_port1__read =
	     WILL_FIRE_RL_handleBusResp ? 6'd10 : busTracker_rv ;
  assign busTracker_rv_EN_port1__write =
	     WILL_FIRE_RL_handleDCacheRequest &&
	     dCache_getToMem[546:543] == 4'd0 ||
	     WILL_FIRE_RL_handleICacheRequest ;
  assign busTracker_rv_port1__write_1 =
	     MUX_busTracker_rv_port1__write_1__SEL_1 ? 6'd58 : 6'd42 ;
  assign busTracker_rv_port2__read =
	     busTracker_rv_EN_port1__write ?
	       busTracker_rv_port1__write_1 :
	       busTracker_rv_port1__read ;
  assign fromImem_rv_EN_port0__write =
	     iCache_RDY_getToProc && !fromImem_rv[128] ;
  assign fromImem_rv_port0__write_1 = { 1'd1, iCache_getToProc } ;
  assign fromImem_rv_port1__read =
	     fromImem_rv_EN_port0__write ?
	       fromImem_rv_port0__write_1 :
	       fromImem_rv ;
  assign fromImem_rv_EN_port1__write =
	     f2d_EMPTY_N &&
	     decode_ws2d_i_notFull__261_AND_decode_decodeWo_ETC___d1270 &&
	     (fsm_state == 2'd1 || fsm_state == 2'd2) &&
	     f2d_D_OUT[0] ;
  assign fromImem_rv_port2__read =
	     fromImem_rv_EN_port1__write ?
	       129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       fromImem_rv_port1__read ;
  assign fromDmem_rv_EN_port0__write =
	     dCache_RDY_getToProc && !fromDmem_rv[32] ;
  assign fromDmem_rv_port0__write_1 = { 1'd1, dCache_getToProc } ;
  assign fromDmem_rv_port1__read =
	     fromDmem_rv_EN_port0__write ?
	       fromDmem_rv_port0__write_1 :
	       fromDmem_rv ;
  assign fromDmem_rv_EN_port1__write =
	     WILL_FIRE_RL_mu_getMemoryResponse && !mu_stage1_D_OUT[38] ;
  assign fromDmem_rv_port2__read =
	     fromDmem_rv_EN_port1__write ?
	       33'h0AAAAAAAA :
	       fromDmem_rv_port1__read ;
  assign mu_reqs_rv_EN_port0__write =
	     WILL_FIRE_RL_execute_execute &&
	     IF_IF_crs_crf_0_readBeforeLaterWrites_0_read___ETC___d1689 ==
	     3'd0 &&
	     d2e_D_OUT[101:99] == 3'd0 &&
	     !d2e_D_OUT[135] ;
  assign mu_reqs_rv_port0__write_1 =
	     { 1'd1, d2e_D_OUT[98:3], d2e_D_OUT[133:102], d2e_D_OUT[149] } ;
  assign mu_reqs_rv_port1__read =
	     mu_reqs_rv_EN_port0__write ?
	       mu_reqs_rv_port0__write_1 :
	       mu_reqs_rv ;
  assign mu_reqs_rv_EN_port1__write =
	     WILL_FIRE_RL_mu_handleRequest &&
	     (NOT_IF_mu_reqs_rv_port1__read__17_BITS_3_TO_1__ETC___d446 ||
	      mu_reqs_rv_port1__read[0] ||
	      !mu_storeQueue_rv[66] ||
	      mu_storeQueue_rv[61:32] !=
	      mu_reqs_rv_port1__read__17_BITS_128_TO_97_29_P_ETC___d438[31:2]) ;
  assign mu_reqs_rv_port2__read =
	     mu_reqs_rv_EN_port1__write ?
	       130'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       mu_reqs_rv_port1__read ;
  assign mu_storeQueue_rv_port1__read =
	     MUX_dmemReqs_enq_1__SEL_2 ?
	       67'h2AAAAAAAAAAAAAAAA :
	       mu_storeQueue_rv ;
  assign mu_storeQueue_rv_EN_port1__write =
	     WILL_FIRE_RL_mu_handleRequest &&
	     IF_mu_reqs_rv_port1__read__17_BITS_3_TO_1_20_E_ETC___d467 &&
	     mu_reqs_rv_port1__read[0] ;
  assign mu_storeQueue_rv_port1__write_1 =
	     { 1'd1,
	       req_word_byte__h30377,
	       mu_reqs_rv_port1__read__17_BITS_128_TO_97_29_P_ETC___d438[31:2],
	       data__h29881 } ;
  assign mu_storeQueue_rv_port2__read =
	     mu_storeQueue_rv_EN_port1__write ?
	       mu_storeQueue_rv_port1__write_1 :
	       mu_storeQueue_rv_port1__read ;

  // register busTracker_rv
  assign busTracker_rv_D_IN = busTracker_rv_port2__read ;
  assign busTracker_rv_EN = 1'b1 ;

  // register crs_crf_0_register
  assign crs_crf_0_register_D_IN =
	     (fsm_state == 2'd3) ? x_wget__h976 : def__h1237 ;
  assign crs_crf_0_register_EN = 1'd1 ;

  // register crs_crf_10_register
  assign crs_crf_10_register_D_IN = def__h7657 ;
  assign crs_crf_10_register_EN = 1'd1 ;

  // register crs_crf_11_register
  assign crs_crf_11_register_D_IN = def__h8299 ;
  assign crs_crf_11_register_EN = 1'd1 ;

  // register crs_crf_12_register
  assign crs_crf_12_register_D_IN = def__h8941 ;
  assign crs_crf_12_register_EN = 1'd1 ;

  // register crs_crf_13_register
  assign crs_crf_13_register_D_IN = def__h9583 ;
  assign crs_crf_13_register_EN = 1'd1 ;

  // register crs_crf_14_register
  assign crs_crf_14_register_D_IN = def__h10225 ;
  assign crs_crf_14_register_EN = 1'd1 ;

  // register crs_crf_15_register
  assign crs_crf_15_register_D_IN = def__h10867 ;
  assign crs_crf_15_register_EN = 1'd1 ;

  // register crs_crf_16_register
  assign crs_crf_16_register_D_IN = def__h11509 ;
  assign crs_crf_16_register_EN = 1'd1 ;

  // register crs_crf_17_register
  assign crs_crf_17_register_D_IN = def__h12151 ;
  assign crs_crf_17_register_EN = 1'd1 ;

  // register crs_crf_18_register
  assign crs_crf_18_register_D_IN = def__h12793 ;
  assign crs_crf_18_register_EN = 1'd1 ;

  // register crs_crf_19_register
  assign crs_crf_19_register_D_IN = def__h13435 ;
  assign crs_crf_19_register_EN = 1'd1 ;

  // register crs_crf_1_register
  assign crs_crf_1_register_D_IN = def__h1879 ;
  assign crs_crf_1_register_EN = 1'd1 ;

  // register crs_crf_20_register
  assign crs_crf_20_register_D_IN = def__h14075 ;
  assign crs_crf_20_register_EN = 1'd1 ;

  // register crs_crf_21_register
  assign crs_crf_21_register_D_IN = def__h14717 ;
  assign crs_crf_21_register_EN = 1'd1 ;

  // register crs_crf_22_register
  assign crs_crf_22_register_D_IN = def__h15359 ;
  assign crs_crf_22_register_EN = 1'd1 ;

  // register crs_crf_23_register
  assign crs_crf_23_register_D_IN = def__h16001 ;
  assign crs_crf_23_register_EN = 1'd1 ;

  // register crs_crf_24_register
  assign crs_crf_24_register_D_IN = def__h16643 ;
  assign crs_crf_24_register_EN = 1'd1 ;

  // register crs_crf_25_register
  assign crs_crf_25_register_D_IN = def__h17285 ;
  assign crs_crf_25_register_EN = 1'd1 ;

  // register crs_crf_26_register
  assign crs_crf_26_register_D_IN = def__h17927 ;
  assign crs_crf_26_register_EN = 1'd1 ;

  // register crs_crf_27_register
  assign crs_crf_27_register_D_IN = def__h18569 ;
  assign crs_crf_27_register_EN = 1'd1 ;

  // register crs_crf_28_register
  assign crs_crf_28_register_D_IN = def__h19211 ;
  assign crs_crf_28_register_EN = 1'd1 ;

  // register crs_crf_29_register
  assign crs_crf_29_register_D_IN = def__h19853 ;
  assign crs_crf_29_register_EN = 1'd1 ;

  // register crs_crf_2_register
  assign crs_crf_2_register_D_IN = def__h2521 ;
  assign crs_crf_2_register_EN = 1'd1 ;

  // register crs_crf_30_register
  assign crs_crf_30_register_D_IN = def__h20495 ;
  assign crs_crf_30_register_EN = 1'd1 ;

  // register crs_crf_31_register
  assign crs_crf_31_register_D_IN = def__h21137 ;
  assign crs_crf_31_register_EN = 1'd1 ;

  // register crs_crf_3_register
  assign crs_crf_3_register_D_IN = def__h3163 ;
  assign crs_crf_3_register_EN = 1'd1 ;

  // register crs_crf_4_register
  assign crs_crf_4_register_D_IN = def__h3805 ;
  assign crs_crf_4_register_EN = 1'd1 ;

  // register crs_crf_5_register
  assign crs_crf_5_register_D_IN = def__h4447 ;
  assign crs_crf_5_register_EN = 1'd1 ;

  // register crs_crf_6_register
  assign crs_crf_6_register_D_IN =
	     (fsm_state == 2'd3) ? x_wget__h4828 : def__h5089 ;
  assign crs_crf_6_register_EN = 1'd1 ;

  // register crs_crf_7_register
  assign crs_crf_7_register_D_IN = def__h5731 ;
  assign crs_crf_7_register_EN = 1'd1 ;

  // register crs_crf_8_register
  assign crs_crf_8_register_D_IN = def__h6373 ;
  assign crs_crf_8_register_EN = 1'd1 ;

  // register crs_crf_9_register
  assign crs_crf_9_register_D_IN = def__h7015 ;
  assign crs_crf_9_register_EN = 1'd1 ;

  // register decode_fetchedLine
  assign decode_fetchedLine_D_IN = 128'h0 ;
  assign decode_fetchedLine_EN = 1'b0 ;

  // register decode_inflightCounter
  assign decode_inflightCounter_D_IN =
	     decode_inflightCounter +
	     CASE_x9109_0b0_0_1_15_0b10_1_0b11_0_15__q25 ;
  assign decode_inflightCounter_EN = 1'd1 ;

  // register decode_sc_ready_0_register
  assign decode_sc_ready_0_register_D_IN =
	     decode_sc_ready_0_port_1_whas ?
	       decode_sc_ready_0_port_1_wget :
	       IF_decode_sc_ready_0_port_0_whas__31_THEN_deco_ETC___d734 ;
  assign decode_sc_ready_0_register_EN = 1'd1 ;

  // register decode_sc_ready_10_register
  assign decode_sc_ready_10_register_D_IN =
	     decode_sc_ready_10_port_1_whas ?
	       decode_sc_ready_10_port_1_wget :
	       IF_decode_sc_ready_10_port_0_whas__01_THEN_dec_ETC___d804 ;
  assign decode_sc_ready_10_register_EN = 1'd1 ;

  // register decode_sc_ready_11_register
  assign decode_sc_ready_11_register_D_IN =
	     decode_sc_ready_11_port_1_whas ?
	       decode_sc_ready_11_port_1_wget :
	       IF_decode_sc_ready_11_port_0_whas__08_THEN_dec_ETC___d811 ;
  assign decode_sc_ready_11_register_EN = 1'd1 ;

  // register decode_sc_ready_12_register
  assign decode_sc_ready_12_register_D_IN =
	     decode_sc_ready_12_port_1_whas ?
	       decode_sc_ready_12_port_1_wget :
	       IF_decode_sc_ready_12_port_0_whas__15_THEN_dec_ETC___d818 ;
  assign decode_sc_ready_12_register_EN = 1'd1 ;

  // register decode_sc_ready_13_register
  assign decode_sc_ready_13_register_D_IN =
	     decode_sc_ready_13_port_1_whas ?
	       decode_sc_ready_13_port_1_wget :
	       IF_decode_sc_ready_13_port_0_whas__22_THEN_dec_ETC___d825 ;
  assign decode_sc_ready_13_register_EN = 1'd1 ;

  // register decode_sc_ready_14_register
  assign decode_sc_ready_14_register_D_IN =
	     decode_sc_ready_14_port_1_whas ?
	       decode_sc_ready_14_port_1_wget :
	       IF_decode_sc_ready_14_port_0_whas__29_THEN_dec_ETC___d832 ;
  assign decode_sc_ready_14_register_EN = 1'd1 ;

  // register decode_sc_ready_15_register
  assign decode_sc_ready_15_register_D_IN =
	     decode_sc_ready_15_port_1_whas ?
	       decode_sc_ready_15_port_1_wget :
	       IF_decode_sc_ready_15_port_0_whas__36_THEN_dec_ETC___d839 ;
  assign decode_sc_ready_15_register_EN = 1'd1 ;

  // register decode_sc_ready_16_register
  assign decode_sc_ready_16_register_D_IN =
	     decode_sc_ready_16_port_1_whas ?
	       decode_sc_ready_16_port_1_wget :
	       IF_decode_sc_ready_16_port_0_whas__43_THEN_dec_ETC___d846 ;
  assign decode_sc_ready_16_register_EN = 1'd1 ;

  // register decode_sc_ready_17_register
  assign decode_sc_ready_17_register_D_IN =
	     decode_sc_ready_17_port_1_whas ?
	       decode_sc_ready_17_port_1_wget :
	       IF_decode_sc_ready_17_port_0_whas__50_THEN_dec_ETC___d853 ;
  assign decode_sc_ready_17_register_EN = 1'd1 ;

  // register decode_sc_ready_18_register
  assign decode_sc_ready_18_register_D_IN =
	     decode_sc_ready_18_port_1_whas ?
	       decode_sc_ready_18_port_1_wget :
	       IF_decode_sc_ready_18_port_0_whas__57_THEN_dec_ETC___d860 ;
  assign decode_sc_ready_18_register_EN = 1'd1 ;

  // register decode_sc_ready_19_register
  assign decode_sc_ready_19_register_D_IN =
	     decode_sc_ready_19_port_1_whas ?
	       decode_sc_ready_19_port_1_wget :
	       IF_decode_sc_ready_19_port_0_whas__64_THEN_dec_ETC___d867 ;
  assign decode_sc_ready_19_register_EN = 1'd1 ;

  // register decode_sc_ready_1_register
  assign decode_sc_ready_1_register_D_IN =
	     decode_sc_ready_1_port_1_whas ?
	       decode_sc_ready_1_port_1_wget :
	       IF_decode_sc_ready_1_port_0_whas__38_THEN_deco_ETC___d741 ;
  assign decode_sc_ready_1_register_EN = 1'd1 ;

  // register decode_sc_ready_20_register
  assign decode_sc_ready_20_register_D_IN =
	     decode_sc_ready_20_port_1_whas ?
	       decode_sc_ready_20_port_1_wget :
	       IF_decode_sc_ready_20_port_0_whas__71_THEN_dec_ETC___d874 ;
  assign decode_sc_ready_20_register_EN = 1'd1 ;

  // register decode_sc_ready_21_register
  assign decode_sc_ready_21_register_D_IN =
	     decode_sc_ready_21_port_1_whas ?
	       decode_sc_ready_21_port_1_wget :
	       IF_decode_sc_ready_21_port_0_whas__78_THEN_dec_ETC___d881 ;
  assign decode_sc_ready_21_register_EN = 1'd1 ;

  // register decode_sc_ready_22_register
  assign decode_sc_ready_22_register_D_IN =
	     decode_sc_ready_22_port_1_whas ?
	       decode_sc_ready_22_port_1_wget :
	       IF_decode_sc_ready_22_port_0_whas__85_THEN_dec_ETC___d888 ;
  assign decode_sc_ready_22_register_EN = 1'd1 ;

  // register decode_sc_ready_23_register
  assign decode_sc_ready_23_register_D_IN =
	     decode_sc_ready_23_port_1_whas ?
	       decode_sc_ready_23_port_1_wget :
	       IF_decode_sc_ready_23_port_0_whas__92_THEN_dec_ETC___d895 ;
  assign decode_sc_ready_23_register_EN = 1'd1 ;

  // register decode_sc_ready_24_register
  assign decode_sc_ready_24_register_D_IN =
	     decode_sc_ready_24_port_1_whas ?
	       decode_sc_ready_24_port_1_wget :
	       IF_decode_sc_ready_24_port_0_whas__99_THEN_dec_ETC___d902 ;
  assign decode_sc_ready_24_register_EN = 1'd1 ;

  // register decode_sc_ready_25_register
  assign decode_sc_ready_25_register_D_IN =
	     decode_sc_ready_25_port_1_whas ?
	       decode_sc_ready_25_port_1_wget :
	       IF_decode_sc_ready_25_port_0_whas__06_THEN_dec_ETC___d909 ;
  assign decode_sc_ready_25_register_EN = 1'd1 ;

  // register decode_sc_ready_26_register
  assign decode_sc_ready_26_register_D_IN =
	     decode_sc_ready_26_port_1_whas ?
	       decode_sc_ready_26_port_1_wget :
	       IF_decode_sc_ready_26_port_0_whas__13_THEN_dec_ETC___d916 ;
  assign decode_sc_ready_26_register_EN = 1'd1 ;

  // register decode_sc_ready_27_register
  assign decode_sc_ready_27_register_D_IN =
	     decode_sc_ready_27_port_1_whas ?
	       decode_sc_ready_27_port_1_wget :
	       IF_decode_sc_ready_27_port_0_whas__20_THEN_dec_ETC___d923 ;
  assign decode_sc_ready_27_register_EN = 1'd1 ;

  // register decode_sc_ready_28_register
  assign decode_sc_ready_28_register_D_IN =
	     decode_sc_ready_28_port_1_whas ?
	       decode_sc_ready_28_port_1_wget :
	       IF_decode_sc_ready_28_port_0_whas__27_THEN_dec_ETC___d930 ;
  assign decode_sc_ready_28_register_EN = 1'd1 ;

  // register decode_sc_ready_29_register
  assign decode_sc_ready_29_register_D_IN =
	     decode_sc_ready_29_port_1_whas ?
	       decode_sc_ready_29_port_1_wget :
	       IF_decode_sc_ready_29_port_0_whas__34_THEN_dec_ETC___d937 ;
  assign decode_sc_ready_29_register_EN = 1'd1 ;

  // register decode_sc_ready_2_register
  assign decode_sc_ready_2_register_D_IN =
	     decode_sc_ready_2_port_1_whas ?
	       decode_sc_ready_2_port_1_wget :
	       IF_decode_sc_ready_2_port_0_whas__45_THEN_deco_ETC___d748 ;
  assign decode_sc_ready_2_register_EN = 1'd1 ;

  // register decode_sc_ready_30_register
  assign decode_sc_ready_30_register_D_IN =
	     decode_sc_ready_30_port_1_whas ?
	       decode_sc_ready_30_port_1_wget :
	       IF_decode_sc_ready_30_port_0_whas__41_THEN_dec_ETC___d944 ;
  assign decode_sc_ready_30_register_EN = 1'd1 ;

  // register decode_sc_ready_31_register
  assign decode_sc_ready_31_register_D_IN =
	     decode_sc_ready_31_port_1_whas ?
	       decode_sc_ready_31_port_1_wget :
	       IF_decode_sc_ready_31_port_0_whas__48_THEN_dec_ETC___d951 ;
  assign decode_sc_ready_31_register_EN = 1'd1 ;

  // register decode_sc_ready_3_register
  assign decode_sc_ready_3_register_D_IN =
	     decode_sc_ready_3_port_1_whas ?
	       decode_sc_ready_3_port_1_wget :
	       IF_decode_sc_ready_3_port_0_whas__52_THEN_deco_ETC___d755 ;
  assign decode_sc_ready_3_register_EN = 1'd1 ;

  // register decode_sc_ready_4_register
  assign decode_sc_ready_4_register_D_IN =
	     decode_sc_ready_4_port_1_whas ?
	       decode_sc_ready_4_port_1_wget :
	       IF_decode_sc_ready_4_port_0_whas__59_THEN_deco_ETC___d762 ;
  assign decode_sc_ready_4_register_EN = 1'd1 ;

  // register decode_sc_ready_5_register
  assign decode_sc_ready_5_register_D_IN =
	     decode_sc_ready_5_port_1_whas ?
	       decode_sc_ready_5_port_1_wget :
	       IF_decode_sc_ready_5_port_0_whas__66_THEN_deco_ETC___d769 ;
  assign decode_sc_ready_5_register_EN = 1'd1 ;

  // register decode_sc_ready_6_register
  assign decode_sc_ready_6_register_D_IN =
	     decode_sc_ready_6_port_1_whas ?
	       decode_sc_ready_6_port_1_wget :
	       IF_decode_sc_ready_6_port_0_whas__73_THEN_deco_ETC___d776 ;
  assign decode_sc_ready_6_register_EN = 1'd1 ;

  // register decode_sc_ready_7_register
  assign decode_sc_ready_7_register_D_IN =
	     decode_sc_ready_7_port_1_whas ?
	       decode_sc_ready_7_port_1_wget :
	       IF_decode_sc_ready_7_port_0_whas__80_THEN_deco_ETC___d783 ;
  assign decode_sc_ready_7_register_EN = 1'd1 ;

  // register decode_sc_ready_8_register
  assign decode_sc_ready_8_register_D_IN =
	     decode_sc_ready_8_port_1_whas ?
	       decode_sc_ready_8_port_1_wget :
	       IF_decode_sc_ready_8_port_0_whas__87_THEN_deco_ETC___d790 ;
  assign decode_sc_ready_8_register_EN = 1'd1 ;

  // register decode_sc_ready_9_register
  assign decode_sc_ready_9_register_D_IN =
	     decode_sc_ready_9_port_1_whas ?
	       decode_sc_ready_9_port_1_wget :
	       IF_decode_sc_ready_9_port_0_whas__94_THEN_deco_ETC___d797 ;
  assign decode_sc_ready_9_register_EN = 1'd1 ;

  // register epoch_register
  assign epoch_register_D_IN =
	     npc_port_1_whas ? x_wget__h22121 : epoch_register ;
  assign epoch_register_EN = 1'd1 ;

  // register exceptions_busy
  assign exceptions_busy_D_IN = fsm_state != 2'd3 ;
  assign exceptions_busy_EN =
	     MUX_exceptions_busy_write_1__SEL_1 ||
	     WILL_FIRE_RL_handleAsyncException &&
	     (putBusError_busError || putIrq_irq) ||
	     fsm_state == 2'd3 ;

  // register exceptions_erReg
  assign exceptions_erReg_D_IN =
	     MUX_exceptions_busy_write_1__SEL_1 ?
	       IF_e2w_first__134_BITS_2_TO_0_135_EQ_0_136_AND_ETC___d2503 :
	       MUX_exceptions_erReg_write_1__VAL_2 ;
  assign exceptions_erReg_EN =
	     MUX_exceptions_busy_write_1__SEL_1 ||
	     WILL_FIRE_RL_handleAsyncException &&
	     (putBusError_busError || putIrq_irq) ;

  // register fetch_epoch_register
  assign fetch_epoch_register_D_IN =
	     fetch_pc_port_1_whas ? x_wget__h26792 : fetch_epoch_register ;
  assign fetch_epoch_register_EN = 1'd1 ;

  // register fetch_lastImemAddr
  assign fetch_lastImemAddr_D_IN = fetch_pc_register[31:4] ;
  assign fetch_lastImemAddr_EN = fetch_pc_port_0_whas ;

  // register fetch_pc_register
  assign fetch_pc_register_D_IN =
	     fetch_pc_port_1_whas ? x_wget__h26185 : def__h26446 ;
  assign fetch_pc_register_EN = 1'd1 ;

  // register fromDmem_rv
  assign fromDmem_rv_D_IN = fromDmem_rv_port2__read ;
  assign fromDmem_rv_EN = 1'b1 ;

  // register fromImem_rv
  assign fromImem_rv_D_IN = fromImem_rv_port2__read ;
  assign fromImem_rv_EN = 1'b1 ;

  // register fsm_state
  always@(fsm_state or
	  MUX_exceptions_busy_write_1__SEL_2 or
	  MUX_exceptions_busy_write_1__SEL_1)
  begin
    case (fsm_state)
      2'd0, 2'd3: fsm_state_D_IN = 2'd1;
      2'd1:
	  fsm_state_D_IN =
	      (MUX_exceptions_busy_write_1__SEL_2 ||
	       MUX_exceptions_busy_write_1__SEL_1) ?
		2'd3 :
		2'd2;
      2'd2:
	  fsm_state_D_IN =
	      (MUX_exceptions_busy_write_1__SEL_2 ||
	       MUX_exceptions_busy_write_1__SEL_1) ?
		2'd3 :
		2'd1;
    endcase
  end
  assign fsm_state_EN =
	     fsm_state == 2'd0 ||
	     fsm_state != 2'd0 &&
	     fsm_state_read_EQ_1_AND_fsm_enterASExcEn_whas__ETC___d26 ;

  // register globalFlushStall_state
  assign globalFlushStall_state_D_IN = globalFlushStall_setState_whas ;
  assign globalFlushStall_state_EN =
	     globalFlushStall_setState_whas || MUX_mu_results_enq_1__SEL_2 ;

  // register mdu_b
  always@(WILL_FIRE_RL_mdu_fsm_action_l63c19 or
	  MUX_mdu_b_write_1__VAL_1 or
	  WILL_FIRE_RL_mdu_fsm_action_l56c19 or
	  MUX_mdu_b_write_1__VAL_2 or WILL_FIRE_RL_mdu_handleReq)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_mdu_fsm_action_l63c19:
	  mdu_b_D_IN = MUX_mdu_b_write_1__VAL_1;
      WILL_FIRE_RL_mdu_fsm_action_l56c19:
	  mdu_b_D_IN = MUX_mdu_b_write_1__VAL_2;
      WILL_FIRE_RL_mdu_handleReq: mdu_b_D_IN = 32'h00000001;
      default: mdu_b_D_IN = 32'hAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign mdu_b_EN =
	     WILL_FIRE_RL_mdu_fsm_action_l63c19 ||
	     WILL_FIRE_RL_mdu_fsm_action_l56c19 ||
	     WILL_FIRE_RL_mdu_handleReq ;

  // register mdu_fsm_start_reg
  assign mdu_fsm_start_reg_D_IN = !WILL_FIRE_RL_mdu_fsm_fsm_start ;
  assign mdu_fsm_start_reg_EN =
	     WILL_FIRE_RL_mdu_fsm_fsm_start || WILL_FIRE_RL_mdu_handleReq ;

  // register mdu_fsm_start_reg_1
  assign mdu_fsm_start_reg_1_D_IN = mdu_fsm_start_wire_whas ;
  assign mdu_fsm_start_reg_1_EN = 1'd1 ;

  // register mdu_fsm_state_can_overlap
  assign mdu_fsm_state_can_overlap_D_IN =
	     mdu_fsm_state_set_pw_whas || mdu_fsm_state_can_overlap ;
  assign mdu_fsm_state_can_overlap_EN = 1'd1 ;

  // register mdu_fsm_state_fired
  assign mdu_fsm_state_fired_D_IN = mdu_fsm_state_set_pw_whas ;
  assign mdu_fsm_state_fired_EN = 1'd1 ;

  // register mdu_fsm_state_mkFSMstate
  always@(WILL_FIRE_RL_mdu_fsm_idle_l35c14 or
	  WILL_FIRE_RL_mdu_fsm_action_l47c20 or
	  mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d582 or
	  WILL_FIRE_RL_mdu_fsm_action_l56c19 or
	  mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d609 or
	  WILL_FIRE_RL_mdu_fsm_action_l61c25 or
	  WILL_FIRE_RL_mdu_fsm_action_l63c19 or
	  WILL_FIRE_RL_mdu_fsm_action_l64c21 or
	  WILL_FIRE_RL_mdu_fsm_action_l66c20 or
	  WILL_FIRE_RL_mdu_fsm_action_l71c17)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_mdu_fsm_idle_l35c14: mdu_fsm_state_mkFSMstate_D_IN = 4'd0;
      WILL_FIRE_RL_mdu_fsm_action_l47c20:
	  mdu_fsm_state_mkFSMstate_D_IN = 4'd1;
      mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d582:
	  mdu_fsm_state_mkFSMstate_D_IN = 4'd2;
      WILL_FIRE_RL_mdu_fsm_action_l56c19:
	  mdu_fsm_state_mkFSMstate_D_IN = 4'd3;
      mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d609:
	  mdu_fsm_state_mkFSMstate_D_IN = 4'd4;
      WILL_FIRE_RL_mdu_fsm_action_l61c25:
	  mdu_fsm_state_mkFSMstate_D_IN = 4'd5;
      WILL_FIRE_RL_mdu_fsm_action_l63c19:
	  mdu_fsm_state_mkFSMstate_D_IN = 4'd6;
      WILL_FIRE_RL_mdu_fsm_action_l64c21:
	  mdu_fsm_state_mkFSMstate_D_IN = 4'd7;
      WILL_FIRE_RL_mdu_fsm_action_l66c20:
	  mdu_fsm_state_mkFSMstate_D_IN = 4'd8;
      WILL_FIRE_RL_mdu_fsm_action_l71c17:
	  mdu_fsm_state_mkFSMstate_D_IN = 4'd9;
      default: mdu_fsm_state_mkFSMstate_D_IN =
		   4'b1010 /* unspecified value */ ;
    endcase
  end
  assign mdu_fsm_state_mkFSMstate_EN =
	     WILL_FIRE_RL_mdu_fsm_idle_l35c14 ||
	     WILL_FIRE_RL_mdu_fsm_action_l47c20 ||
	     mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d582 ||
	     WILL_FIRE_RL_mdu_fsm_action_l56c19 ||
	     mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d609 ||
	     WILL_FIRE_RL_mdu_fsm_action_l61c25 ||
	     WILL_FIRE_RL_mdu_fsm_action_l63c19 ||
	     WILL_FIRE_RL_mdu_fsm_action_l64c21 ||
	     WILL_FIRE_RL_mdu_fsm_action_l66c20 ||
	     WILL_FIRE_RL_mdu_fsm_action_l71c17 ;

  // register mdu_op
  assign mdu_op_D_IN = mdu_reqs_D_OUT[1:0] ;
  assign mdu_op_EN = WILL_FIRE_RL_mdu_handleReq ;

  // register mdu_res
  assign mdu_res_D_IN =
	     WILL_FIRE_RL_mdu_fsm_action_l61c25 ?
	       MUX_mdu_res_write_1__VAL_1 :
	       32'd0 ;
  assign mdu_res_EN =
	     WILL_FIRE_RL_mdu_fsm_action_l61c25 ||
	     WILL_FIRE_RL_mdu_handleReq ;

  // register mdu_running
  assign mdu_running_D_IN = !WILL_FIRE_RL_mdu_fsm_action_l71c17 ;
  assign mdu_running_EN =
	     WILL_FIRE_RL_mdu_fsm_action_l71c17 ||
	     WILL_FIRE_RL_mdu_handleReq ;

  // register mdu_rv1
  assign mdu_rv1_D_IN =
	     mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d609 ?
	       MUX_mdu_rv1_write_1__VAL_1 :
	       MUX_mdu_rv1_write_1__VAL_2 ;
  assign mdu_rv1_EN =
	     mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d609 ||
	     WILL_FIRE_RL_mdu_handleReq ;

  // register mdu_rv2
  always@(WILL_FIRE_RL_mdu_fsm_action_l64c21 or
	  MUX_mdu_rv2_write_1__VAL_1 or
	  mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d582 or
	  MUX_mdu_rv2_write_1__VAL_2 or
	  WILL_FIRE_RL_mdu_handleReq or MUX_mdu_rv2_write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_mdu_fsm_action_l64c21:
	  mdu_rv2_D_IN = MUX_mdu_rv2_write_1__VAL_1;
      mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d582:
	  mdu_rv2_D_IN = MUX_mdu_rv2_write_1__VAL_2;
      WILL_FIRE_RL_mdu_handleReq: mdu_rv2_D_IN = MUX_mdu_rv2_write_1__VAL_3;
      default: mdu_rv2_D_IN = 32'hAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign mdu_rv2_EN =
	     WILL_FIRE_RL_mdu_fsm_action_l64c21 ||
	     mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d582 ||
	     WILL_FIRE_RL_mdu_handleReq ;

  // register mdu_sign
  assign mdu_sign_D_IN = mdu_reqs_D_OUT[2] && x__h70854 ;
  assign mdu_sign_EN = WILL_FIRE_RL_mdu_handleReq ;

  // register mu_barrier
  assign mu_barrier_D_IN = globalFlushStall_setState_whas ;
  assign mu_barrier_EN =
	     globalFlushStall_setState_whas || MUX_mu_results_enq_1__SEL_2 ;

  // register mu_reqs_rv
  assign mu_reqs_rv_D_IN = mu_reqs_rv_port2__read ;
  assign mu_reqs_rv_EN = 1'b1 ;

  // register mu_storeQueue_rv
  assign mu_storeQueue_rv_D_IN = mu_storeQueue_rv_port2__read ;
  assign mu_storeQueue_rv_EN = 1'b1 ;

  // register npc_register
  assign npc_register_D_IN = npc_port_1_whas ? x_wget__h21514 : npc_register ;
  assign npc_register_EN = 1'd1 ;

  // submodule alu_results
  assign alu_results_D_IN =
	     { x_data__h105772,
	       d2e_D_OUT[104:102] == 3'b001 && d2e_D_OUT[107:105] == 3'b110 &&
	       d2e_D_OUT[133:131] == 3'h0,
	       d2e_D_OUT[130] ? 4'd6 : 4'd2 } ;
  assign alu_results_ENQ =
	     WILL_FIRE_RL_execute_execute &&
	     IF_IF_crs_crf_0_readBeforeLaterWrites_0_read___ETC___d1689 ==
	     3'd0 &&
	     d2e_D_OUT[101:99] == 3'd2 ;
  assign alu_results_DEQ =
	     WILL_FIRE_RL_commit_commit && e2w_D_OUT[2:0] == 3'd0 &&
	     e2w_D_OUT[5:3] == 3'd2 ;
  assign alu_results_CLR = 1'b0 ;

  // submodule bu_redirs
  assign bu_redirs_D_IN =
	     { d2e_D_OUT[104:102] == 3'b110 || d2e_D_OUT[104:102] == 3'b111 ||
	       d2e_D_OUT[104:102] == 3'b0 ||
	       ((d2e_D_OUT[104:102] == 3'b101) ?
		  IF_d2e_first__678_BITS_107_TO_105_745_EQ_0b111_ETC___d2044 :
		  d2e_D_OUT[104:102] == 3'b001),
	       x__h115931,
	       n_epoch__h115520 } ;
  assign bu_redirs_ENQ =
	     WILL_FIRE_RL_execute_execute &&
	     IF_IF_crs_crf_0_readBeforeLaterWrites_0_read___ETC___d1689 ==
	     3'd0 &&
	     d2e_D_OUT[101:99] == 3'd1 ;
  assign bu_redirs_DEQ =
	     WILL_FIRE_RL_commit_commit && e2w_D_OUT[2:0] == 3'd0 &&
	     e2w_D_OUT[5:3] == 3'd1 ;
  assign bu_redirs_CLR = 1'b0 ;

  // submodule bu_results
  assign bu_results_D_IN =
	     { CASE_d2eD_OUT_BITS_104_TO_102_0b0_pcPlus41551_ETC__q20,
	       5'd10 } ;
  assign bu_results_ENQ =
	     WILL_FIRE_RL_execute_execute &&
	     IF_IF_crs_crf_0_readBeforeLaterWrites_0_read___ETC___d1689 ==
	     3'd0 &&
	     d2e_D_OUT[101:99] == 3'd1 ;
  assign bu_results_DEQ =
	     WILL_FIRE_RL_commit_commit && e2w_D_OUT[2:0] == 3'd0 &&
	     e2w_D_OUT[5:3] == 3'd1 ;
  assign bu_results_CLR = 1'b0 ;

  // submodule crs_crf_0_readBeforeLaterWrites_0
  assign crs_crf_0_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_0_readBeforeLaterWrites_0_EN = crs_crf_0_port_0_whas ;

  // submodule crs_crf_0_readBeforeLaterWrites_1
  assign crs_crf_0_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign crs_crf_0_readBeforeLaterWrites_1_EN = fsm_state == 2'd3 ;

  // submodule crs_crf_10_readBeforeLaterWrites_0
  assign crs_crf_10_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_10_readBeforeLaterWrites_0_EN = crs_crf_10_port_0_whas ;

  // submodule crs_crf_10_readBeforeLaterWrites_1
  assign crs_crf_10_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_10_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_11_readBeforeLaterWrites_0
  assign crs_crf_11_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_11_readBeforeLaterWrites_0_EN = crs_crf_11_port_0_whas ;

  // submodule crs_crf_11_readBeforeLaterWrites_1
  assign crs_crf_11_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_11_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_12_readBeforeLaterWrites_0
  assign crs_crf_12_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_12_readBeforeLaterWrites_0_EN = crs_crf_12_port_0_whas ;

  // submodule crs_crf_12_readBeforeLaterWrites_1
  assign crs_crf_12_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_12_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_13_readBeforeLaterWrites_0
  assign crs_crf_13_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_13_readBeforeLaterWrites_0_EN = crs_crf_13_port_0_whas ;

  // submodule crs_crf_13_readBeforeLaterWrites_1
  assign crs_crf_13_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_13_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_14_readBeforeLaterWrites_0
  assign crs_crf_14_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_14_readBeforeLaterWrites_0_EN = crs_crf_14_port_0_whas ;

  // submodule crs_crf_14_readBeforeLaterWrites_1
  assign crs_crf_14_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_14_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_15_readBeforeLaterWrites_0
  assign crs_crf_15_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_15_readBeforeLaterWrites_0_EN = crs_crf_15_port_0_whas ;

  // submodule crs_crf_15_readBeforeLaterWrites_1
  assign crs_crf_15_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_15_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_16_readBeforeLaterWrites_0
  assign crs_crf_16_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_16_readBeforeLaterWrites_0_EN = crs_crf_16_port_0_whas ;

  // submodule crs_crf_16_readBeforeLaterWrites_1
  assign crs_crf_16_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_16_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_17_readBeforeLaterWrites_0
  assign crs_crf_17_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_17_readBeforeLaterWrites_0_EN = crs_crf_17_port_0_whas ;

  // submodule crs_crf_17_readBeforeLaterWrites_1
  assign crs_crf_17_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_17_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_18_readBeforeLaterWrites_0
  assign crs_crf_18_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_18_readBeforeLaterWrites_0_EN = crs_crf_18_port_0_whas ;

  // submodule crs_crf_18_readBeforeLaterWrites_1
  assign crs_crf_18_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_18_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_19_readBeforeLaterWrites_0
  assign crs_crf_19_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_19_readBeforeLaterWrites_0_EN = crs_crf_19_port_0_whas ;

  // submodule crs_crf_19_readBeforeLaterWrites_1
  assign crs_crf_19_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_19_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_1_readBeforeLaterWrites_0
  assign crs_crf_1_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_1_readBeforeLaterWrites_0_EN = crs_crf_1_port_0_whas ;

  // submodule crs_crf_1_readBeforeLaterWrites_1
  assign crs_crf_1_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_1_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_20_readBeforeLaterWrites_0
  assign crs_crf_20_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_20_readBeforeLaterWrites_0_EN = crs_crf_20_port_0_whas ;

  // submodule crs_crf_20_readBeforeLaterWrites_1
  assign crs_crf_20_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_20_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_21_readBeforeLaterWrites_0
  assign crs_crf_21_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_21_readBeforeLaterWrites_0_EN = crs_crf_21_port_0_whas ;

  // submodule crs_crf_21_readBeforeLaterWrites_1
  assign crs_crf_21_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_21_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_22_readBeforeLaterWrites_0
  assign crs_crf_22_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_22_readBeforeLaterWrites_0_EN = crs_crf_22_port_0_whas ;

  // submodule crs_crf_22_readBeforeLaterWrites_1
  assign crs_crf_22_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_22_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_23_readBeforeLaterWrites_0
  assign crs_crf_23_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_23_readBeforeLaterWrites_0_EN = crs_crf_23_port_0_whas ;

  // submodule crs_crf_23_readBeforeLaterWrites_1
  assign crs_crf_23_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_23_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_24_readBeforeLaterWrites_0
  assign crs_crf_24_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_24_readBeforeLaterWrites_0_EN = crs_crf_24_port_0_whas ;

  // submodule crs_crf_24_readBeforeLaterWrites_1
  assign crs_crf_24_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_24_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_25_readBeforeLaterWrites_0
  assign crs_crf_25_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_25_readBeforeLaterWrites_0_EN = crs_crf_25_port_0_whas ;

  // submodule crs_crf_25_readBeforeLaterWrites_1
  assign crs_crf_25_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_25_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_26_readBeforeLaterWrites_0
  assign crs_crf_26_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_26_readBeforeLaterWrites_0_EN = crs_crf_26_port_0_whas ;

  // submodule crs_crf_26_readBeforeLaterWrites_1
  assign crs_crf_26_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_26_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_27_readBeforeLaterWrites_0
  assign crs_crf_27_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_27_readBeforeLaterWrites_0_EN = crs_crf_27_port_0_whas ;

  // submodule crs_crf_27_readBeforeLaterWrites_1
  assign crs_crf_27_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_27_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_28_readBeforeLaterWrites_0
  assign crs_crf_28_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_28_readBeforeLaterWrites_0_EN = crs_crf_28_port_0_whas ;

  // submodule crs_crf_28_readBeforeLaterWrites_1
  assign crs_crf_28_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_28_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_29_readBeforeLaterWrites_0
  assign crs_crf_29_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_29_readBeforeLaterWrites_0_EN = crs_crf_29_port_0_whas ;

  // submodule crs_crf_29_readBeforeLaterWrites_1
  assign crs_crf_29_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_29_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_2_readBeforeLaterWrites_0
  assign crs_crf_2_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_2_readBeforeLaterWrites_0_EN = crs_crf_2_port_0_whas ;

  // submodule crs_crf_2_readBeforeLaterWrites_1
  assign crs_crf_2_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_2_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_30_readBeforeLaterWrites_0
  assign crs_crf_30_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_30_readBeforeLaterWrites_0_EN = crs_crf_30_port_0_whas ;

  // submodule crs_crf_30_readBeforeLaterWrites_1
  assign crs_crf_30_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_30_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_31_readBeforeLaterWrites_0
  assign crs_crf_31_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_31_readBeforeLaterWrites_0_EN = crs_crf_31_port_0_whas ;

  // submodule crs_crf_31_readBeforeLaterWrites_1
  assign crs_crf_31_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_31_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_3_readBeforeLaterWrites_0
  assign crs_crf_3_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_3_readBeforeLaterWrites_0_EN = crs_crf_3_port_0_whas ;

  // submodule crs_crf_3_readBeforeLaterWrites_1
  assign crs_crf_3_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_3_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_4_readBeforeLaterWrites_0
  assign crs_crf_4_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_4_readBeforeLaterWrites_0_EN = crs_crf_4_port_0_whas ;

  // submodule crs_crf_4_readBeforeLaterWrites_1
  assign crs_crf_4_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_4_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_5_readBeforeLaterWrites_0
  assign crs_crf_5_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_5_readBeforeLaterWrites_0_EN = crs_crf_5_port_0_whas ;

  // submodule crs_crf_5_readBeforeLaterWrites_1
  assign crs_crf_5_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_5_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_6_readBeforeLaterWrites_0
  assign crs_crf_6_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_6_readBeforeLaterWrites_0_EN = crs_crf_6_port_0_whas ;

  // submodule crs_crf_6_readBeforeLaterWrites_1
  assign crs_crf_6_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign crs_crf_6_readBeforeLaterWrites_1_EN = fsm_state == 2'd3 ;

  // submodule crs_crf_7_readBeforeLaterWrites_0
  assign crs_crf_7_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_7_readBeforeLaterWrites_0_EN = crs_crf_7_port_0_whas ;

  // submodule crs_crf_7_readBeforeLaterWrites_1
  assign crs_crf_7_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_7_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_8_readBeforeLaterWrites_0
  assign crs_crf_8_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_8_readBeforeLaterWrites_0_EN = crs_crf_8_port_0_whas ;

  // submodule crs_crf_8_readBeforeLaterWrites_1
  assign crs_crf_8_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_8_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule crs_crf_9_readBeforeLaterWrites_0
  assign crs_crf_9_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign crs_crf_9_readBeforeLaterWrites_0_EN = crs_crf_9_port_0_whas ;

  // submodule crs_crf_9_readBeforeLaterWrites_1
  assign crs_crf_9_readBeforeLaterWrites_1_D_IN = 1'b0 ;
  assign crs_crf_9_readBeforeLaterWrites_1_EN = 1'b0 ;

  // submodule d2e
  assign d2e_D_IN =
	     { decode_ws2d_D_OUT[69:4],
	       decode_decodeWord_D_OUT[2:0] == 3'b110 ||
	       decode_decodeWord_D_OUT[2:0] == 3'b111 ||
	       decode_decodeWord_D_OUT[2:0] == 3'b101 ||
	       decode_decodeWord_D_OUT[2:0] == 3'b100 ||
	       IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1345,
	       decode_decodeWord_D_OUT[2:0] == 3'b101 ||
	       decode_decodeWord_D_OUT[2:0] == 3'b100 ||
	       decode_decodeWord_D_OUT[2:0] == 3'b011 ||
	       decode_decodeWord_D_OUT[2:0] == 3'b010 ||
	       decode_decodeWord_D_OUT[2:0] == 3'b0 ||
	       decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1354,
	       IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1398,
	       decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1475,
	       decode_decodeWord_D_OUT[20:16],
	       (decode_decodeWord_D_OUT[2:0] == 3'b010) ?
		 { decode_decodeWord_D_OUT[5:3] == 3'b111 ||
		   decode_decodeWord_D_OUT[5:3] == 3'b110 ||
		   decode_decodeWord_D_OUT[5:3] == 3'b101,
		   decode_decodeWord_D_OUT[15:11] } :
		 { decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1498,
		   decode_decodeWord_D_OUT[10:6] },
	       decode_decodeWord_D_OUT[2:0] == 3'b111 ||
	       decode_decodeWord_D_OUT[2:0] == 3'b0 ||
	       decode_decodeWord_D_OUT[2:0] == 3'b100 ||
	       decode_decodeWord_D_OUT[2:0] == 3'b011 ||
	       decode_decodeWord_D_OUT[2:0] == 3'b001 &&
	       IF_decode_decodeWord_first__295_BITS_5_TO_3_30_ETC___d1589,
	       IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1610,
	       decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1624,
	       decode_decodeWord_D_OUT[2:0] == 3'b001 &&
	       decode_decodeWord_D_OUT[5:3] == 3'b101,
	       decode_decodeWord_D_OUT[2:0] == 3'b001 &&
	       decode_decodeWord_D_OUT[5:3] == 3'b110 &&
	       (decode_decodeWord_D_OUT[31:28] == 4'b0010 ||
		decode_decodeWord_D_OUT[31:28] == 4'b0011),
	       decode_decodeWord_D_OUT[2:0] == 3'b001 &&
	       decode_decodeWord_D_OUT[5:3] == 3'b110 &&
	       (decode_decodeWord_D_OUT[31:28] == 4'b0001 ||
		decode_decodeWord_D_OUT[31:28] == 4'b0),
	       decode_decodeWord_D_OUT,
	       CASE_decode_decodeWordD_OUT_BITS_2_TO_0_0b0_1_ETC__q24,
	       IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1673 } ;
  assign d2e_ENQ = decode_incCounter_whas ;
  assign d2e_DEQ = WILL_FIRE_RL_execute_execute ;
  assign d2e_CLR = 1'b0 ;

  // submodule dCache
  assign dCache_putFromMem_e = fromBus_D_OUT ;
  assign dCache_putFromProc_e = dmemReqs_D_OUT ;
  assign dCache_putFromProc_passthrough =
	     !crs_crf_0_register[2] && dmemReqs_D_OUT[61:60] == 2'b11 ;
  assign dCache_EN_putFromProc = dCache_RDY_putFromProc && dmemReqs_EMPTY_N ;
  assign dCache_EN_getToProc = dCache_RDY_getToProc && !fromDmem_rv[32] ;
  assign dCache_EN_getToMem = WILL_FIRE_RL_handleDCacheRequest ;
  assign dCache_EN_putFromMem =
	     WILL_FIRE_RL_handleBusResp && busTracker_rv[4] ;
  assign dCache_EN_invalidateLines =
	     WILL_FIRE_RL_commit_commit && !e2w_D_OUT[47] && e2w_D_OUT[40] &&
	     (e2w_D_OUT[37:34] == 4'b1110 || e2w_D_OUT[37:34] == 4'b1011) &&
	     e2w_first__134_BITS_2_TO_0_135_EQ_0_136_AND_e2_ETC___d2367 ;
  assign dCache_EN_putFlushRequest =
	     WILL_FIRE_RL_execute_execute &&
	     IF_IF_crs_crf_0_readBeforeLaterWrites_0_read___ETC___d1689 ==
	     3'd0 &&
	     d2e_D_OUT[101:99] == 3'd0 &&
	     d2e_D_OUT[135] ;
  assign dCache_EN_blockTillFlushDone = MUX_mu_results_enq_1__SEL_2 ;

  // submodule decode_decodeWord
  assign decode_decodeWord_D_IN =
	     { SEL_ARR_IF_f2d_first__263_BIT_0_264_THEN_IF_fr_ETC___d1287[7:0],
	       SEL_ARR_IF_f2d_first__263_BIT_0_264_THEN_IF_fr_ETC___d1287[15:8],
	       SEL_ARR_IF_f2d_first__263_BIT_0_264_THEN_IF_fr_ETC___d1287[23:16],
	       SEL_ARR_IF_f2d_first__263_BIT_0_264_THEN_IF_fr_ETC___d1287[31:24] } ;
  assign decode_decodeWord_ENQ =
	     f2d_EMPTY_N &&
	     decode_ws2d_i_notFull__261_AND_decode_decodeWo_ETC___d1270 &&
	     (fsm_state == 2'd1 || fsm_state == 2'd2) ;
  assign decode_decodeWord_DEQ = decode_incCounter_whas ;
  assign decode_decodeWord_CLR = 1'b0 ;

  // submodule decode_rf
  assign decode_rf_ADDR_1 = rs3__h100493 ;
  assign decode_rf_ADDR_2 = rs2__h100491 ;
  assign decode_rf_ADDR_3 = rs1__h100489 ;
  assign decode_rf_ADDR_4 = 5'h0 ;
  assign decode_rf_ADDR_5 = 5'h0 ;
  assign decode_rf_ADDR_IN = e2w_D_OUT[46:42] ;
  assign decode_rf_D_IN = val__h119412 ;
  assign decode_rf_WE =
	     WILL_FIRE_RL_commit_commit && e2w_D_OUT[47] &&
	     e2w_D_OUT[2:0] == 3'd0 &&
	     e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 &&
	     IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2192 ;

  // submodule decode_sc_ready_0_readBeforeLaterWrites_0
  assign decode_sc_ready_0_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_0_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_0_port_0_whas ;

  // submodule decode_sc_ready_0_readBeforeLaterWrites_1
  assign decode_sc_ready_0_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_0_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_0_port_1_whas ;

  // submodule decode_sc_ready_10_readBeforeLaterWrites_0
  assign decode_sc_ready_10_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_10_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_10_port_0_whas ;

  // submodule decode_sc_ready_10_readBeforeLaterWrites_1
  assign decode_sc_ready_10_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_10_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_10_port_1_whas ;

  // submodule decode_sc_ready_11_readBeforeLaterWrites_0
  assign decode_sc_ready_11_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_11_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_11_port_0_whas ;

  // submodule decode_sc_ready_11_readBeforeLaterWrites_1
  assign decode_sc_ready_11_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_11_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_11_port_1_whas ;

  // submodule decode_sc_ready_12_readBeforeLaterWrites_0
  assign decode_sc_ready_12_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_12_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_12_port_0_whas ;

  // submodule decode_sc_ready_12_readBeforeLaterWrites_1
  assign decode_sc_ready_12_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_12_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_12_port_1_whas ;

  // submodule decode_sc_ready_13_readBeforeLaterWrites_0
  assign decode_sc_ready_13_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_13_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_13_port_0_whas ;

  // submodule decode_sc_ready_13_readBeforeLaterWrites_1
  assign decode_sc_ready_13_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_13_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_13_port_1_whas ;

  // submodule decode_sc_ready_14_readBeforeLaterWrites_0
  assign decode_sc_ready_14_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_14_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_14_port_0_whas ;

  // submodule decode_sc_ready_14_readBeforeLaterWrites_1
  assign decode_sc_ready_14_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_14_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_14_port_1_whas ;

  // submodule decode_sc_ready_15_readBeforeLaterWrites_0
  assign decode_sc_ready_15_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_15_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_15_port_0_whas ;

  // submodule decode_sc_ready_15_readBeforeLaterWrites_1
  assign decode_sc_ready_15_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_15_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_15_port_1_whas ;

  // submodule decode_sc_ready_16_readBeforeLaterWrites_0
  assign decode_sc_ready_16_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_16_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_16_port_0_whas ;

  // submodule decode_sc_ready_16_readBeforeLaterWrites_1
  assign decode_sc_ready_16_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_16_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_16_port_1_whas ;

  // submodule decode_sc_ready_17_readBeforeLaterWrites_0
  assign decode_sc_ready_17_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_17_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_17_port_0_whas ;

  // submodule decode_sc_ready_17_readBeforeLaterWrites_1
  assign decode_sc_ready_17_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_17_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_17_port_1_whas ;

  // submodule decode_sc_ready_18_readBeforeLaterWrites_0
  assign decode_sc_ready_18_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_18_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_18_port_0_whas ;

  // submodule decode_sc_ready_18_readBeforeLaterWrites_1
  assign decode_sc_ready_18_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_18_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_18_port_1_whas ;

  // submodule decode_sc_ready_19_readBeforeLaterWrites_0
  assign decode_sc_ready_19_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_19_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_19_port_0_whas ;

  // submodule decode_sc_ready_19_readBeforeLaterWrites_1
  assign decode_sc_ready_19_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_19_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_19_port_1_whas ;

  // submodule decode_sc_ready_1_readBeforeLaterWrites_0
  assign decode_sc_ready_1_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_1_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_1_port_0_whas ;

  // submodule decode_sc_ready_1_readBeforeLaterWrites_1
  assign decode_sc_ready_1_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_1_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_1_port_1_whas ;

  // submodule decode_sc_ready_20_readBeforeLaterWrites_0
  assign decode_sc_ready_20_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_20_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_20_port_0_whas ;

  // submodule decode_sc_ready_20_readBeforeLaterWrites_1
  assign decode_sc_ready_20_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_20_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_20_port_1_whas ;

  // submodule decode_sc_ready_21_readBeforeLaterWrites_0
  assign decode_sc_ready_21_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_21_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_21_port_0_whas ;

  // submodule decode_sc_ready_21_readBeforeLaterWrites_1
  assign decode_sc_ready_21_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_21_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_21_port_1_whas ;

  // submodule decode_sc_ready_22_readBeforeLaterWrites_0
  assign decode_sc_ready_22_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_22_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_22_port_0_whas ;

  // submodule decode_sc_ready_22_readBeforeLaterWrites_1
  assign decode_sc_ready_22_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_22_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_22_port_1_whas ;

  // submodule decode_sc_ready_23_readBeforeLaterWrites_0
  assign decode_sc_ready_23_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_23_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_23_port_0_whas ;

  // submodule decode_sc_ready_23_readBeforeLaterWrites_1
  assign decode_sc_ready_23_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_23_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_23_port_1_whas ;

  // submodule decode_sc_ready_24_readBeforeLaterWrites_0
  assign decode_sc_ready_24_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_24_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_24_port_0_whas ;

  // submodule decode_sc_ready_24_readBeforeLaterWrites_1
  assign decode_sc_ready_24_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_24_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_24_port_1_whas ;

  // submodule decode_sc_ready_25_readBeforeLaterWrites_0
  assign decode_sc_ready_25_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_25_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_25_port_0_whas ;

  // submodule decode_sc_ready_25_readBeforeLaterWrites_1
  assign decode_sc_ready_25_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_25_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_25_port_1_whas ;

  // submodule decode_sc_ready_26_readBeforeLaterWrites_0
  assign decode_sc_ready_26_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_26_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_26_port_0_whas ;

  // submodule decode_sc_ready_26_readBeforeLaterWrites_1
  assign decode_sc_ready_26_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_26_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_26_port_1_whas ;

  // submodule decode_sc_ready_27_readBeforeLaterWrites_0
  assign decode_sc_ready_27_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_27_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_27_port_0_whas ;

  // submodule decode_sc_ready_27_readBeforeLaterWrites_1
  assign decode_sc_ready_27_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_27_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_27_port_1_whas ;

  // submodule decode_sc_ready_28_readBeforeLaterWrites_0
  assign decode_sc_ready_28_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_28_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_28_port_0_whas ;

  // submodule decode_sc_ready_28_readBeforeLaterWrites_1
  assign decode_sc_ready_28_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_28_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_28_port_1_whas ;

  // submodule decode_sc_ready_29_readBeforeLaterWrites_0
  assign decode_sc_ready_29_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_29_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_29_port_0_whas ;

  // submodule decode_sc_ready_29_readBeforeLaterWrites_1
  assign decode_sc_ready_29_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_29_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_29_port_1_whas ;

  // submodule decode_sc_ready_2_readBeforeLaterWrites_0
  assign decode_sc_ready_2_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_2_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_2_port_0_whas ;

  // submodule decode_sc_ready_2_readBeforeLaterWrites_1
  assign decode_sc_ready_2_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_2_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_2_port_1_whas ;

  // submodule decode_sc_ready_30_readBeforeLaterWrites_0
  assign decode_sc_ready_30_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_30_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_30_port_0_whas ;

  // submodule decode_sc_ready_30_readBeforeLaterWrites_1
  assign decode_sc_ready_30_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_30_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_30_port_1_whas ;

  // submodule decode_sc_ready_31_readBeforeLaterWrites_0
  assign decode_sc_ready_31_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_31_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_31_port_0_whas ;

  // submodule decode_sc_ready_31_readBeforeLaterWrites_1
  assign decode_sc_ready_31_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_31_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_31_port_1_whas ;

  // submodule decode_sc_ready_3_readBeforeLaterWrites_0
  assign decode_sc_ready_3_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_3_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_3_port_0_whas ;

  // submodule decode_sc_ready_3_readBeforeLaterWrites_1
  assign decode_sc_ready_3_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_3_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_3_port_1_whas ;

  // submodule decode_sc_ready_4_readBeforeLaterWrites_0
  assign decode_sc_ready_4_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_4_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_4_port_0_whas ;

  // submodule decode_sc_ready_4_readBeforeLaterWrites_1
  assign decode_sc_ready_4_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_4_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_4_port_1_whas ;

  // submodule decode_sc_ready_5_readBeforeLaterWrites_0
  assign decode_sc_ready_5_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_5_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_5_port_0_whas ;

  // submodule decode_sc_ready_5_readBeforeLaterWrites_1
  assign decode_sc_ready_5_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_5_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_5_port_1_whas ;

  // submodule decode_sc_ready_6_readBeforeLaterWrites_0
  assign decode_sc_ready_6_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_6_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_6_port_0_whas ;

  // submodule decode_sc_ready_6_readBeforeLaterWrites_1
  assign decode_sc_ready_6_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_6_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_6_port_1_whas ;

  // submodule decode_sc_ready_7_readBeforeLaterWrites_0
  assign decode_sc_ready_7_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_7_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_7_port_0_whas ;

  // submodule decode_sc_ready_7_readBeforeLaterWrites_1
  assign decode_sc_ready_7_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_7_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_7_port_1_whas ;

  // submodule decode_sc_ready_8_readBeforeLaterWrites_0
  assign decode_sc_ready_8_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_8_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_8_port_0_whas ;

  // submodule decode_sc_ready_8_readBeforeLaterWrites_1
  assign decode_sc_ready_8_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_8_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_8_port_1_whas ;

  // submodule decode_sc_ready_9_readBeforeLaterWrites_0
  assign decode_sc_ready_9_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign decode_sc_ready_9_readBeforeLaterWrites_0_EN =
	     decode_sc_ready_9_port_0_whas ;

  // submodule decode_sc_ready_9_readBeforeLaterWrites_1
  assign decode_sc_ready_9_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign decode_sc_ready_9_readBeforeLaterWrites_1_EN =
	     decode_sc_ready_9_port_1_whas ;

  // submodule decode_ws2d
  assign decode_ws2d_D_IN = f2d_D_OUT ;
  assign decode_ws2d_ENQ =
	     f2d_EMPTY_N &&
	     decode_ws2d_i_notFull__261_AND_decode_decodeWo_ETC___d1270 &&
	     (fsm_state == 2'd1 || fsm_state == 2'd2) ;
  assign decode_ws2d_DEQ = decode_incCounter_whas ;
  assign decode_ws2d_CLR = 1'b0 ;

  // submodule dmemReqs
  assign dmemReqs_D_IN =
	     MUX_dmemReqs_enq_1__SEL_1 ?
	       MUX_dmemReqs_enq_1__VAL_1 :
	       mu_storeQueue_rv[65:0] ;
  assign dmemReqs_ENQ =
	     WILL_FIRE_RL_mu_handleRequest &&
	     IF_mu_reqs_rv_port1__read__17_BITS_3_TO_1_20_E_ETC___d467 &&
	     !mu_reqs_rv_port1__read[0] ||
	     WILL_FIRE_RL_commit_commit && !e2w_D_OUT[47] &&
	     NOT_e2w_first__134_BIT_40_205_473_OR_NOT_e2w_f_ETC___d2479 ;
  assign dmemReqs_DEQ = dCache_RDY_putFromProc && dmemReqs_EMPTY_N ;
  assign dmemReqs_CLR = 1'b0 ;

  // submodule e2w
  assign e2w_D_IN =
	     { d2e_D_OUT[228:99],
	       IF_IF_crs_crf_0_readBeforeLaterWrites_0_read___ETC___d1689 } ;
  assign e2w_ENQ = WILL_FIRE_RL_execute_execute ;
  assign e2w_DEQ = WILL_FIRE_RL_commit_commit ;
  assign e2w_CLR = 1'b0 ;

  // submodule epoch_readBeforeLaterWrites_0
  assign epoch_readBeforeLaterWrites_0_D_IN = 1'b0 ;
  assign epoch_readBeforeLaterWrites_0_EN = 1'b0 ;

  // submodule epoch_readBeforeLaterWrites_1
  assign epoch_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign epoch_readBeforeLaterWrites_1_EN = npc_port_1_whas ;

  // submodule f2d
  assign f2d_D_IN =
	     { fetch_pc_register,
	       x__h27838,
	       fetch_epoch_register,
	       3'd0,
	       fetch_pc_register[31:30] == 2'b11 ||
	       !IF_fetch_pc_readBeforeLaterWrites_0_read__45_A_ETC___d354 } ;
  assign f2d_ENQ = fetch_pc_port_0_whas ;
  assign f2d_DEQ =
	     f2d_EMPTY_N &&
	     decode_ws2d_i_notFull__261_AND_decode_decodeWo_ETC___d1270 &&
	     (fsm_state == 2'd1 || fsm_state == 2'd2) ;
  assign f2d_CLR = 1'b0 ;

  // submodule fetch_epoch_readBeforeLaterWrites_0
  assign fetch_epoch_readBeforeLaterWrites_0_D_IN = 1'b0 ;
  assign fetch_epoch_readBeforeLaterWrites_0_EN = 1'b0 ;

  // submodule fetch_epoch_readBeforeLaterWrites_1
  assign fetch_epoch_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign fetch_epoch_readBeforeLaterWrites_1_EN = fetch_pc_port_1_whas ;

  // submodule fetch_pc_readBeforeLaterWrites_0
  assign fetch_pc_readBeforeLaterWrites_0_D_IN = 1'd1 ;
  assign fetch_pc_readBeforeLaterWrites_0_EN = fetch_pc_port_0_whas ;

  // submodule fetch_pc_readBeforeLaterWrites_1
  assign fetch_pc_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign fetch_pc_readBeforeLaterWrites_1_EN = fetch_pc_port_1_whas ;

  // submodule fromBus
  assign fromBus_D_IN = putBusResp_r ;
  assign fromBus_ENQ = EN_putBusResp ;
  assign fromBus_DEQ = WILL_FIRE_RL_handleBusResp ;
  assign fromBus_CLR = 1'b0 ;

  // submodule iCache
  assign iCache_putFromMem_e = fromBus_D_OUT ;
  assign iCache_putFromProc_e = fetch_pc_register[31:2] ;
  assign iCache_putFromProc_passthrough =
	     !crs_crf_0_register[2] && fetch_pc_register[31:30] == 2'b11 ;
  assign iCache_EN_putFromProc =
	     f2d_i_notFull__44_AND_NOT_IF_fetch_pc_readBefo_ETC___d358 &&
	     (fsm_state == 2'd1 || fsm_state == 2'd2) &&
	     !globalFlushStall_state &&
	     (fetch_pc_register[31:30] == 2'b11 ||
	      !IF_fetch_pc_readBeforeLaterWrites_0_read__45_A_ETC___d354) ;
  assign iCache_EN_getToProc = iCache_RDY_getToProc && !fromImem_rv[128] ;
  assign iCache_EN_getToMem = WILL_FIRE_RL_handleICacheRequest ;
  assign iCache_EN_putFromMem =
	     WILL_FIRE_RL_handleBusResp && !busTracker_rv[4] ;
  assign iCache_EN_invalidateLines =
	     WILL_FIRE_RL_commit_commit && !e2w_D_OUT[47] && e2w_D_OUT[40] &&
	     (e2w_D_OUT[37:34] == 4'b1110 || e2w_D_OUT[37:34] == 4'b1011) &&
	     e2w_first__134_BITS_2_TO_0_135_EQ_0_136_AND_e2_ETC___d2364 ;

  // submodule mdu_reqs
  assign mdu_reqs_D_IN =
	     { d2e_D_OUT[98:35],
	       d2e_D_OUT[133:130] == 4'b1100,
	       CASE_d2eD_OUT_BITS_133_TO_130_0b1011_2_0b1100_ETC__q26 } ;
  assign mdu_reqs_ENQ =
	     WILL_FIRE_RL_execute_execute &&
	     IF_IF_crs_crf_0_readBeforeLaterWrites_0_read___ETC___d1689 ==
	     3'd0 &&
	     d2e_D_OUT[101:99] == 3'd4 ;
  assign mdu_reqs_DEQ = WILL_FIRE_RL_mdu_handleReq ;
  assign mdu_reqs_CLR = 1'b0 ;

  // submodule mdu_results
  assign mdu_results_D_IN =
	     WILL_FIRE_RL_mdu_fsm_action_l47c20 ?
	       MUX_mdu_results_enq_1__VAL_1 :
	       MUX_mdu_results_enq_1__VAL_2 ;
  assign mdu_results_ENQ =
	     WILL_FIRE_RL_mdu_fsm_action_l47c20 ||
	     WILL_FIRE_RL_mdu_fsm_action_l66c20 ;
  assign mdu_results_DEQ =
	     WILL_FIRE_RL_commit_commit && e2w_D_OUT[2:0] == 3'd0 &&
	     e2w_D_OUT[5:3] == 3'd4 ;
  assign mdu_results_CLR = 1'b0 ;

  // submodule mu_currBusiness
  assign mu_currBusiness_D_IN =
	     { IF_mu_reqs_rvport1__read_BITS_3_TO_1_EQ_0b1_T_ETC__q19[1:0],
	       mu_reqs_rv_port1__read__17_BITS_128_TO_97_29_P_ETC___d438[1:0] } ;
  assign mu_currBusiness_ENQ = MUX_dmemReqs_enq_1__SEL_1 ;
  assign mu_currBusiness_DEQ =
	     WILL_FIRE_RL_mu_getMemoryResponse && !mu_stage1_D_OUT[38] ;
  assign mu_currBusiness_CLR = 1'b0 ;

  // submodule mu_results
  assign mu_results_D_IN =
	     WILL_FIRE_RL_mu_getMemoryResponse ?
	       MUX_mu_results_enq_1__VAL_1 :
	       37'h155555554A ;
  assign mu_results_ENQ =
	     WILL_FIRE_RL_mu_getMemoryResponse ||
	     dCache_RDY_blockTillFlushDone && mu_results_FULL_N &&
	     (fsm_state == 2'd1 || fsm_state == 2'd2) &&
	     mu_barrier ;
  assign mu_results_DEQ =
	     WILL_FIRE_RL_commit_commit && e2w_D_OUT[2:0] == 3'd0 &&
	     e2w_D_OUT[5:3] == 3'd0 ;
  assign mu_results_CLR = 1'b0 ;

  // submodule mu_stage1
  assign mu_stage1_D_IN =
	     { NOT_IF_mu_reqs_rv_port1__read__17_BITS_3_TO_1__ETC___d446 ||
	       mu_reqs_rv_port1__read[0],
	       32'hAAAAAAAA,
	       NOT_IF_mu_reqs_rv_port1__read__17_BITS_3_TO_1__ETC___d446,
	       4'd9,
	       mu_reqs_rv_port1__read[0] } ;
  assign mu_stage1_ENQ = WILL_FIRE_RL_mu_handleRequest ;
  assign mu_stage1_DEQ = WILL_FIRE_RL_mu_getMemoryResponse ;
  assign mu_stage1_CLR = 1'b0 ;

  // submodule npc_readBeforeLaterWrites_0
  assign npc_readBeforeLaterWrites_0_D_IN = 1'b0 ;
  assign npc_readBeforeLaterWrites_0_EN = 1'b0 ;

  // submodule npc_readBeforeLaterWrites_1
  assign npc_readBeforeLaterWrites_1_D_IN = 1'd1 ;
  assign npc_readBeforeLaterWrites_1_EN = npc_port_1_whas ;

  // submodule toBus
  assign toBus_D_IN =
	     WILL_FIRE_RL_handleDCacheRequest ?
	       dCache_getToMem :
	       iCache_getToMem ;
  assign toBus_ENQ =
	     WILL_FIRE_RL_handleDCacheRequest ||
	     WILL_FIRE_RL_handleICacheRequest ;
  assign toBus_DEQ = EN_getBusReq ;
  assign toBus_CLR = 1'b0 ;

  // remaining internal signals
  assign IF_IF_crs_crf_0_readBeforeLaterWrites_0_read___ETC___d1689 =
	     (crs_crf_0_register[0] && d2e_D_OUT[136]) ?
	       3'd3 :
	       ((fetch_epoch_register == d2e_D_OUT[164:163]) ?
		  d2e_D_OUT[2:0] :
		  3'd4) ;
  assign IF_IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b_ETC___d2005 =
	     x__h111957 ^ y__h111958 ;
  assign IF_busError_wget__529_THEN_NOT_exceptions_busy_ETC___d2539 =
	     putBusError_busError ?
	       !exceptions_busy && !MUX_exceptions_busy_write_1__SEL_1 &&
	       fsm_state != 2'd3 :
	       !putIrq_irq ||
	       !exceptions_busy && !MUX_exceptions_busy_write_1__SEL_1 &&
	       fsm_state != 2'd3 ;
  assign IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b1_7_ETC___d1885 =
	     (d2e_D_OUT[104:102] == 3'b001 && d2e_D_OUT[107:105] == 3'b111) ?
	       ((d2e_D_OUT[133:130] == 4'b1000) ?
		  d2e_D_OUT[71:67] :
		  d2e_D_OUT[127:123]) :
	       5'd0 ;
  assign IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1508 =
	     (decode_decodeWord_D_OUT[2:0] == 3'b010) ?
	       decode_decodeWord_D_OUT[5:3] != 3'b111 &&
	       decode_decodeWord_D_OUT[5:3] != 3'b110 &&
	       decode_decodeWord_D_OUT[5:3] != 3'b101 :
	       decode_decodeWord_D_OUT[2:0] != 3'b001 ||
	       decode_decodeWord_D_OUT[5:3] != 3'b111 ||
	       decode_decodeWord_D_OUT[31:28] != 4'b1011 &&
	       decode_decodeWord_D_OUT[31:28] != 4'b1010 &&
	       decode_decodeWord_D_OUT[31:28] != 4'b1001 ;
  assign IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1522 =
	     ((decode_decodeWord_D_OUT[2:0] == 3'b010) ?
		decode_decodeWord_D_OUT[5:3] == 3'b111 ||
		decode_decodeWord_D_OUT[5:3] == 3'b110 ||
		decode_decodeWord_D_OUT[5:3] == 3'b101 :
		decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1498) &&
	     (crs_crf_0_register[3] || rs3__h100493 != 5'h0) &&
	     !SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 ;
  assign IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1574 =
	     IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1508 ||
	     !crs_crf_0_register[3] && rs3__h100493 == 5'h0 ||
	     SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 ;
  assign IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1673 =
	     { x__h104891,
	       x__h104897,
	       x__h104903,
	       (decode_decodeWord_D_OUT[2:0] == 3'b110 ||
		decode_decodeWord_D_OUT[2:0] == 3'b111 ||
		decode_decodeWord_D_OUT[2:0] == 3'b101 ||
		decode_decodeWord_D_OUT[2:0] == 3'b100 ||
		IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1345) ?
		 3'd0 :
		 3'd2 } ;
  assign IF_decode_decodeWord_first__295_BITS_5_TO_3_30_ETC___d1378 =
	     (decode_decodeWord_D_OUT[5:3] == 3'b110) ?
	       decode_decodeWord_D_OUT[31:28] != 4'b1111 &&
	       decode_decodeWord_D_OUT[31:28] != 4'b1011 &&
	       decode_decodeWord_D_OUT[31:28] != 4'b1101 &&
	       decode_decodeWord_D_OUT[31:28] != 4'b1100 :
	       decode_decodeWord_D_OUT[5:3] != 3'b101 ||
	       decode_decodeWord_D_OUT[31:28] != 4'b1110 ;
  assign IF_decode_sc_ready_0_port_0_whas__31_THEN_deco_ETC___d734 =
	     decode_sc_ready_0_port_0_whas ?
	       decode_sc_ready_0_port_0_wget :
	       decode_sc_ready_0_register ;
  assign IF_decode_sc_ready_10_port_0_whas__01_THEN_dec_ETC___d804 =
	     decode_sc_ready_10_port_0_whas ?
	       decode_sc_ready_10_port_0_wget :
	       decode_sc_ready_10_register ;
  assign IF_decode_sc_ready_11_port_0_whas__08_THEN_dec_ETC___d811 =
	     decode_sc_ready_11_port_0_whas ?
	       decode_sc_ready_11_port_0_wget :
	       decode_sc_ready_11_register ;
  assign IF_decode_sc_ready_12_port_0_whas__15_THEN_dec_ETC___d818 =
	     decode_sc_ready_12_port_0_whas ?
	       decode_sc_ready_12_port_0_wget :
	       decode_sc_ready_12_register ;
  assign IF_decode_sc_ready_13_port_0_whas__22_THEN_dec_ETC___d825 =
	     decode_sc_ready_13_port_0_whas ?
	       decode_sc_ready_13_port_0_wget :
	       decode_sc_ready_13_register ;
  assign IF_decode_sc_ready_14_port_0_whas__29_THEN_dec_ETC___d832 =
	     decode_sc_ready_14_port_0_whas ?
	       decode_sc_ready_14_port_0_wget :
	       decode_sc_ready_14_register ;
  assign IF_decode_sc_ready_15_port_0_whas__36_THEN_dec_ETC___d839 =
	     decode_sc_ready_15_port_0_whas ?
	       decode_sc_ready_15_port_0_wget :
	       decode_sc_ready_15_register ;
  assign IF_decode_sc_ready_16_port_0_whas__43_THEN_dec_ETC___d846 =
	     decode_sc_ready_16_port_0_whas ?
	       decode_sc_ready_16_port_0_wget :
	       decode_sc_ready_16_register ;
  assign IF_decode_sc_ready_17_port_0_whas__50_THEN_dec_ETC___d853 =
	     decode_sc_ready_17_port_0_whas ?
	       decode_sc_ready_17_port_0_wget :
	       decode_sc_ready_17_register ;
  assign IF_decode_sc_ready_18_port_0_whas__57_THEN_dec_ETC___d860 =
	     decode_sc_ready_18_port_0_whas ?
	       decode_sc_ready_18_port_0_wget :
	       decode_sc_ready_18_register ;
  assign IF_decode_sc_ready_19_port_0_whas__64_THEN_dec_ETC___d867 =
	     decode_sc_ready_19_port_0_whas ?
	       decode_sc_ready_19_port_0_wget :
	       decode_sc_ready_19_register ;
  assign IF_decode_sc_ready_1_port_0_whas__38_THEN_deco_ETC___d741 =
	     decode_sc_ready_1_port_0_whas ?
	       decode_sc_ready_1_port_0_wget :
	       decode_sc_ready_1_register ;
  assign IF_decode_sc_ready_20_port_0_whas__71_THEN_dec_ETC___d874 =
	     decode_sc_ready_20_port_0_whas ?
	       decode_sc_ready_20_port_0_wget :
	       decode_sc_ready_20_register ;
  assign IF_decode_sc_ready_21_port_0_whas__78_THEN_dec_ETC___d881 =
	     decode_sc_ready_21_port_0_whas ?
	       decode_sc_ready_21_port_0_wget :
	       decode_sc_ready_21_register ;
  assign IF_decode_sc_ready_22_port_0_whas__85_THEN_dec_ETC___d888 =
	     decode_sc_ready_22_port_0_whas ?
	       decode_sc_ready_22_port_0_wget :
	       decode_sc_ready_22_register ;
  assign IF_decode_sc_ready_23_port_0_whas__92_THEN_dec_ETC___d895 =
	     decode_sc_ready_23_port_0_whas ?
	       decode_sc_ready_23_port_0_wget :
	       decode_sc_ready_23_register ;
  assign IF_decode_sc_ready_24_port_0_whas__99_THEN_dec_ETC___d902 =
	     decode_sc_ready_24_port_0_whas ?
	       decode_sc_ready_24_port_0_wget :
	       decode_sc_ready_24_register ;
  assign IF_decode_sc_ready_25_port_0_whas__06_THEN_dec_ETC___d909 =
	     decode_sc_ready_25_port_0_whas ?
	       decode_sc_ready_25_port_0_wget :
	       decode_sc_ready_25_register ;
  assign IF_decode_sc_ready_26_port_0_whas__13_THEN_dec_ETC___d916 =
	     decode_sc_ready_26_port_0_whas ?
	       decode_sc_ready_26_port_0_wget :
	       decode_sc_ready_26_register ;
  assign IF_decode_sc_ready_27_port_0_whas__20_THEN_dec_ETC___d923 =
	     decode_sc_ready_27_port_0_whas ?
	       decode_sc_ready_27_port_0_wget :
	       decode_sc_ready_27_register ;
  assign IF_decode_sc_ready_28_port_0_whas__27_THEN_dec_ETC___d930 =
	     decode_sc_ready_28_port_0_whas ?
	       decode_sc_ready_28_port_0_wget :
	       decode_sc_ready_28_register ;
  assign IF_decode_sc_ready_29_port_0_whas__34_THEN_dec_ETC___d937 =
	     decode_sc_ready_29_port_0_whas ?
	       decode_sc_ready_29_port_0_wget :
	       decode_sc_ready_29_register ;
  assign IF_decode_sc_ready_2_port_0_whas__45_THEN_deco_ETC___d748 =
	     decode_sc_ready_2_port_0_whas ?
	       decode_sc_ready_2_port_0_wget :
	       decode_sc_ready_2_register ;
  assign IF_decode_sc_ready_30_port_0_whas__41_THEN_dec_ETC___d944 =
	     decode_sc_ready_30_port_0_whas ?
	       decode_sc_ready_30_port_0_wget :
	       decode_sc_ready_30_register ;
  assign IF_decode_sc_ready_31_port_0_whas__48_THEN_dec_ETC___d951 =
	     decode_sc_ready_31_port_0_whas ?
	       decode_sc_ready_31_port_0_wget :
	       decode_sc_ready_31_register ;
  assign IF_decode_sc_ready_3_port_0_whas__52_THEN_deco_ETC___d755 =
	     decode_sc_ready_3_port_0_whas ?
	       decode_sc_ready_3_port_0_wget :
	       decode_sc_ready_3_register ;
  assign IF_decode_sc_ready_4_port_0_whas__59_THEN_deco_ETC___d762 =
	     decode_sc_ready_4_port_0_whas ?
	       decode_sc_ready_4_port_0_wget :
	       decode_sc_ready_4_register ;
  assign IF_decode_sc_ready_5_port_0_whas__66_THEN_deco_ETC___d769 =
	     decode_sc_ready_5_port_0_whas ?
	       decode_sc_ready_5_port_0_wget :
	       decode_sc_ready_5_register ;
  assign IF_decode_sc_ready_6_port_0_whas__73_THEN_deco_ETC___d776 =
	     decode_sc_ready_6_port_0_whas ?
	       decode_sc_ready_6_port_0_wget :
	       decode_sc_ready_6_register ;
  assign IF_decode_sc_ready_7_port_0_whas__80_THEN_deco_ETC___d783 =
	     decode_sc_ready_7_port_0_whas ?
	       decode_sc_ready_7_port_0_wget :
	       decode_sc_ready_7_register ;
  assign IF_decode_sc_ready_8_port_0_whas__87_THEN_deco_ETC___d790 =
	     decode_sc_ready_8_port_0_whas ?
	       decode_sc_ready_8_port_0_wget :
	       decode_sc_ready_8_register ;
  assign IF_decode_sc_ready_9_port_0_whas__94_THEN_deco_ETC___d797 =
	     decode_sc_ready_9_port_0_whas ?
	       decode_sc_ready_9_port_0_wget :
	       decode_sc_ready_9_register ;
  assign IF_e2w_first__134_BITS_2_TO_0_135_EQ_0_136_AND_ETC___d2503 =
	     (e2w_D_OUT[2:0] == 3'd0 &&
	      e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 &&
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2201) ?
	       IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2499 :
	       CASE_e2wD_OUT_BITS_2_TO_0_1_9_2_7_8__q17 ;
  assign IF_e2w_first__134_BIT_40_205_AND_e2w_first__13_ETC___d2315 =
	     (e2w_D_OUT[40] &&
	      (e2w_D_OUT[37:34] == 4'b1110 || e2w_D_OUT[37:34] == 4'b1011)) ?
	       _0_OR_NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_1_ETC___d2308 :
	       !e2w_D_OUT[53] ||
	       (e2w_D_OUT[2:0] != 3'd0 ||
		!e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 ||
		IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165) &&
	       NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_136_13_ETC___d2312 ;
  assign IF_e2w_first__134_BIT_47_158_THEN_0_OR_NOT_e2w_ETC___d2350 =
	     (e2w_D_OUT[47] ?
		_0_OR_NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_1_ETC___d2204 :
		IF_e2w_first__134_BIT_40_205_AND_e2w_first__13_ETC___d2315) &&
	     NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_136_13_ETC___d2349 ;
  assign IF_e2w_i_notEmpty__133_AND_e2w_first__134_BITS_ETC___d2154 =
	     (e2w_EMPTY_N && e2w_D_OUT[5:3] == 3'd2) ?
	       alu_results_EMPTY_N :
	       !e2w_EMPTY_N || e2w_D_OUT[5:3] != 3'd4 || mdu_results_EMPTY_N ;
  assign IF_f2d_first__263_BIT_0_264_THEN_IF_fromImem_r_ETC___d1277 =
	     f2d_D_OUT[0] ?
	       fromImem_rv_port1__read[127:0] :
	       decode_fetchedLine ;
  assign IF_fetch_pc_readBeforeLaterWrites_0_read__45_A_ETC___d354 =
	     fetch_pc_register[31:4] == fetch_lastImemAddr ;
  assign IF_mu_reqs_rv_port1__read__17_BITS_3_TO_1_20_E_ETC___d467 =
	     (IF_mu_reqs_rvport1__read_BITS_3_TO_1_EQ_0b1_T_ETC__q19[1:0] ==
	      2'b10) ?
	       !mu_reqs_rv_port1__read__17_BITS_128_TO_97_29_P_ETC___d438[0] :
	       IF_mu_reqs_rvport1__read_BITS_3_TO_1_EQ_0b1_T_ETC__q19[1:0] !=
	       2'b01 ||
	       mu_reqs_rv_port1__read__17_BITS_128_TO_97_29_P_ETC___d438[1:0] ==
	       2'd0 ;
  assign IF_mu_reqs_rv_port1__read__17_BIT_6_76_THEN_mu_ETC___d480 =
	     mu_reqs_rv_port1__read[6] ?
	       mu_reqs_rv_port1__read[64:33] :
	       { 27'd0, mu_reqs_rv_port1__read[21:17] } ;
  assign IF_mu_reqs_rvport1__read_BITS_3_TO_1_EQ_0b1_T_ETC__q19 =
	     (mu_reqs_rv_port1__read[3:1] == 3'b001) ?
	       mu_reqs_rv_port1__read[31:29] :
	       mu_reqs_rv_port1__read[6:4] ;
  assign NOT_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b1_ETC___d2298 =
	     (idx__h119589 != 5'd28 ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165) &&
	     (idx__h119589 == 5'd28 && val__h119412[1] ||
	      CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296) ;
  assign NOT_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b1_ETC___d2306 =
	     (idx__h119589 != 5'd20 ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165) &&
	     (IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165 &&
	      idx__h119589 == 5'd20 &&
	      val__h119412[1] ||
	      NOT_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b1_ETC___d2298) &&
	     (IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2175 ||
	      idx__h119589 != 5'd20 ||
	      !val__h119412[1] ||
	      iCache_RDY_invalidateLines) ;
  assign NOT_IF_fetch_epoch_readBeforeLaterWrites_0_rea_ETC___d1713 =
	     fetch_epoch_register != epoch_register + 2'h2 &&
	     bu_redirs_FULL_N &&
	     bu_results_FULL_N ;
  assign NOT_IF_mu_reqs_rv_port1__read__17_BITS_3_TO_1__ETC___d446 =
	     (IF_mu_reqs_rvport1__read_BITS_3_TO_1_EQ_0b1_T_ETC__q19[1:0] ==
	      2'b10) ?
	       mu_reqs_rv_port1__read__17_BITS_128_TO_97_29_P_ETC___d438[0] :
	       IF_mu_reqs_rvport1__read_BITS_3_TO_1_EQ_0b1_T_ETC__q19[1:0] ==
	       2'b01 &&
	       mu_reqs_rv_port1__read__17_BITS_128_TO_97_29_P_ETC___d438[1:0] !=
	       2'd0 ;
  assign NOT_IF_mu_reqs_rv_port1__read__17_BITS_3_TO_1__ETC___d459 =
	     (NOT_IF_mu_reqs_rv_port1__read__17_BITS_3_TO_1__ETC___d446 ||
	      !mu_reqs_rv_port1__read[0] ||
	      !mu_storeQueue_rv_port1__read[66]) &&
	     (NOT_IF_mu_reqs_rv_port1__read__17_BITS_3_TO_1__ETC___d446 ||
	      mu_reqs_rv_port1__read[0] ||
	      dmemReqs_FULL_N && mu_currBusiness_FULL_N) ;
  assign NOT_decode_decodeWord_first__295_BITS_2_TO_0_2_ETC___d1382 =
	     decode_decodeWord_D_OUT[2:0] != 3'b010 &&
	     decode_decodeWord_D_OUT[2:0] != 3'b0 &&
	     (decode_decodeWord_D_OUT[2:0] != 3'b001 ||
	      decode_decodeWord_D_OUT[5:3] != 3'b111 &&
	      IF_decode_decodeWord_first__295_BITS_5_TO_3_30_ETC___d1378) ;
  assign NOT_decode_decodeWord_first__295_BITS_2_TO_0_2_ETC___d1479 =
	     decode_decodeWord_D_OUT[2:0] != 3'b001 ||
	     decode_decodeWord_D_OUT[5:3] != 3'b111 &&
	     (decode_decodeWord_D_OUT[5:3] != 3'b110 ||
	      decode_decodeWord_D_OUT[31:28] != 4'b1111 &&
	      decode_decodeWord_D_OUT[31:28] != 4'b1011 &&
	      decode_decodeWord_D_OUT[31:28] != 4'b1101 &&
	      decode_decodeWord_D_OUT[31:28] != 4'b1100) ;
  assign NOT_decode_decodeWord_first__295_BITS_2_TO_0_2_ETC___d1575 =
	     (decode_decodeWord_D_OUT[2:0] != 3'b101 &&
	      decode_decodeWord_D_OUT[2:0] != 3'b100 &&
	      decode_decodeWord_D_OUT[2:0] != 3'b011 &&
	      NOT_decode_decodeWord_first__295_BITS_2_TO_0_2_ETC___d1382 ||
	      !crs_crf_0_register[3] && rs1__h100489 == 5'h0 ||
	      SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470) &&
	     (NOT_decode_decodeWord_first__295_BITS_2_TO_0_2_ETC___d1479 ||
	      !crs_crf_0_register[3] && rs2__h100491 == 5'h0 ||
	      SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489) &&
	     IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1574 ;
  assign NOT_decode_decodeWord_first__295_BITS_2_TO_0_2_ETC___d1576 =
	     decode_decodeWord_D_OUT[2:0] != 3'b110 &&
	     decode_decodeWord_D_OUT[2:0] != 3'b111 &&
	     decode_decodeWord_D_OUT[2:0] != 3'b101 &&
	     decode_decodeWord_D_OUT[2:0] != 3'b100 &&
	     CASE_decode_decodeWordD_OUT_BITS_2_TO_0_0b0_N_ETC__q5 ||
	     NOT_decode_decodeWord_first__295_BITS_2_TO_0_2_ETC___d1575 ;
  assign NOT_decode_decodeWord_first__295_BITS_31_TO_28_ETC___d1620 =
	     decode_decodeWord_D_OUT[31:28] != 4'b1111 &&
	     decode_decodeWord_D_OUT[31:28] != 4'b1110 &&
	     decode_decodeWord_D_OUT[31:28] != 4'b1100 &&
	     decode_decodeWord_D_OUT[31:28] != 4'b1011 ||
	     (IF_decode_decodeWord_first__295_BITS_5_TO_3_30_ETC___d1378 ||
	      !crs_crf_0_register[3] && rs1__h100489 == 5'h0 ||
	      SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470) &&
	     IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1574 ;
  assign NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_136_13_ETC___d2312 =
	     e2w_D_OUT[2:0] != 3'd0 ||
	     !e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 ||
	     IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2201 ||
	     mu_storeQueue_rv[66] && dmemReqs_FULL_N ;
  assign NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_136_13_ETC___d2334 =
	     (e2w_D_OUT[2:0] != 3'd0 ||
	      !e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2192) &&
	     e2w_D_OUT[2:0] != 3'd1 &&
	     e2w_D_OUT[2:0] != 3'd2 &&
	     e2w_D_OUT[2:0] != 3'd3 ||
	     !exceptions_busy && fsm_state != 2'd3 ;
  assign NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_136_13_ETC___d2346 =
	     e2w_D_OUT[2:0] != 3'd0 ||
	     !e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 ||
	     IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2201 &&
	     !e2w_D_OUT[38] ||
	     (!epoch_readBeforeLaterWrites_1_Q_OUT ||
	      e2w_D_OUT[5:3] != 3'd1 ||
	      bu_redirs_EMPTY_N) &&
	     (!npc_readBeforeLaterWrites_1_Q_OUT || e2w_D_OUT[5:3] != 3'd1 ||
	      bu_redirs_EMPTY_N) ;
  assign NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_136_13_ETC___d2349 =
	     (e2w_D_OUT[2:0] != 3'd0 ||
	      !e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165) &&
	     (IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2175 ||
	      e2w_D_OUT[2:0] != 3'd0 ||
	      !e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2192 ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165) &&
	     NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_136_13_ETC___d2334 &&
	     NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_136_13_ETC___d2346 ;
  assign NOT_e2w_first__134_BIT_40_205_473_OR_NOT_e2w_f_ETC___d2479 =
	     (!e2w_D_OUT[40] ||
	      e2w_D_OUT[37:34] != 4'b1110 && e2w_D_OUT[37:34] != 4'b1011) &&
	     e2w_D_OUT[53] &&
	     e2w_D_OUT[2:0] == 3'd0 &&
	     e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 &&
	     IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2192 ;
  assign NOT_mdu_op_41_EQ_0_42_59_AND_mdu_op_41_EQ_1_60_ETC___d631 =
	     mdu_op != 2'd0 &&
	     mdu_op_41_EQ_1_60_OR_mdu_op_41_EQ_2_61_62_AND__ETC___d619 &&
	     mdu_fsm_start_wire_whas &&
	     mdu_fsm_state_mkFSMstate == 4'd0 ||
	     NOT_mdu_rv2_54_ULT_mdu_rv1_53_63_91_OR_mdu_rv2_ETC___d623 ||
	     mdu_fsm_state_mkFSMstate == 4'd5 ||
	     mdu_b != 32'd0 && mdu_rv1_53_ULT_mdu_rv2_54___d593 &&
	     mdu_fsm_state_mkFSMstate == 4'd7 ||
	     mdu_op != 2'd0 &&
	     mdu_op_41_EQ_1_60_OR_mdu_op_41_EQ_2_61_62_AND__ETC___d619 &&
	     mdu_fsm_start_wire_whas &&
	     mdu_fsm_state_mkFSMstate == 4'd9 ;
  assign NOT_mdu_op_41_EQ_0_42_59_AND_mdu_op_41_EQ_1_60_ETC___d644 =
	     (mdu_op == 2'd1 || mdu_op == 2'd2) && mdu_b == 32'd0 &&
	     mdu_fsm_start_wire_whas ;
  assign NOT_mdu_op_41_EQ_1_60_59_AND_NOT_mdu_op_41_EQ__ETC___d684 =
	     mdu_op != 2'd1 && mdu_op != 2'd2 ||
	     mdu_rv2_54_ULT_mdu_rv1_53___d563 && !mdu_rv2[31] ||
	     mdu_b == 32'd0 ||
	     mdu_rv1_53_ULT_mdu_rv2_54___d593 ;
  assign NOT_mdu_op_41_EQ_1_60_59_AND_NOT_mdu_op_41_EQ__ETC___d689 =
	     mdu_op != 2'd1 && mdu_op != 2'd2 ||
	     mdu_rv2_54_ULT_mdu_rv1_53___d563 && !mdu_rv2[31] ||
	     mdu_b == 32'd0 ||
	     !mdu_rv1_53_ULT_mdu_rv2_54___d593 ;
  assign NOT_mdu_rv2_54_ULT_mdu_rv1_53_63_91_OR_mdu_rv2_ETC___d601 =
	     (!mdu_rv2_54_ULT_mdu_rv1_53___d563 || mdu_rv2[31]) &&
	     mdu_b != 32'd0 &&
	     !mdu_rv1_53_ULT_mdu_rv2_54___d593 &&
	     mdu_fsm_state_mkFSMstate == 4'd3 ;
  assign NOT_mdu_rv2_54_ULT_mdu_rv1_53_63_91_OR_mdu_rv2_ETC___d623 =
	     (!mdu_rv2_54_ULT_mdu_rv1_53___d563 || mdu_rv2[31]) &&
	     mdu_b != 32'd0 &&
	     mdu_rv1_53_ULT_mdu_rv2_54___d593 &&
	     mdu_fsm_state_mkFSMstate == 4'd3 ;
  assign _0_OR_NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_1_ETC___d2204 =
	     (e2w_D_OUT[2:0] != 3'd0 ||
	      !e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165) &&
	     (e2w_D_OUT[2:0] != 3'd0 ||
	      !e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2201 ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165) ;
  assign _0_OR_NOT_e2w_first__134_BITS_2_TO_0_135_EQ_0_1_ETC___d2308 =
	     (e2w_D_OUT[2:0] != 3'd0 ||
	      !e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165) &&
	     (e2w_D_OUT[2:0] != 3'd0 ||
	      !e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2201 ||
	      NOT_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b1_ETC___d2306) ;
  assign _theResult___fst__h105782 =
	     (d2e_D_OUT[107:105] == 3'b101) ?
	       (d2e_D_OUT[130] ? data___1__h105850 : d2e_D_OUT[98:67]) :
	       data__h105761 ;
  assign aluOp__h105760 =
	     (d2e_D_OUT[104:102] == 3'b001) ?
	       d2e_D_OUT[132:130] :
	       d2e_D_OUT[107:105] ;
  assign byte_en__h30100 =
	     4'b1100 >>
	     mu_reqs_rv_port1__read__17_BITS_128_TO_97_29_P_ETC___d438[1:0] ;
  assign byte_en__h30381 =
	     4'b1000 >>
	     mu_reqs_rv_port1__read__17_BITS_128_TO_97_29_P_ETC___d438[1:0] ;
  assign d2eD_OUT_BITS_133_TO_118__q1 = d2e_D_OUT[133:118] ;
  assign d2eD_OUT_BITS_66_TO_35_BITS_31_TO_16__q15 =
	     d2eD_OUT_BITS_66_TO_35__q6[31:16] ;
  assign d2eD_OUT_BITS_66_TO_35_BITS_31_TO_1__q7 =
	     d2eD_OUT_BITS_66_TO_35__q6[31:1] ;
  assign d2eD_OUT_BITS_66_TO_35_BITS_31_TO_2__q9 =
	     d2eD_OUT_BITS_66_TO_35__q6[31:2] ;
  assign d2eD_OUT_BITS_66_TO_35_BITS_31_TO_4__q11 =
	     d2eD_OUT_BITS_66_TO_35__q6[31:4] ;
  assign d2eD_OUT_BITS_66_TO_35_BITS_31_TO_8__q13 =
	     d2eD_OUT_BITS_66_TO_35__q6[31:8] ;
  assign d2eD_OUT_BITS_66_TO_35__q6 = d2e_D_OUT[66:35] ;
  assign d2e_first__678_BITS_101_TO_99_692_EQ_1_702_AND_ETC___d2049 =
	     d2e_D_OUT[101:99] == 3'd1 &&
	     (d2e_D_OUT[104:102] == 3'b110 || d2e_D_OUT[104:102] == 3'b111 ||
	      d2e_D_OUT[104:102] == 3'b0 ||
	      ((d2e_D_OUT[104:102] == 3'b101) ?
		 IF_d2e_first__678_BITS_107_TO_105_745_EQ_0b111_ETC___d2044 :
		 d2e_D_OUT[104:102] == 3'b001)) ;
  assign data__h105761 =
	     (d2e_D_OUT[104:102] == 3'b001 && d2e_D_OUT[133:130] == 4'b1000) ?
	       op2__h105759 :
	       IF_IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b_ETC___d2012 ;
  assign data__h29475 = { 24'd0, mem_data__h29446[7:0] } ;
  assign data__h29609 = { 16'd0, mem_data__h29446[15:0] } ;
  assign data__h29881 =
	     { IF_mu_reqs_rv_port1__read__17_BIT_6_76_THEN_mu_ETC___d480[7:0],
	       IF_mu_reqs_rv_port1__read__17_BIT_6_76_THEN_mu_ETC___d480[15:8],
	       IF_mu_reqs_rv_port1__read__17_BIT_6_76_THEN_mu_ETC___d480[23:16],
	       IF_mu_reqs_rv_port1__read__17_BIT_6_76_THEN_mu_ETC___d480[31:24] } >>
	     shift_amount__h29876 ;
  assign decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1354 =
	     decode_decodeWord_D_OUT[2:0] == 3'b001 &&
	     (decode_decodeWord_D_OUT[5:3] == 3'b111 ||
	      ((decode_decodeWord_D_OUT[5:3] == 3'b110) ?
		 decode_decodeWord_D_OUT[31:28] == 4'b1111 ||
		 decode_decodeWord_D_OUT[31:28] == 4'b1011 ||
		 decode_decodeWord_D_OUT[31:28] == 4'b1101 ||
		 decode_decodeWord_D_OUT[31:28] == 4'b1100 :
		 decode_decodeWord_D_OUT[5:3] == 3'b101 &&
		 decode_decodeWord_D_OUT[31:28] == 4'b1110)) ;
  assign decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1404 =
	     (decode_decodeWord_D_OUT[2:0] == 3'b101 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b100 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b011 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b010 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b0 ||
	      decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1354) &&
	     (crs_crf_0_register[3] || rs1__h100489 != 5'h0) ;
  assign decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1475 =
	     decode_decodeWord_D_OUT[2:0] == 3'b001 &&
	     (decode_decodeWord_D_OUT[5:3] == 3'b111 ||
	      decode_decodeWord_D_OUT[5:3] == 3'b110 &&
	      (decode_decodeWord_D_OUT[31:28] == 4'b1111 ||
	       decode_decodeWord_D_OUT[31:28] == 4'b1011 ||
	       decode_decodeWord_D_OUT[31:28] == 4'b1101 ||
	       decode_decodeWord_D_OUT[31:28] == 4'b1100)) ;
  assign decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1498 =
	     decode_decodeWord_D_OUT[2:0] == 3'b001 &&
	     decode_decodeWord_D_OUT[5:3] == 3'b111 &&
	     (decode_decodeWord_D_OUT[31:28] == 4'b1011 ||
	      decode_decodeWord_D_OUT[31:28] == 4'b1010 ||
	      decode_decodeWord_D_OUT[31:28] == 4'b1001) ;
  assign decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1523 =
	     decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1404 &&
	     !SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 ||
	     decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1475 &&
	     (crs_crf_0_register[3] || rs2__h100491 != 5'h0) &&
	     !SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 ||
	     IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1522 ;
  assign decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1593 =
	     (decode_decodeWord_D_OUT[2:0] == 3'b110 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b111 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b101 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b100 ||
	      IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1345) &&
	     (decode_decodeWord_D_OUT[2:0] == 3'b111 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b0 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b100 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b011 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b001 &&
	      IF_decode_decodeWord_first__295_BITS_5_TO_3_30_ETC___d1589) ;
  assign decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1624 =
	     decode_decodeWord_D_OUT[2:0] == 3'b001 &&
	     decode_decodeWord_D_OUT[5:3] == 3'b101 &&
	     (decode_decodeWord_D_OUT[31:28] == 4'b1110 ||
	      decode_decodeWord_D_OUT[31:28] == 4'b1011 ||
	      decode_decodeWord_D_OUT[31:28] == 4'b1100) ;
  assign decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1662 =
	     (decode_decodeWord_D_OUT[2:0] == 3'b110 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b111 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b101 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b100 ||
	      IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1345) &&
	     (crs_crf_0_register[3] || rs1__h100489 != 5'h0) ;
  assign decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1665 =
	     (decode_decodeWord_D_OUT[2:0] == 3'b110 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b111 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b101 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b100 ||
	      IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1345) &&
	     (crs_crf_0_register[3] || rs2__h100491 != 5'h0) ;
  assign decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1668 =
	     (decode_decodeWord_D_OUT[2:0] == 3'b110 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b111 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b101 ||
	      decode_decodeWord_D_OUT[2:0] == 3'b100 ||
	      IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1345) &&
	     (crs_crf_0_register[3] || rs3__h100493 != 5'h0) ;
  assign decode_decodeWord_first__295_BIT_31_578_AND_IN_ETC___d1585 =
	     x__h104121 & y__h104122 ;
  assign decode_decodeWord_i_notEmpty__294_AND_decode_d_ETC___d1529 =
	     decode_decodeWord_EMPTY_N &&
	     ((decode_decodeWord_D_OUT[2:0] == 3'b110 ||
	       decode_decodeWord_D_OUT[2:0] == 3'b111 ||
	       decode_decodeWord_D_OUT[2:0] == 3'b101 ||
	       decode_decodeWord_D_OUT[2:0] == 3'b100 ||
	       IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1345) &&
	      decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1523 ||
	      decode_ws2d_EMPTY_N && d2e_FULL_N) ;
  assign decode_ws2d_i_notFull__261_AND_decode_decodeWo_ETC___d1270 =
	     decode_ws2d_FULL_N && decode_decodeWord_FULL_N &&
	     (!f2d_D_OUT[0] || fromImem_rv_port1__read[128]) ;
  assign def__h10225 =
	     crs_crf_14_port_0_whas ? x_wget__h9915 : crs_crf_14_register ;
  assign def__h10867 =
	     crs_crf_15_port_0_whas ? x_wget__h10557 : crs_crf_15_register ;
  assign def__h11509 =
	     crs_crf_16_port_0_whas ? x_wget__h11199 : crs_crf_16_register ;
  assign def__h12151 =
	     crs_crf_17_port_0_whas ? x_wget__h11841 : crs_crf_17_register ;
  assign def__h1237 =
	     crs_crf_0_port_0_whas ? x_wget__h927 : crs_crf_0_register ;
  assign def__h12793 =
	     crs_crf_18_port_0_whas ? x_wget__h12483 : crs_crf_18_register ;
  assign def__h13435 =
	     crs_crf_19_port_0_whas ? x_wget__h13125 : crs_crf_19_register ;
  assign def__h14075 =
	     crs_crf_20_port_0_whas ? x_wget__h13763 : crs_crf_20_register ;
  assign def__h14717 =
	     crs_crf_21_port_0_whas ? x_wget__h14407 : crs_crf_21_register ;
  assign def__h15359 =
	     crs_crf_22_port_0_whas ? x_wget__h15049 : crs_crf_22_register ;
  assign def__h16001 =
	     crs_crf_23_port_0_whas ? x_wget__h15691 : crs_crf_23_register ;
  assign def__h16643 =
	     crs_crf_24_port_0_whas ? x_wget__h16333 : crs_crf_24_register ;
  assign def__h17285 =
	     crs_crf_25_port_0_whas ? x_wget__h16975 : crs_crf_25_register ;
  assign def__h17927 =
	     crs_crf_26_port_0_whas ? x_wget__h17617 : crs_crf_26_register ;
  assign def__h18569 =
	     crs_crf_27_port_0_whas ? x_wget__h18259 : crs_crf_27_register ;
  assign def__h1879 =
	     crs_crf_1_port_0_whas ? x_wget__h1569 : crs_crf_1_register ;
  assign def__h19211 =
	     crs_crf_28_port_0_whas ? x_wget__h18901 : crs_crf_28_register ;
  assign def__h19853 =
	     crs_crf_29_port_0_whas ? x_wget__h19543 : crs_crf_29_register ;
  assign def__h20495 =
	     crs_crf_30_port_0_whas ? x_wget__h20185 : crs_crf_30_register ;
  assign def__h21137 =
	     crs_crf_31_port_0_whas ? x_wget__h20827 : crs_crf_31_register ;
  assign def__h2521 =
	     crs_crf_2_port_0_whas ? x_wget__h2211 : crs_crf_2_register ;
  assign def__h26446 =
	     fetch_pc_port_0_whas ? x_wget__h26136 : fetch_pc_register ;
  assign def__h3163 =
	     crs_crf_3_port_0_whas ? x_wget__h2853 : crs_crf_3_register ;
  assign def__h3805 =
	     crs_crf_4_port_0_whas ? x_wget__h3495 : crs_crf_4_register ;
  assign def__h4447 =
	     crs_crf_5_port_0_whas ? x_wget__h4137 : crs_crf_5_register ;
  assign def__h5089 =
	     crs_crf_6_port_0_whas ? x_wget__h4779 : crs_crf_6_register ;
  assign def__h5731 =
	     crs_crf_7_port_0_whas ? x_wget__h5421 : crs_crf_7_register ;
  assign def__h6373 =
	     crs_crf_8_port_0_whas ? x_wget__h6063 : crs_crf_8_register ;
  assign def__h7015 =
	     crs_crf_9_port_0_whas ? x_wget__h6705 : crs_crf_9_register ;
  assign def__h7657 =
	     crs_crf_10_port_0_whas ? x_wget__h7347 : crs_crf_10_register ;
  assign def__h8299 =
	     crs_crf_11_port_0_whas ? x_wget__h7989 : crs_crf_11_register ;
  assign def__h8941 =
	     crs_crf_12_port_0_whas ? x_wget__h8631 : crs_crf_12_register ;
  assign def__h9583 =
	     crs_crf_13_port_0_whas ? x_wget__h9273 : crs_crf_13_register ;
  assign dst__h96123 = rd__h104066 ;
  assign e2w_first__134_BITS_2_TO_0_135_EQ_0_136_AND_e2_ETC___d2364 =
	     e2w_D_OUT[2:0] == 3'd0 &&
	     e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 &&
	     IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2192 &&
	     idx__h119589 == 5'd20 &&
	     val__h119412[1] ;
  assign e2w_first__134_BITS_2_TO_0_135_EQ_0_136_AND_e2_ETC___d2367 =
	     e2w_D_OUT[2:0] == 3'd0 &&
	     e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 &&
	     IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2192 &&
	     idx__h119589 == 5'd28 &&
	     val__h119412[1] ;
  assign e2w_first__134_BITS_2_TO_0_135_EQ_0_136_AND_e2_ETC___d2432 =
	     e2w_D_OUT[2:0] == 3'd0 &&
	     e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 &&
	     IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2192 &&
	     (idx__h119589 != 5'd20 || !val__h119412[1]) ;
  assign e2w_first__134_BITS_2_TO_0_135_EQ_0_136_AND_e2_ETC___d2459 =
	     e2w_D_OUT[2:0] == 3'd0 &&
	     e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 &&
	     IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2192 &&
	     (idx__h119589 != 5'd28 || !val__h119412[1]) ;
  assign e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 =
	     e2w_D_OUT[68:67] == epoch_register ;
  assign e2w_first__134_BIT_40_205_AND_e2w_first__134_B_ETC___d2371 =
	     e2w_D_OUT[40] &&
	     (e2w_D_OUT[37:34] == 4'b1110 || e2w_D_OUT[37:34] == 4'b1011) &&
	     e2w_D_OUT[2:0] == 3'd0 &&
	     e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 &&
	     IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2192 ;
  assign f2d_i_notFull__44_AND_NOT_IF_fetch_pc_readBefo_ETC___d358 =
	     f2d_FULL_N &&
	     (fetch_pc_register[31:30] != 2'b11 &&
	      IF_fetch_pc_readBeforeLaterWrites_0_read__45_A_ETC___d354 ||
	      iCache_RDY_putFromProc) ;
  assign fromBus_i_notEmpty__87_AND_IF_busTracker_rv_po_ETC___d292 =
	     fromBus_EMPTY_N &&
	     (busTracker_rv[4] ?
		dCache_RDY_putFromMem :
		iCache_RDY_putFromMem) ;
  assign fromDmem_rvport1__read_BITS_31_TO_0__q18 =
	     fromDmem_rv_port1__read[31:0] ;
  assign fsm_state_read_EQ_1_AND_fsm_enterASExcEn_whas__ETC___d26 =
	     fsm_state == 2'd1 &&
	     (MUX_exceptions_busy_write_1__SEL_2 ||
	      MUX_exceptions_busy_write_1__SEL_1 ||
	      fsm_stopDecode_whas) ||
	     fsm_state == 2'd2 &&
	     (MUX_exceptions_busy_write_1__SEL_2 ||
	      MUX_exceptions_busy_write_1__SEL_1 ||
	      fsm_restartDecode_whas) ||
	     fsm_state == 2'd3 ;
  assign idx__h116186 = crs_crf_0_register[3] ? 5'd10 : 5'd6 ;
  assign idx__h119589 =
	     (e2w_D_OUT[37:34] == 4'b1110) ? e2w_D_OUT[26:22] : 5'd0 ;
  assign immExt__h115517 =
	     (d2e_D_OUT[104:102] == 3'b0) ?
	       { {14{x__h116141[17]}}, x__h116141 } :
	       { {9{x__h116165[22]}}, x__h116165 } ;
  assign immShift__h29872 =
	     ~IF_mu_reqs_rvport1__read_BITS_3_TO_1_EQ_0b1_T_ETC__q19[1:0] ;
  assign imm__h105754 =
	     (d2e_D_OUT[104:102] != 3'b001 && d2e_D_OUT[107:105] == 3'b100) ?
	       { {16{d2eD_OUT_BITS_133_TO_118__q1[15]}},
		 d2eD_OUT_BITS_133_TO_118__q1 } :
	       { 16'd0, d2e_D_OUT[133:118] } ;
  assign mdu_fsm_abort_whas__13_AND_mdu_fsm_abort_wget__ETC___d705 =
	     (mdu_fsm_state_mkFSMstate == 4'd0 ||
	      mdu_fsm_state_mkFSMstate == 4'd9) &&
	     (!mdu_fsm_start_reg_1 || mdu_fsm_state_fired) ;
  assign mdu_op_41_EQ_0_42_OR_NOT_mdu_op_41_EQ_1_60_59__ETC___d699 =
	     (mdu_op == 2'd0 ||
	      NOT_mdu_op_41_EQ_1_60_59_AND_NOT_mdu_op_41_EQ__ETC___d684 ||
	      !mdu_fsm_start_wire_whas) &&
	     (mdu_op == 2'd0 ||
	      NOT_mdu_op_41_EQ_1_60_59_AND_NOT_mdu_op_41_EQ__ETC___d689 ||
	      !mdu_fsm_start_wire_whas) &&
	     (mdu_op != 2'd1 && mdu_op != 2'd2 || mdu_b != 32'd0 ||
	      !mdu_fsm_start_wire_whas) &&
	     (mdu_op == 2'd0 || mdu_op == 2'd1 || mdu_op == 2'd2 ||
	      !mdu_fsm_start_wire_whas) ;
  assign mdu_op_41_EQ_0_42_OR_NOT_mdu_op_41_EQ_1_60_59__ETC___d700 =
	     (mdu_op != 2'd1 && mdu_op != 2'd2 ||
	      !mdu_rv2_54_ULT_mdu_rv1_53___d563 ||
	      mdu_b == 32'd0 ||
	      mdu_rv2[31] ||
	      !mdu_fsm_start_wire_whas) &&
	     mdu_op_41_EQ_0_42_OR_NOT_mdu_op_41_EQ_1_60_59__ETC___d699 ;
  assign mdu_op_41_EQ_1_60_OR_mdu_op_41_EQ_2_61_62_AND__ETC___d571 =
	     (mdu_op == 2'd1 || mdu_op == 2'd2) &&
	     mdu_rv2_54_ULT_mdu_rv1_53___d563 &&
	     mdu_b != 32'd0 &&
	     !mdu_rv2[31] ;
  assign mdu_op_41_EQ_1_60_OR_mdu_op_41_EQ_2_61_62_AND__ETC___d597 =
	     (mdu_op == 2'd1 || mdu_op == 2'd2) &&
	     (!mdu_rv2_54_ULT_mdu_rv1_53___d563 || mdu_rv2[31]) &&
	     mdu_b != 32'd0 &&
	     !mdu_rv1_53_ULT_mdu_rv2_54___d593 ;
  assign mdu_op_41_EQ_1_60_OR_mdu_op_41_EQ_2_61_62_AND__ETC___d619 =
	     (mdu_op == 2'd1 || mdu_op == 2'd2) &&
	     (!mdu_rv2_54_ULT_mdu_rv1_53___d563 || mdu_rv2[31]) &&
	     mdu_b != 32'd0 &&
	     mdu_rv1_53_ULT_mdu_rv2_54___d593 ;
  assign mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d582 =
	     mdu_running &&
	     (mdu_op != 2'd0 &&
	      mdu_op_41_EQ_1_60_OR_mdu_op_41_EQ_2_61_62_AND__ETC___d571 &&
	      mdu_fsm_start_wire_whas &&
	      mdu_fsm_state_mkFSMstate == 4'd0 ||
	      mdu_rv2_54_ULT_mdu_rv1_53___d563 && mdu_b != 32'd0 &&
	      !mdu_rv2[31] &&
	      mdu_fsm_state_mkFSMstate == 4'd3 ||
	      mdu_op != 2'd0 &&
	      mdu_op_41_EQ_1_60_OR_mdu_op_41_EQ_2_61_62_AND__ETC___d571 &&
	      mdu_fsm_start_wire_whas &&
	      mdu_fsm_state_mkFSMstate == 4'd9) ;
  assign mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d609 =
	     mdu_running &&
	     (mdu_op != 2'd0 &&
	      mdu_op_41_EQ_1_60_OR_mdu_op_41_EQ_2_61_62_AND__ETC___d597 &&
	      mdu_fsm_start_wire_whas &&
	      mdu_fsm_state_mkFSMstate == 4'd0 ||
	      NOT_mdu_rv2_54_ULT_mdu_rv1_53_63_91_OR_mdu_rv2_ETC___d601 ||
	      mdu_b != 32'd0 && !mdu_rv1_53_ULT_mdu_rv2_54___d593 &&
	      mdu_fsm_state_mkFSMstate == 4'd7 ||
	      mdu_op != 2'd0 &&
	      mdu_op_41_EQ_1_60_OR_mdu_op_41_EQ_2_61_62_AND__ETC___d597 &&
	      mdu_fsm_start_wire_whas &&
	      mdu_fsm_state_mkFSMstate == 4'd9) ;
  assign mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d652 =
	     mdu_running &&
	     (NOT_mdu_op_41_EQ_0_42_59_AND_mdu_op_41_EQ_1_60_ETC___d644 &&
	      mdu_fsm_state_mkFSMstate == 4'd0 ||
	      mdu_b == 32'd0 && mdu_fsm_state_mkFSMstate == 4'd3 ||
	      mdu_b == 32'd0 && mdu_fsm_state_mkFSMstate == 4'd7 ||
	      NOT_mdu_op_41_EQ_0_42_59_AND_mdu_op_41_EQ_1_60_ETC___d644 &&
	      mdu_fsm_state_mkFSMstate == 4'd9) ;
  assign mdu_rv1_53_MUL_mdu_rv2_54___d555 = mdu_rv1 * mdu_rv2 ;
  assign mdu_rv1_53_ULT_mdu_rv2_54___d593 = mdu_rv1 < mdu_rv2 ;
  assign mdu_rv2_54_ULT_mdu_rv1_53___d563 = mdu_rv2 < mdu_rv1 ;
  assign mem_data__h29446 =
	     { fromDmem_rvport1__read_BITS_31_TO_0__q18[7:0],
	       fromDmem_rvport1__read_BITS_31_TO_0__q18[15:8],
	       fromDmem_rvport1__read_BITS_31_TO_0__q18[23:16],
	       fromDmem_rvport1__read_BITS_31_TO_0__q18[31:24] } >>
	     x__h29583 ;
  assign mu_reqs_rv_port1__read__17_BITS_128_TO_97_29_P_ETC___d438 =
	     mu_reqs_rv_port1__read[128:97] +
	     ((mu_reqs_rv_port1__read[3:1] == 3'b001) ?
		mu_reqs_rv_port1__read[96:65] <<
		mu_reqs_rv_port1__read[26:22] :
		x__h30200 << immShift__h29872) ;
  assign mu_results_i_notFull__74_AND_mu_stage1_first___ETC___d382 =
	     mu_results_FULL_N &&
	     (mu_stage1_D_OUT[38] ||
	      mu_currBusiness_EMPTY_N && fromDmem_rv_port1__read[32]) ;
  assign n_epoch__h115520 = fetch_epoch_register + 2'd1 ;
  assign op2__h105759 =
	     (d2e_D_OUT[104:102] == 3'b001) ?
	       op2_reg__h105758 :
	       imm__h105754 ;
  assign op2_reg__h105758 =
	     IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b1_7_ETC___d1885[4] ?
	       CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp311204__ETC__q16 :
	       temp3__h111204 ;
  assign pcPlus4__h115518 = d2e_D_OUT[228:197] + 32'd4 ;
  assign pc__h116025 = { d2e_D_OUT[228], d2e_D_OUT[133:105], 2'h0 } ;
  assign pc_add__h115519 =
	     ((d2e_D_OUT[104:102] == 3'b0) ?
		d2e_D_OUT[98:67] :
		d2e_D_OUT[228:197]) +
	     immExt__h115517 ;
  assign rd__h104066 =
	     (decode_decodeWord_D_OUT[2:0] != 3'b111 &&
	      decode_decodeWord_D_OUT[2:0] != 3'b0 &&
	      decode_decodeWord_D_OUT[2:0] != 3'b100 &&
	      decode_decodeWord_D_OUT[2:0] != 3'b011 &&
	      (decode_decodeWord_D_OUT[2:0] != 3'b001 ||
	       CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b110_ETC__q4)) ?
	       5'h0 :
	       IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1610 ;
  assign req_word_byte__h30377 =
	     mu_reqs_rv_port1__read[0] ? _theResult___fst__h30098 : 4'd0 ;
  assign result__h115864 =
	     { crs_crf_0_register[31:24], 8'd0, crs_crf_0_register[23:8] } ;
  assign rs1__h100489 =
	     (decode_decodeWord_D_OUT[2:0] != 3'b101 &&
	      decode_decodeWord_D_OUT[2:0] != 3'b100 &&
	      decode_decodeWord_D_OUT[2:0] != 3'b011 &&
	      NOT_decode_decodeWord_first__295_BITS_2_TO_0_2_ETC___d1382) ?
	       5'h0 :
	       IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1398 ;
  assign rs2__h100491 =
	     NOT_decode_decodeWord_first__295_BITS_2_TO_0_2_ETC___d1479 ?
	       5'h0 :
	       decode_decodeWord_D_OUT[20:16] ;
  assign rs3__h100493 =
	     IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1508 ?
	       5'h0 :
	       ((decode_decodeWord_D_OUT[2:0] == 3'b010) ?
		  decode_decodeWord_D_OUT[15:11] :
		  decode_decodeWord_D_OUT[10:6]) ;
  assign sel__h100051 =
	     (f2d_D_OUT[69:68] == 2'b11) ? 2'd0 : f2d_D_OUT[41:40] ;
  assign shift_amount__h29876 =
	     { mu_reqs_rv_port1__read__17_BITS_128_TO_97_29_P_ETC___d438[1:0],
	       3'b0 } ;
  assign temp0__h111201 =
	     IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b1_7_ETC___d1885[0] ?
	       CASE_d2eD_OUT_BITS_129_TO_128_0b0_d2eD_OUT_B_ETC__q8 :
	       d2e_D_OUT[66:35] ;
  assign temp1__h111202 =
	     IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b1_7_ETC___d1885[1] ?
	       CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp011201__ETC__q10 :
	       temp0__h111201 ;
  assign temp2__h111203 =
	     IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b1_7_ETC___d1885[2] ?
	       CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp111202__ETC__q12 :
	       temp1__h111202 ;
  assign temp3__h111204 =
	     IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b1_7_ETC___d1885[3] ?
	       CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp211203__ETC__q14 :
	       temp2__h111203 ;
  assign x__h104121 = decode_decodeWord_D_OUT[31] & y__h104124 ;
  assign x__h104891 =
	     decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1662 ?
	       decode_rf_D_OUT_3 :
	       32'h0 ;
  assign x__h104897 =
	     decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1665 ?
	       decode_rf_D_OUT_2 :
	       32'h0 ;
  assign x__h104903 =
	     decode_decodeWord_first__295_BITS_2_TO_0_296_E_ETC___d1668 ?
	       decode_rf_D_OUT_1 :
	       32'h0 ;
  assign x__h111921 = d2e_D_OUT[98:67] < op2__h105759 ;
  assign x__h111928 =
	     (d2e_D_OUT[98:67] ^ 32'h80000000) <
	     (op2__h105759 ^ 32'h80000000) ;
  assign x__h111957 = {32{d2e_D_OUT[104:102] == 3'b001}} ;
  assign x__h116141 = { d2e_D_OUT[133:118], 2'h0 } ;
  assign x__h116165 = { d2e_D_OUT[133:113], 2'h0 } ;
  assign x__h116337 = n_epoch__h115520 ;
  assign x__h117721 =
	     { exceptions_erReg,
	       crs_crf_0_register[27:24],
	       crs_crf_0_register[15:0],
	       crs_crf_0_register[7:2],
	       2'd0 } ;
  assign x__h118032 = { crs_crf_5_register[31:12], exceptions_erReg, 8'h0 } ;
  assign x__h122945 =
	     (e2w_D_OUT[2:0] == 3'd0 && e2w_D_OUT[5:3] == 3'd1 &&
	      bu_redirs_D_OUT[34]) ?
	       bu_redirs_D_OUT[33:2] :
	       e2w_D_OUT[100:69] ;
  assign x__h123168 =
	     (e2w_D_OUT[2:0] == 3'd0 && e2w_D_OUT[5:3] == 3'd1 &&
	      bu_redirs_D_OUT[34]) ?
	       bu_redirs_D_OUT[1:0] :
	       e2w_D_OUT[68:67] ;
  assign x__h27838 = fetch_pc_register + 32'd4 ;
  assign x__h29583 = { mu_currBusiness_D_OUT[1:0], 3'b0 } ;
  assign x__h30200 = { 16'd0, mu_reqs_rv_port1__read[32:17] } ;
  assign x__h70722 =
	     mdu_reqs_D_OUT[66] ?
	       -mdu_reqs_D_OUT[66:35] :
	       mdu_reqs_D_OUT[66:35] ;
  assign x__h70796 =
	     mdu_reqs_D_OUT[34] ?
	       -mdu_reqs_D_OUT[34:3] :
	       mdu_reqs_D_OUT[34:3] ;
  assign x__h70854 = mdu_reqs_D_OUT[66] ^ mdu_reqs_D_OUT[34] ;
  assign x__h89109 = { decode_incCounter_whas, 1'b0 } ;
  assign x_data__h105772 =
	     (d2e_D_OUT[104:102] == 3'b001) ?
	       _theResult___fst__h105782 :
	       data__h105761 ;
  assign x_data__h69372 =
	     (mdu_op == 2'd2) ? mdu_rv1 : (mdu_sign ? -mdu_res : mdu_res) ;
  assign x_wget__h10557 =
	     crs_crf_15_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_15_register ;
  assign x_wget__h11199 =
	     crs_crf_16_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_16_register ;
  assign x_wget__h11841 =
	     crs_crf_17_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_17_register ;
  assign x_wget__h12483 =
	     crs_crf_18_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_18_register ;
  assign x_wget__h13125 =
	     crs_crf_19_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_19_register ;
  assign x_wget__h13763 =
	     crs_crf_20_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_20_register ;
  assign x_wget__h14407 =
	     crs_crf_21_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_21_register ;
  assign x_wget__h15049 =
	     crs_crf_22_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_22_register ;
  assign x_wget__h1569 =
	     crs_crf_1_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_1_register ;
  assign x_wget__h15691 =
	     crs_crf_23_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_23_register ;
  assign x_wget__h16333 =
	     crs_crf_24_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_24_register ;
  assign x_wget__h16975 =
	     crs_crf_25_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_25_register ;
  assign x_wget__h17617 =
	     crs_crf_26_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_26_register ;
  assign x_wget__h18259 =
	     crs_crf_27_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_27_register ;
  assign x_wget__h18901 =
	     crs_crf_28_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_28_register ;
  assign x_wget__h19543 =
	     crs_crf_29_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_29_register ;
  assign x_wget__h20185 =
	     crs_crf_30_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_30_register ;
  assign x_wget__h20827 =
	     crs_crf_31_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_31_register ;
  assign x_wget__h21514 =
	     MUX_epoch_readBeforeLaterWrites_1_write_1__SEL_1 ?
	       MUX_npc_port_1_wset_1__VAL_1 :
	       MUX_npc_port_1_wset_1__VAL_2 ;
  assign x_wget__h2211 =
	     crs_crf_2_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_2_register ;
  assign x_wget__h22121 =
	     MUX_epoch_readBeforeLaterWrites_1_write_1__SEL_1 ?
	       MUX_epoch_port_1_wset_1__VAL_1 :
	       MUX_epoch_port_1_wset_1__VAL_2 ;
  assign x_wget__h26136 =
	     fetch_pc_readBeforeLaterWrites_0_Q_OUT ?
	       x__h27838 :
	       fetch_pc_register ;
  assign x_wget__h26185 =
	     MUX_fetch_epoch_port_1_wset_1__SEL_1 ?
	       MUX_fetch_pc_port_1_wset_1__VAL_1 :
	       MUX_fetch_pc_port_1_wset_1__VAL_2 ;
  assign x_wget__h26792 =
	     MUX_fetch_epoch_port_1_wset_1__SEL_1 ?
	       MUX_fetch_epoch_port_1_wset_1__VAL_1 :
	       MUX_fetch_epoch_port_1_wset_1__VAL_2 ;
  assign x_wget__h2853 =
	     crs_crf_3_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_3_register ;
  assign x_wget__h3495 =
	     crs_crf_4_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_4_register ;
  assign x_wget__h4137 =
	     crs_crf_5_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_5_register ;
  assign x_wget__h4779 =
	     crs_crf_6_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_6_register ;
  assign x_wget__h4828 =
	     crs_crf_6_readBeforeLaterWrites_1_Q_OUT ?
	       npc_register :
	       def__h5089 ;
  assign x_wget__h5421 =
	     crs_crf_7_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_7_register ;
  assign x_wget__h6063 =
	     crs_crf_8_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_8_register ;
  assign x_wget__h6705 =
	     crs_crf_9_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_9_register ;
  assign x_wget__h7347 =
	     crs_crf_10_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_10_register ;
  assign x_wget__h7989 =
	     crs_crf_11_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_11_register ;
  assign x_wget__h8631 =
	     crs_crf_12_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_12_register ;
  assign x_wget__h927 =
	     crs_crf_0_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_0_register ;
  assign x_wget__h9273 =
	     crs_crf_13_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_13_register ;
  assign x_wget__h976 =
	     crs_crf_0_readBeforeLaterWrites_1_Q_OUT ?
	       x__h117721 :
	       def__h1237 ;
  assign x_wget__h9915 =
	     crs_crf_14_readBeforeLaterWrites_0_Q_OUT ?
	       val__h119412 :
	       crs_crf_14_register ;
  assign y__h104122 = decode_decodeWord_D_OUT[29:28] != 2'd0 ;
  assign y__h104124 = ~decode_decodeWord_D_OUT[30] ;
  assign y__h111958 = d2e_D_OUT[98:67] | y__h115163 ;
  assign y__h115163 =
	     (d2e_D_OUT[104:102] == 3'b001) ?
	       op2__h105759 :
	       { imm__h105754[15:0], 16'h0 } ;
  always@(e2w_D_OUT or
	  mdu_results_D_OUT or
	  mu_results_D_OUT or bu_results_D_OUT or alu_results_D_OUT)
  begin
    case (e2w_D_OUT[5:3])
      3'd0: val__h119412 = mu_results_D_OUT[36:5];
      3'd1: val__h119412 = bu_results_D_OUT[36:5];
      3'd2: val__h119412 = alu_results_D_OUT[36:5];
      default: val__h119412 = mdu_results_D_OUT[36:5];
    endcase
  end
  always@(d2e_D_OUT or
	  crs_crf_0_register or
	  crs_crf_1_register or
	  crs_crf_2_register or
	  crs_crf_3_register or
	  crs_crf_4_register or
	  crs_crf_5_register or
	  crs_crf_6_register or
	  crs_crf_7_register or
	  crs_crf_8_register or
	  crs_crf_9_register or
	  crs_crf_10_register or
	  crs_crf_11_register or
	  crs_crf_12_register or
	  crs_crf_13_register or
	  crs_crf_14_register or
	  crs_crf_15_register or
	  crs_crf_16_register or
	  crs_crf_17_register or
	  crs_crf_18_register or
	  crs_crf_19_register or
	  crs_crf_20_register or
	  crs_crf_21_register or
	  crs_crf_22_register or
	  crs_crf_23_register or
	  crs_crf_24_register or
	  crs_crf_25_register or
	  crs_crf_26_register or
	  crs_crf_27_register or
	  crs_crf_28_register or
	  crs_crf_29_register or crs_crf_30_register or crs_crf_31_register)
  begin
    case (d2e_D_OUT[122:118])
      5'd0: data___1__h105850 = crs_crf_0_register;
      5'd1: data___1__h105850 = crs_crf_1_register;
      5'd2: data___1__h105850 = crs_crf_2_register;
      5'd3: data___1__h105850 = crs_crf_3_register;
      5'd4: data___1__h105850 = crs_crf_4_register;
      5'd5: data___1__h105850 = crs_crf_5_register;
      5'd6: data___1__h105850 = crs_crf_6_register;
      5'd7: data___1__h105850 = crs_crf_7_register;
      5'd8: data___1__h105850 = crs_crf_8_register;
      5'd9: data___1__h105850 = crs_crf_9_register;
      5'd10: data___1__h105850 = crs_crf_10_register;
      5'd11: data___1__h105850 = crs_crf_11_register;
      5'd12: data___1__h105850 = crs_crf_12_register;
      5'd13: data___1__h105850 = crs_crf_13_register;
      5'd14: data___1__h105850 = crs_crf_14_register;
      5'd15: data___1__h105850 = crs_crf_15_register;
      5'd16: data___1__h105850 = crs_crf_16_register;
      5'd17: data___1__h105850 = crs_crf_17_register;
      5'd18: data___1__h105850 = crs_crf_18_register;
      5'd19: data___1__h105850 = crs_crf_19_register;
      5'd20: data___1__h105850 = crs_crf_20_register;
      5'd21: data___1__h105850 = crs_crf_21_register;
      5'd22: data___1__h105850 = crs_crf_22_register;
      5'd23: data___1__h105850 = crs_crf_23_register;
      5'd24: data___1__h105850 = crs_crf_24_register;
      5'd25: data___1__h105850 = crs_crf_25_register;
      5'd26: data___1__h105850 = crs_crf_26_register;
      5'd27: data___1__h105850 = crs_crf_27_register;
      5'd28: data___1__h105850 = crs_crf_28_register;
      5'd29: data___1__h105850 = crs_crf_29_register;
      5'd30: data___1__h105850 = crs_crf_30_register;
      5'd31: data___1__h105850 = crs_crf_31_register;
    endcase
  end
  always@(idx__h116186 or
	  crs_crf_0_register or
	  crs_crf_1_register or
	  crs_crf_2_register or
	  crs_crf_3_register or
	  crs_crf_4_register or
	  crs_crf_5_register or
	  crs_crf_6_register or
	  crs_crf_7_register or
	  crs_crf_8_register or
	  crs_crf_9_register or
	  crs_crf_10_register or
	  crs_crf_11_register or
	  crs_crf_12_register or
	  crs_crf_13_register or
	  crs_crf_14_register or
	  crs_crf_15_register or
	  crs_crf_16_register or
	  crs_crf_17_register or
	  crs_crf_18_register or
	  crs_crf_19_register or
	  crs_crf_20_register or
	  crs_crf_21_register or
	  crs_crf_22_register or
	  crs_crf_23_register or
	  crs_crf_24_register or
	  crs_crf_25_register or
	  crs_crf_26_register or
	  crs_crf_27_register or
	  crs_crf_28_register or
	  crs_crf_29_register or crs_crf_30_register or crs_crf_31_register)
  begin
    case (idx__h116186)
      5'd0: pc__h116027 = crs_crf_0_register;
      5'd1: pc__h116027 = crs_crf_1_register;
      5'd2: pc__h116027 = crs_crf_2_register;
      5'd3: pc__h116027 = crs_crf_3_register;
      5'd4: pc__h116027 = crs_crf_4_register;
      5'd5: pc__h116027 = crs_crf_5_register;
      5'd6: pc__h116027 = crs_crf_6_register;
      5'd7: pc__h116027 = crs_crf_7_register;
      5'd8: pc__h116027 = crs_crf_8_register;
      5'd9: pc__h116027 = crs_crf_9_register;
      5'd10: pc__h116027 = crs_crf_10_register;
      5'd11: pc__h116027 = crs_crf_11_register;
      5'd12: pc__h116027 = crs_crf_12_register;
      5'd13: pc__h116027 = crs_crf_13_register;
      5'd14: pc__h116027 = crs_crf_14_register;
      5'd15: pc__h116027 = crs_crf_15_register;
      5'd16: pc__h116027 = crs_crf_16_register;
      5'd17: pc__h116027 = crs_crf_17_register;
      5'd18: pc__h116027 = crs_crf_18_register;
      5'd19: pc__h116027 = crs_crf_19_register;
      5'd20: pc__h116027 = crs_crf_20_register;
      5'd21: pc__h116027 = crs_crf_21_register;
      5'd22: pc__h116027 = crs_crf_22_register;
      5'd23: pc__h116027 = crs_crf_23_register;
      5'd24: pc__h116027 = crs_crf_24_register;
      5'd25: pc__h116027 = crs_crf_25_register;
      5'd26: pc__h116027 = crs_crf_26_register;
      5'd27: pc__h116027 = crs_crf_27_register;
      5'd28: pc__h116027 = crs_crf_28_register;
      5'd29: pc__h116027 = crs_crf_29_register;
      5'd30: pc__h116027 = crs_crf_30_register;
      5'd31: pc__h116027 = crs_crf_31_register;
    endcase
  end
  always@(d2e_D_OUT or pc__h116027 or pc_add__h115519 or pc__h116025)
  begin
    case (d2e_D_OUT[104:102])
      3'b0, 3'b101: x__h115931 = pc_add__h115519;
      3'b110, 3'b111: x__h115931 = pc__h116025;
      default: x__h115931 = pc__h116027;
    endcase
  end
  always@(decode_decodeWord_D_OUT)
  begin
    case (decode_decodeWord_D_OUT[2:0])
      3'b0:
	  IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1345 =
	      decode_decodeWord_D_OUT[5:3] == 3'b111;
      3'b010:
	  IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1345 =
	      decode_decodeWord_D_OUT[5:3] == 3'b111 ||
	      decode_decodeWord_D_OUT[5:3] == 3'b110 ||
	      decode_decodeWord_D_OUT[5:3] == 3'b101 ||
	      decode_decodeWord_D_OUT[5:3] == 3'b011 ||
	      decode_decodeWord_D_OUT[5:3] == 3'b010 ||
	      decode_decodeWord_D_OUT[5:3] == 3'b001;
      3'b011:
	  IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1345 =
	      decode_decodeWord_D_OUT[5:3] == 3'b111 ||
	      decode_decodeWord_D_OUT[5:3] == 3'b110 ||
	      decode_decodeWord_D_OUT[5:3] == 3'b101;
      default: IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1345 =
		   decode_decodeWord_D_OUT[2:0] == 3'b001 &&
		   (decode_decodeWord_D_OUT[5:3] == 3'b111 ||
		    ((decode_decodeWord_D_OUT[5:3] == 3'b110) ?
		       decode_decodeWord_D_OUT[31:28] == 4'b0011 ||
		       decode_decodeWord_D_OUT[31:28] == 4'b0010 ||
		       decode_decodeWord_D_OUT[31:28] == 4'b1111 ||
		       decode_decodeWord_D_OUT[31:28] == 4'b1101 ||
		       decode_decodeWord_D_OUT[31:28] == 4'b1100 ||
		       decode_decodeWord_D_OUT[31:28] == 4'b1011 ||
		       decode_decodeWord_D_OUT[31:28] == 4'b0001 ||
		       decode_decodeWord_D_OUT[31:28] == 4'b0 :
		       decode_decodeWord_D_OUT[5:3] == 3'b101 &&
		       (decode_decodeWord_D_OUT[31:28] == 4'b1111 ||
			decode_decodeWord_D_OUT[31:28] == 4'b1110 ||
			decode_decodeWord_D_OUT[31:28] == 4'b1100 ||
			decode_decodeWord_D_OUT[31:28] == 4'b1011)));
    endcase
  end
  always@(decode_decodeWord_D_OUT)
  begin
    case (decode_decodeWord_D_OUT[5:3])
      3'b110, 3'b111:
	  CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b110_ETC__q2 =
	      decode_decodeWord_D_OUT[15:11];
      default: CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b110_ETC__q2 =
		   decode_decodeWord_D_OUT[15:11];
    endcase
  end
  always@(decode_decodeWord_D_OUT or
	  CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b110_ETC__q2)
  begin
    case (decode_decodeWord_D_OUT[2:0])
      3'b0, 3'b011, 3'b100:
	  IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1398 =
	      decode_decodeWord_D_OUT[15:11];
      3'b010, 3'b101:
	  IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1398 =
	      decode_decodeWord_D_OUT[10:6];
      default: IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1398 =
		   CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b110_ETC__q2;
    endcase
  end
  always@(rs1__h100489 or
	  decode_sc_ready_0_register or
	  decode_sc_ready_1_register or
	  decode_sc_ready_2_register or
	  decode_sc_ready_3_register or
	  decode_sc_ready_4_register or
	  decode_sc_ready_5_register or
	  decode_sc_ready_6_register or
	  decode_sc_ready_7_register or
	  decode_sc_ready_8_register or
	  decode_sc_ready_9_register or
	  decode_sc_ready_10_register or
	  decode_sc_ready_11_register or
	  decode_sc_ready_12_register or
	  decode_sc_ready_13_register or
	  decode_sc_ready_14_register or
	  decode_sc_ready_15_register or
	  decode_sc_ready_16_register or
	  decode_sc_ready_17_register or
	  decode_sc_ready_18_register or
	  decode_sc_ready_19_register or
	  decode_sc_ready_20_register or
	  decode_sc_ready_21_register or
	  decode_sc_ready_22_register or
	  decode_sc_ready_23_register or
	  decode_sc_ready_24_register or
	  decode_sc_ready_25_register or
	  decode_sc_ready_26_register or
	  decode_sc_ready_27_register or
	  decode_sc_ready_28_register or
	  decode_sc_ready_29_register or
	  decode_sc_ready_30_register or decode_sc_ready_31_register)
  begin
    case (rs1__h100489)
      5'd0:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_0_register;
      5'd1:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_1_register;
      5'd2:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_2_register;
      5'd3:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_3_register;
      5'd4:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_4_register;
      5'd5:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_5_register;
      5'd6:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_6_register;
      5'd7:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_7_register;
      5'd8:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_8_register;
      5'd9:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_9_register;
      5'd10:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_10_register;
      5'd11:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_11_register;
      5'd12:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_12_register;
      5'd13:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_13_register;
      5'd14:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_14_register;
      5'd15:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_15_register;
      5'd16:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_16_register;
      5'd17:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_17_register;
      5'd18:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_18_register;
      5'd19:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_19_register;
      5'd20:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_20_register;
      5'd21:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_21_register;
      5'd22:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_22_register;
      5'd23:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_23_register;
      5'd24:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_24_register;
      5'd25:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_25_register;
      5'd26:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_26_register;
      5'd27:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_27_register;
      5'd28:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_28_register;
      5'd29:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_29_register;
      5'd30:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_30_register;
      5'd31:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1470 =
	      decode_sc_ready_31_register;
    endcase
  end
  always@(rs2__h100491 or
	  decode_sc_ready_0_register or
	  decode_sc_ready_1_register or
	  decode_sc_ready_2_register or
	  decode_sc_ready_3_register or
	  decode_sc_ready_4_register or
	  decode_sc_ready_5_register or
	  decode_sc_ready_6_register or
	  decode_sc_ready_7_register or
	  decode_sc_ready_8_register or
	  decode_sc_ready_9_register or
	  decode_sc_ready_10_register or
	  decode_sc_ready_11_register or
	  decode_sc_ready_12_register or
	  decode_sc_ready_13_register or
	  decode_sc_ready_14_register or
	  decode_sc_ready_15_register or
	  decode_sc_ready_16_register or
	  decode_sc_ready_17_register or
	  decode_sc_ready_18_register or
	  decode_sc_ready_19_register or
	  decode_sc_ready_20_register or
	  decode_sc_ready_21_register or
	  decode_sc_ready_22_register or
	  decode_sc_ready_23_register or
	  decode_sc_ready_24_register or
	  decode_sc_ready_25_register or
	  decode_sc_ready_26_register or
	  decode_sc_ready_27_register or
	  decode_sc_ready_28_register or
	  decode_sc_ready_29_register or
	  decode_sc_ready_30_register or decode_sc_ready_31_register)
  begin
    case (rs2__h100491)
      5'd0:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_0_register;
      5'd1:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_1_register;
      5'd2:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_2_register;
      5'd3:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_3_register;
      5'd4:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_4_register;
      5'd5:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_5_register;
      5'd6:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_6_register;
      5'd7:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_7_register;
      5'd8:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_8_register;
      5'd9:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_9_register;
      5'd10:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_10_register;
      5'd11:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_11_register;
      5'd12:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_12_register;
      5'd13:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_13_register;
      5'd14:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_14_register;
      5'd15:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_15_register;
      5'd16:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_16_register;
      5'd17:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_17_register;
      5'd18:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_18_register;
      5'd19:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_19_register;
      5'd20:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_20_register;
      5'd21:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_21_register;
      5'd22:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_22_register;
      5'd23:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_23_register;
      5'd24:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_24_register;
      5'd25:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_25_register;
      5'd26:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_26_register;
      5'd27:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_27_register;
      5'd28:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_28_register;
      5'd29:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_29_register;
      5'd30:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_30_register;
      5'd31:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1489 =
	      decode_sc_ready_31_register;
    endcase
  end
  always@(rs3__h100493 or
	  decode_sc_ready_0_register or
	  decode_sc_ready_1_register or
	  decode_sc_ready_2_register or
	  decode_sc_ready_3_register or
	  decode_sc_ready_4_register or
	  decode_sc_ready_5_register or
	  decode_sc_ready_6_register or
	  decode_sc_ready_7_register or
	  decode_sc_ready_8_register or
	  decode_sc_ready_9_register or
	  decode_sc_ready_10_register or
	  decode_sc_ready_11_register or
	  decode_sc_ready_12_register or
	  decode_sc_ready_13_register or
	  decode_sc_ready_14_register or
	  decode_sc_ready_15_register or
	  decode_sc_ready_16_register or
	  decode_sc_ready_17_register or
	  decode_sc_ready_18_register or
	  decode_sc_ready_19_register or
	  decode_sc_ready_20_register or
	  decode_sc_ready_21_register or
	  decode_sc_ready_22_register or
	  decode_sc_ready_23_register or
	  decode_sc_ready_24_register or
	  decode_sc_ready_25_register or
	  decode_sc_ready_26_register or
	  decode_sc_ready_27_register or
	  decode_sc_ready_28_register or
	  decode_sc_ready_29_register or
	  decode_sc_ready_30_register or decode_sc_ready_31_register)
  begin
    case (rs3__h100493)
      5'd0:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_0_register;
      5'd1:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_1_register;
      5'd2:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_2_register;
      5'd3:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_3_register;
      5'd4:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_4_register;
      5'd5:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_5_register;
      5'd6:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_6_register;
      5'd7:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_7_register;
      5'd8:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_8_register;
      5'd9:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_9_register;
      5'd10:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_10_register;
      5'd11:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_11_register;
      5'd12:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_12_register;
      5'd13:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_13_register;
      5'd14:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_14_register;
      5'd15:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_15_register;
      5'd16:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_16_register;
      5'd17:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_17_register;
      5'd18:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_18_register;
      5'd19:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_19_register;
      5'd20:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_20_register;
      5'd21:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_21_register;
      5'd22:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_22_register;
      5'd23:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_23_register;
      5'd24:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_24_register;
      5'd25:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_25_register;
      5'd26:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_26_register;
      5'd27:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_27_register;
      5'd28:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_28_register;
      5'd29:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_29_register;
      5'd30:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_30_register;
      5'd31:
	  SEL_ARR_IF_decode_sc_ready_0_readBeforeLaterWr_ETC___d1520 =
	      decode_sc_ready_31_register;
    endcase
  end
  always@(decode_decodeWord_D_OUT or
	  decode_decodeWord_first__295_BIT_31_578_AND_IN_ETC___d1585)
  begin
    case (decode_decodeWord_D_OUT[5:3])
      3'b110:
	  IF_decode_decodeWord_first__295_BITS_5_TO_3_30_ETC___d1589 =
	      decode_decodeWord_D_OUT[31:28] == 4'b1111 ||
	      decode_decodeWord_D_OUT[31:28] == 4'b1011 ||
	      decode_decodeWord_D_OUT[31:28] == 4'b1101 ||
	      decode_decodeWord_D_OUT[31:28] == 4'b1100;
      3'b111:
	  IF_decode_decodeWord_first__295_BITS_5_TO_3_30_ETC___d1589 =
	      !decode_decodeWord_first__295_BIT_31_578_AND_IN_ETC___d1585;
      default: IF_decode_decodeWord_first__295_BITS_5_TO_3_30_ETC___d1589 =
		   decode_decodeWord_D_OUT[5:3] == 3'b101 &&
		   decode_decodeWord_D_OUT[31:28] == 4'b1111;
    endcase
  end
  always@(decode_decodeWord_D_OUT)
  begin
    case (decode_decodeWord_D_OUT[5:3])
      3'b110, 3'b111:
	  CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b110_ETC__q3 =
	      decode_decodeWord_D_OUT[10:6];
      default: CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b110_ETC__q3 =
		   decode_decodeWord_D_OUT[10:6];
    endcase
  end
  always@(decode_decodeWord_D_OUT or
	  CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b110_ETC__q3)
  begin
    case (decode_decodeWord_D_OUT[2:0])
      3'b0, 3'b111:
	  IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1610 = 5'd31;
      3'b011, 3'b100:
	  IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1610 =
	      decode_decodeWord_D_OUT[10:6];
      default: IF_decode_decodeWord_first__295_BITS_2_TO_0_29_ETC___d1610 =
		   CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b110_ETC__q3;
    endcase
  end
  always@(decode_decodeWord_D_OUT or
	  decode_decodeWord_first__295_BIT_31_578_AND_IN_ETC___d1585)
  begin
    case (decode_decodeWord_D_OUT[5:3])
      3'b110:
	  CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b110_ETC__q4 =
	      decode_decodeWord_D_OUT[31:28] != 4'b1111 &&
	      decode_decodeWord_D_OUT[31:28] != 4'b1011 &&
	      decode_decodeWord_D_OUT[31:28] != 4'b1101 &&
	      decode_decodeWord_D_OUT[31:28] != 4'b1100;
      3'b111:
	  CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b110_ETC__q4 =
	      decode_decodeWord_first__295_BIT_31_578_AND_IN_ETC___d1585;
      default: CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b110_ETC__q4 =
		   decode_decodeWord_D_OUT[5:3] != 3'b101 ||
		   decode_decodeWord_D_OUT[31:28] != 4'b1111;
    endcase
  end
  always@(decode_decodeWord_D_OUT)
  begin
    case (decode_decodeWord_D_OUT[2:0])
      3'b0:
	  CASE_decode_decodeWordD_OUT_BITS_2_TO_0_0b0_N_ETC__q5 =
	      decode_decodeWord_D_OUT[5:3] != 3'b111;
      3'b010:
	  CASE_decode_decodeWordD_OUT_BITS_2_TO_0_0b0_N_ETC__q5 =
	      decode_decodeWord_D_OUT[5:3] != 3'b111 &&
	      decode_decodeWord_D_OUT[5:3] != 3'b110 &&
	      decode_decodeWord_D_OUT[5:3] != 3'b101 &&
	      decode_decodeWord_D_OUT[5:3] != 3'b011 &&
	      decode_decodeWord_D_OUT[5:3] != 3'b010 &&
	      decode_decodeWord_D_OUT[5:3] != 3'b001;
      3'b011:
	  CASE_decode_decodeWordD_OUT_BITS_2_TO_0_0b0_N_ETC__q5 =
	      decode_decodeWord_D_OUT[5:3] != 3'b111 &&
	      decode_decodeWord_D_OUT[5:3] != 3'b110 &&
	      decode_decodeWord_D_OUT[5:3] != 3'b101;
      default: CASE_decode_decodeWordD_OUT_BITS_2_TO_0_0b0_N_ETC__q5 =
		   decode_decodeWord_D_OUT[2:0] != 3'b001 ||
		   decode_decodeWord_D_OUT[5:3] != 3'b111 &&
		   ((decode_decodeWord_D_OUT[5:3] == 3'b110) ?
		      decode_decodeWord_D_OUT[31:28] != 4'b0011 &&
		      decode_decodeWord_D_OUT[31:28] != 4'b0010 &&
		      decode_decodeWord_D_OUT[31:28] != 4'b1111 &&
		      decode_decodeWord_D_OUT[31:28] != 4'b1101 &&
		      decode_decodeWord_D_OUT[31:28] != 4'b1100 &&
		      decode_decodeWord_D_OUT[31:28] != 4'b1011 &&
		      decode_decodeWord_D_OUT[31:28] != 4'b0001 &&
		      decode_decodeWord_D_OUT[31:28] != 4'b0 :
		      decode_decodeWord_D_OUT[5:3] != 3'b101 ||
		      decode_decodeWord_D_OUT[31:28] != 4'b1111 &&
		      decode_decodeWord_D_OUT[31:28] != 4'b1110 &&
		      decode_decodeWord_D_OUT[31:28] != 4'b1100 &&
		      decode_decodeWord_D_OUT[31:28] != 4'b1011);
    endcase
  end
  always@(d2e_D_OUT or
	  mdu_reqs_FULL_N or
	  mu_barrier or
	  mu_reqs_rv or
	  NOT_IF_fetch_epoch_readBeforeLaterWrites_0_rea_ETC___d1713 or
	  alu_results_FULL_N)
  begin
    case (d2e_D_OUT[101:99])
      3'd0:
	  IF_d2e_first__678_BITS_101_TO_99_692_EQ_0_693__ETC___d1720 =
	      !mu_barrier && (d2e_D_OUT[135] || !mu_reqs_rv[129]);
      3'd1:
	  IF_d2e_first__678_BITS_101_TO_99_692_EQ_0_693__ETC___d1720 =
	      NOT_IF_fetch_epoch_readBeforeLaterWrites_0_rea_ETC___d1713;
      3'd2:
	  IF_d2e_first__678_BITS_101_TO_99_692_EQ_0_693__ETC___d1720 =
	      alu_results_FULL_N;
      default: IF_d2e_first__678_BITS_101_TO_99_692_EQ_0_693__ETC___d1720 =
		   d2e_D_OUT[101:99] != 3'd4 || mdu_reqs_FULL_N;
    endcase
  end
  always@(d2e_D_OUT or d2eD_OUT_BITS_66_TO_35_BITS_31_TO_1__q7)
  begin
    case (d2e_D_OUT[129:128])
      2'b0:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_d2eD_OUT_B_ETC__q8 =
	      { d2e_D_OUT[65:35], 1'd0 };
      2'b01:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_d2eD_OUT_B_ETC__q8 =
	      { 1'd0, d2e_D_OUT[66:36] };
      2'b10:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_d2eD_OUT_B_ETC__q8 =
	      { d2eD_OUT_BITS_66_TO_35_BITS_31_TO_1__q7[30],
		d2eD_OUT_BITS_66_TO_35_BITS_31_TO_1__q7 };
      2'd3:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_d2eD_OUT_B_ETC__q8 =
	      { d2e_D_OUT[35], d2e_D_OUT[66:36] };
    endcase
  end
  always@(d2e_D_OUT or
	  temp0__h111201 or d2eD_OUT_BITS_66_TO_35_BITS_31_TO_2__q9)
  begin
    case (d2e_D_OUT[129:128])
      2'b0:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp011201__ETC__q10 =
	      { temp0__h111201[29:0], 2'd0 };
      2'b01:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp011201__ETC__q10 =
	      { 2'd0, temp0__h111201[31:2] };
      2'b10:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp011201__ETC__q10 =
	      { {2{d2eD_OUT_BITS_66_TO_35_BITS_31_TO_2__q9[29]}},
		d2eD_OUT_BITS_66_TO_35_BITS_31_TO_2__q9 };
      2'd3:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp011201__ETC__q10 =
	      { temp0__h111201[1:0], temp0__h111201[31:2] };
    endcase
  end
  always@(d2e_D_OUT or
	  temp1__h111202 or d2eD_OUT_BITS_66_TO_35_BITS_31_TO_4__q11)
  begin
    case (d2e_D_OUT[129:128])
      2'b0:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp111202__ETC__q12 =
	      { temp1__h111202[27:0], 4'd0 };
      2'b01:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp111202__ETC__q12 =
	      { 4'd0, temp1__h111202[31:4] };
      2'b10:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp111202__ETC__q12 =
	      { {4{d2eD_OUT_BITS_66_TO_35_BITS_31_TO_4__q11[27]}},
		d2eD_OUT_BITS_66_TO_35_BITS_31_TO_4__q11 };
      2'd3:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp111202__ETC__q12 =
	      { temp1__h111202[3:0], temp1__h111202[31:4] };
    endcase
  end
  always@(d2e_D_OUT or
	  temp2__h111203 or d2eD_OUT_BITS_66_TO_35_BITS_31_TO_8__q13)
  begin
    case (d2e_D_OUT[129:128])
      2'b0:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp211203__ETC__q14 =
	      { temp2__h111203[23:0], 8'd0 };
      2'b01:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp211203__ETC__q14 =
	      { 8'd0, temp2__h111203[31:8] };
      2'b10:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp211203__ETC__q14 =
	      { {8{d2eD_OUT_BITS_66_TO_35_BITS_31_TO_8__q13[23]}},
		d2eD_OUT_BITS_66_TO_35_BITS_31_TO_8__q13 };
      2'd3:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp211203__ETC__q14 =
	      { temp2__h111203[7:0], temp2__h111203[31:8] };
    endcase
  end
  always@(d2e_D_OUT or
	  temp3__h111204 or d2eD_OUT_BITS_66_TO_35_BITS_31_TO_16__q15)
  begin
    case (d2e_D_OUT[129:128])
      2'b0:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp311204__ETC__q16 =
	      { temp3__h111204[15:0], 16'd0 };
      2'b01:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp311204__ETC__q16 =
	      { 16'd0, temp3__h111204[31:16] };
      2'b10:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp311204__ETC__q16 =
	      { {16{d2eD_OUT_BITS_66_TO_35_BITS_31_TO_16__q15[15]}},
		d2eD_OUT_BITS_66_TO_35_BITS_31_TO_16__q15 };
      2'd3:
	  CASE_d2eD_OUT_BITS_129_TO_128_0b0_temp311204__ETC__q16 =
	      { temp3__h111204[7:0], temp3__h111204[31:8] };
    endcase
  end
  always@(aluOp__h105760 or
	  IF_IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b_ETC___d2005 or
	  d2e_D_OUT or op2__h105759 or x__h111928 or x__h111921)
  begin
    case (aluOp__h105760)
      3'd0:
	  IF_IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b_ETC___d2012 =
	      IF_IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b_ETC___d2005;
      3'b001:
	  IF_IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b_ETC___d2012 =
	      d2e_D_OUT[98:67] | op2__h105759;
      3'b010:
	  IF_IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b_ETC___d2012 =
	      d2e_D_OUT[98:67] ^ op2__h105759;
      3'b011:
	  IF_IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b_ETC___d2012 =
	      d2e_D_OUT[98:67] & op2__h105759;
      3'b100:
	  IF_IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b_ETC___d2012 =
	      { 31'd0, x__h111928 };
      3'b101:
	  IF_IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b_ETC___d2012 =
	      { 31'd0, x__h111921 };
      3'b110:
	  IF_IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b_ETC___d2012 =
	      d2e_D_OUT[98:67] - op2__h105759;
      3'b111:
	  IF_IF_d2e_first__678_BITS_104_TO_102_736_EQ_0b_ETC___d2012 =
	      d2e_D_OUT[98:67] + op2__h105759;
    endcase
  end
  always@(d2e_D_OUT)
  begin
    case (d2e_D_OUT[107:105])
      3'd0:
	  IF_d2e_first__678_BITS_107_TO_105_745_EQ_0b111_ETC___d2044 =
	      d2e_D_OUT[67];
      3'b001:
	  IF_d2e_first__678_BITS_107_TO_105_745_EQ_0b111_ETC___d2044 =
	      !d2e_D_OUT[67];
      3'b010:
	  IF_d2e_first__678_BITS_107_TO_105_745_EQ_0b111_ETC___d2044 =
	      !d2e_D_OUT[98];
      3'b011:
	  IF_d2e_first__678_BITS_107_TO_105_745_EQ_0b111_ETC___d2044 =
	      d2e_D_OUT[98] || d2e_D_OUT[98:67] == 32'd0;
      3'b100:
	  IF_d2e_first__678_BITS_107_TO_105_745_EQ_0b111_ETC___d2044 =
	      !d2e_D_OUT[98] && d2e_D_OUT[98:67] != 32'd0;
      3'b101:
	  IF_d2e_first__678_BITS_107_TO_105_745_EQ_0b111_ETC___d2044 =
	      d2e_D_OUT[98];
      3'b110:
	  IF_d2e_first__678_BITS_107_TO_105_745_EQ_0b111_ETC___d2044 =
	      d2e_D_OUT[98:67] != 32'd0;
      3'b111:
	  IF_d2e_first__678_BITS_107_TO_105_745_EQ_0b111_ETC___d2044 =
	      d2e_D_OUT[98:67] == 32'd0;
    endcase
  end
  always@(e2w_D_OUT or
	  IF_e2w_i_notEmpty__133_AND_e2w_first__134_BITS_ETC___d2154 or
	  mu_results_EMPTY_N or bu_results_EMPTY_N or bu_redirs_EMPTY_N)
  begin
    case (e2w_D_OUT[5:3])
      3'd0:
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2156 =
	      mu_results_EMPTY_N;
      3'd1:
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2156 =
	      bu_results_EMPTY_N && bu_redirs_EMPTY_N;
      default: IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2156 =
		   IF_e2w_i_notEmpty__133_AND_e2w_first__134_BITS_ETC___d2154;
    endcase
  end
  always@(e2w_D_OUT or
	  IF_e2w_i_notEmpty__133_AND_e2w_first__134_BITS_ETC___d2154 or
	  mu_results_EMPTY_N or bu_results_EMPTY_N)
  begin
    case (e2w_D_OUT[5:3])
      3'd0:
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165 =
	      mu_results_EMPTY_N;
      3'd1:
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165 =
	      bu_results_EMPTY_N;
      default: IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165 =
		   IF_e2w_i_notEmpty__133_AND_e2w_first__134_BITS_ETC___d2154;
    endcase
  end
  always@(e2w_D_OUT or
	  mdu_results_EMPTY_N or
	  mu_results_EMPTY_N or bu_results_EMPTY_N or alu_results_EMPTY_N)
  begin
    case (e2w_D_OUT[5:3])
      3'd0:
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2175 =
	      !mu_results_EMPTY_N;
      3'd1:
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2175 =
	      !bu_results_EMPTY_N;
      3'd2:
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2175 =
	      !alu_results_EMPTY_N;
      default: IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2175 =
		   e2w_D_OUT[5:3] == 3'd4 && !mdu_results_EMPTY_N;
    endcase
  end
  always@(e2w_D_OUT or
	  mdu_results_D_OUT or
	  mu_results_D_OUT or bu_results_D_OUT or alu_results_D_OUT)
  begin
    case (e2w_D_OUT[5:3])
      3'd0:
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2192 =
	      !mu_results_D_OUT[4];
      3'd1:
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2192 =
	      !bu_results_D_OUT[4];
      3'd2:
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2192 =
	      !alu_results_D_OUT[4];
      default: IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2192 =
		   e2w_D_OUT[5:3] != 3'd4 || !mdu_results_D_OUT[4];
    endcase
  end
  always@(e2w_D_OUT or
	  mdu_results_D_OUT or
	  mu_results_D_OUT or bu_results_D_OUT or alu_results_D_OUT)
  begin
    case (e2w_D_OUT[5:3])
      3'd0:
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2201 =
	      mu_results_D_OUT[4];
      3'd1:
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2201 =
	      bu_results_D_OUT[4];
      3'd2:
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2201 =
	      alu_results_D_OUT[4];
      default: IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2201 =
		   e2w_D_OUT[5:3] == 3'd4 && mdu_results_D_OUT[4];
    endcase
  end
  always@(idx__h119589 or
	  crs_crf_0_readBeforeLaterWrites_0_Q_OUT or
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165 or
	  crs_crf_1_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_2_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_3_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_4_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_5_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_6_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_7_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_8_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_9_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_10_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_11_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_12_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_13_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_14_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_15_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_16_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_17_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_18_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_19_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_20_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_21_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_22_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_23_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_24_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_25_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_26_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_27_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_28_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_29_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_30_readBeforeLaterWrites_0_Q_OUT or
	  crs_crf_31_readBeforeLaterWrites_0_Q_OUT)
  begin
    case (idx__h119589)
      5'd0:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_0_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd1:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_1_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd2:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_2_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd3:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_3_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd4:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_4_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd5:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_5_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd6:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_6_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd7:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_7_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd8:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_8_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd9:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_9_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd10:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_10_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd11:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_11_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd12:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_12_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd13:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_13_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd14:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_14_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd15:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_15_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd16:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_16_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd17:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_17_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd18:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_18_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd19:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_19_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd20:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_20_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd21:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_21_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd22:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_22_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd23:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_23_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd24:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_24_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd25:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_25_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd26:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_26_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd27:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_27_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd28:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_28_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd29:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_29_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd30:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_30_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
      5'd31:
	  CASE_IF_e2w_first__134_BITS_37_TO_34_206_EQ_0b_ETC___d2296 =
	      !crs_crf_31_readBeforeLaterWrites_0_Q_OUT ||
	      IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2165;
    endcase
  end
  always@(e2w_D_OUT or
	  mdu_results_D_OUT or
	  mu_results_D_OUT or bu_results_D_OUT or alu_results_D_OUT)
  begin
    case (e2w_D_OUT[5:3])
      3'd0:
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2499 =
	      mu_results_D_OUT[3:0];
      3'd1:
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2499 =
	      bu_results_D_OUT[3:0];
      3'd2:
	  IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2499 =
	      alu_results_D_OUT[3:0];
      default: IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2499 =
		   mdu_results_D_OUT[3:0];
    endcase
  end
  always@(e2w_D_OUT)
  begin
    case (e2w_D_OUT[2:0])
      3'd1: CASE_e2wD_OUT_BITS_2_TO_0_1_9_2_7_8__q17 = 4'd9;
      3'd2: CASE_e2wD_OUT_BITS_2_TO_0_1_9_2_7_8__q17 = 4'd7;
      default: CASE_e2wD_OUT_BITS_2_TO_0_1_9_2_7_8__q17 = 4'd8;
    endcase
  end
  always@(sel__h100051 or
	  IF_f2d_first__263_BIT_0_264_THEN_IF_fromImem_r_ETC___d1277)
  begin
    case (sel__h100051)
      2'd0:
	  SEL_ARR_IF_f2d_first__263_BIT_0_264_THEN_IF_fr_ETC___d1287 =
	      IF_f2d_first__263_BIT_0_264_THEN_IF_fromImem_r_ETC___d1277[31:0];
      2'd1:
	  SEL_ARR_IF_f2d_first__263_BIT_0_264_THEN_IF_fr_ETC___d1287 =
	      IF_f2d_first__263_BIT_0_264_THEN_IF_fromImem_r_ETC___d1277[63:32];
      2'd2:
	  SEL_ARR_IF_f2d_first__263_BIT_0_264_THEN_IF_fr_ETC___d1287 =
	      IF_f2d_first__263_BIT_0_264_THEN_IF_fromImem_r_ETC___d1277[95:64];
      2'd3:
	  SEL_ARR_IF_f2d_first__263_BIT_0_264_THEN_IF_fr_ETC___d1287 =
	      IF_f2d_first__263_BIT_0_264_THEN_IF_fromImem_r_ETC___d1277[127:96];
    endcase
  end
  always@(mu_currBusiness_D_OUT or
	  mem_data__h29446 or data__h29609 or data__h29475)
  begin
    case (mu_currBusiness_D_OUT[3:2])
      2'b10: x_data__h29455 = data__h29609;
      2'b11: x_data__h29455 = data__h29475;
      default: x_data__h29455 = mem_data__h29446;
    endcase
  end
  always@(IF_mu_reqs_rvport1__read_BITS_3_TO_1_EQ_0b1_T_ETC__q19 or
	  byte_en__h30100 or byte_en__h30381)
  begin
    case (IF_mu_reqs_rvport1__read_BITS_3_TO_1_EQ_0b1_T_ETC__q19[1:0])
      2'd0: _theResult___fst__h30098 = 4'd0;
      2'b01: _theResult___fst__h30098 = 4'b1111;
      2'b10: _theResult___fst__h30098 = byte_en__h30100;
      2'b11: _theResult___fst__h30098 = byte_en__h30381;
    endcase
  end
  always@(d2e_D_OUT or result__h115864 or pcPlus4__h115518)
  begin
    case (d2e_D_OUT[104:102])
      3'b0, 3'b111:
	  CASE_d2eD_OUT_BITS_104_TO_102_0b0_pcPlus41551_ETC__q20 =
	      pcPlus4__h115518;
      default: CASE_d2eD_OUT_BITS_104_TO_102_0b0_pcPlus41551_ETC__q20 =
		   result__h115864;
    endcase
  end
  always@(decode_decodeWord_D_OUT)
  begin
    case (decode_decodeWord_D_OUT[31:28])
      4'b1011: CASE_decode_decodeWordD_OUT_BITS_31_TO_28_0b1_ETC__q21 = 3'd1;
      4'b1100: CASE_decode_decodeWordD_OUT_BITS_31_TO_28_0b1_ETC__q21 = 3'd3;
      default: CASE_decode_decodeWordD_OUT_BITS_31_TO_28_0b1_ETC__q21 = 3'd2;
    endcase
  end
  always@(decode_decodeWord_D_OUT)
  begin
    case (decode_decodeWord_D_OUT[31:28])
      4'b0, 4'b0001:
	  CASE_decode_decodeWordD_OUT_BITS_31_TO_28_0b0_ETC__q22 = 3'd2;
      4'b0010, 4'b0011:
	  CASE_decode_decodeWordD_OUT_BITS_31_TO_28_0b0_ETC__q22 = 3'd0;
      4'b1011, 4'b1100, 4'b1101, 4'b1111:
	  CASE_decode_decodeWordD_OUT_BITS_31_TO_28_0b0_ETC__q22 = 3'd4;
      default: CASE_decode_decodeWordD_OUT_BITS_31_TO_28_0b0_ETC__q22 = 3'd2;
    endcase
  end
  always@(decode_decodeWord_D_OUT or
	  CASE_decode_decodeWordD_OUT_BITS_31_TO_28_0b1_ETC__q21 or
	  CASE_decode_decodeWordD_OUT_BITS_31_TO_28_0b0_ETC__q22)
  begin
    case (decode_decodeWord_D_OUT[5:3])
      3'b101:
	  CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b101_ETC__q23 =
	      CASE_decode_decodeWordD_OUT_BITS_31_TO_28_0b1_ETC__q21;
      3'b110:
	  CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b101_ETC__q23 =
	      CASE_decode_decodeWordD_OUT_BITS_31_TO_28_0b0_ETC__q22;
      3'b111:
	  CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b101_ETC__q23 =
	      (decode_decodeWord_D_OUT[31] &
	       decode_decodeWord_D_OUT[30:28] != 3'd0) ?
		3'd0 :
		3'd2;
      default: CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b101_ETC__q23 = 3'd2;
    endcase
  end
  always@(decode_decodeWord_D_OUT or
	  CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b101_ETC__q23)
  begin
    case (decode_decodeWord_D_OUT[2:0])
      3'b0, 3'b101, 3'b110, 3'b111:
	  CASE_decode_decodeWordD_OUT_BITS_2_TO_0_0b0_1_ETC__q24 = 3'd1;
      3'b001:
	  CASE_decode_decodeWordD_OUT_BITS_2_TO_0_0b0_1_ETC__q24 =
	      CASE_decode_decodeWordD_OUT_BITS_5_TO_3_0b101_ETC__q23;
      3'b010, 3'b011:
	  CASE_decode_decodeWordD_OUT_BITS_2_TO_0_0b0_1_ETC__q24 = 3'd0;
      3'b100: CASE_decode_decodeWordD_OUT_BITS_2_TO_0_0b0_1_ETC__q24 = 3'd2;
    endcase
  end
  always@(x__h89109)
  begin
    case (x__h89109)
      2'b0, 2'b11: CASE_x9109_0b0_0_1_15_0b10_1_0b11_0_15__q25 = 4'd0;
      2'd1: CASE_x9109_0b0_0_1_15_0b10_1_0b11_0_15__q25 = 4'd15;
      2'b10: CASE_x9109_0b0_0_1_15_0b10_1_0b11_0_15__q25 = 4'd1;
    endcase
  end
  always@(d2e_D_OUT)
  begin
    case (d2e_D_OUT[133:130])
      4'b1011: CASE_d2eD_OUT_BITS_133_TO_130_0b1011_2_0b1100_ETC__q26 = 2'd2;
      4'b1100, 4'b1101:
	  CASE_d2eD_OUT_BITS_133_TO_130_0b1011_2_0b1100_ETC__q26 = 2'd1;
      default: CASE_d2eD_OUT_BITS_133_TO_130_0b1011_2_0b1100_ETC__q26 = 2'd0;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        busTracker_rv <= `BSV_ASSIGNMENT_DELAY 6'd10;
	crs_crf_0_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_10_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_11_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_12_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_13_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_14_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_15_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_16_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_17_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_18_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_19_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_1_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_20_register <= `BSV_ASSIGNMENT_DELAY 32'd590087;
	crs_crf_21_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_22_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_23_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_24_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_25_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_26_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_27_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_28_register <= `BSV_ASSIGNMENT_DELAY 32'd590087;
	crs_crf_29_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_2_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_30_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_31_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_3_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_4_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_5_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_6_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_7_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_8_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	crs_crf_9_register <= `BSV_ASSIGNMENT_DELAY 32'h0;
	decode_fetchedLine <= `BSV_ASSIGNMENT_DELAY 128'h0;
	decode_inflightCounter <= `BSV_ASSIGNMENT_DELAY 4'd0;
	decode_sc_ready_0_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_10_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_11_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_12_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_13_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_14_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_15_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_16_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_17_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_18_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_19_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_1_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_20_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_21_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_22_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_23_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_24_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_25_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_26_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_27_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_28_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_29_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_2_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_30_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_31_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_3_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_4_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_5_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_6_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_7_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_8_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	decode_sc_ready_9_register <= `BSV_ASSIGNMENT_DELAY 1'd1;
	epoch_register <= `BSV_ASSIGNMENT_DELAY 2'h0;
	exceptions_busy <= `BSV_ASSIGNMENT_DELAY 1'd0;
	exceptions_erReg <= `BSV_ASSIGNMENT_DELAY 4'hA;
	fetch_epoch_register <= `BSV_ASSIGNMENT_DELAY 2'h0;
	fetch_lastImemAddr <= `BSV_ASSIGNMENT_DELAY 28'h0;
	fetch_pc_register <= `BSV_ASSIGNMENT_DELAY 32'hFFFE1000;
	fromDmem_rv <= `BSV_ASSIGNMENT_DELAY 33'h0AAAAAAAA;
	fromImem_rv <= `BSV_ASSIGNMENT_DELAY
	    129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	fsm_state <= `BSV_ASSIGNMENT_DELAY 2'd0;
	globalFlushStall_state <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mdu_b <= `BSV_ASSIGNMENT_DELAY 32'h0;
	mdu_fsm_start_reg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mdu_fsm_start_reg_1 <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mdu_fsm_state_can_overlap <= `BSV_ASSIGNMENT_DELAY 1'd1;
	mdu_fsm_state_fired <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mdu_fsm_state_mkFSMstate <= `BSV_ASSIGNMENT_DELAY 4'd0;
	mdu_op <= `BSV_ASSIGNMENT_DELAY 2'h2;
	mdu_res <= `BSV_ASSIGNMENT_DELAY 32'h0;
	mdu_running <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mdu_rv1 <= `BSV_ASSIGNMENT_DELAY 32'h0;
	mdu_rv2 <= `BSV_ASSIGNMENT_DELAY 32'h0;
	mdu_sign <= `BSV_ASSIGNMENT_DELAY 1'b0;
	mu_barrier <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mu_reqs_rv <= `BSV_ASSIGNMENT_DELAY
	    130'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	mu_storeQueue_rv <= `BSV_ASSIGNMENT_DELAY 67'h2AAAAAAAAAAAAAAAA;
	npc_register <= `BSV_ASSIGNMENT_DELAY 32'hFFFE1000;
      end
    else
      begin
        if (busTracker_rv_EN)
	  busTracker_rv <= `BSV_ASSIGNMENT_DELAY busTracker_rv_D_IN;
	if (crs_crf_0_register_EN)
	  crs_crf_0_register <= `BSV_ASSIGNMENT_DELAY crs_crf_0_register_D_IN;
	if (crs_crf_10_register_EN)
	  crs_crf_10_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_10_register_D_IN;
	if (crs_crf_11_register_EN)
	  crs_crf_11_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_11_register_D_IN;
	if (crs_crf_12_register_EN)
	  crs_crf_12_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_12_register_D_IN;
	if (crs_crf_13_register_EN)
	  crs_crf_13_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_13_register_D_IN;
	if (crs_crf_14_register_EN)
	  crs_crf_14_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_14_register_D_IN;
	if (crs_crf_15_register_EN)
	  crs_crf_15_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_15_register_D_IN;
	if (crs_crf_16_register_EN)
	  crs_crf_16_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_16_register_D_IN;
	if (crs_crf_17_register_EN)
	  crs_crf_17_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_17_register_D_IN;
	if (crs_crf_18_register_EN)
	  crs_crf_18_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_18_register_D_IN;
	if (crs_crf_19_register_EN)
	  crs_crf_19_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_19_register_D_IN;
	if (crs_crf_1_register_EN)
	  crs_crf_1_register <= `BSV_ASSIGNMENT_DELAY crs_crf_1_register_D_IN;
	if (crs_crf_20_register_EN)
	  crs_crf_20_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_20_register_D_IN;
	if (crs_crf_21_register_EN)
	  crs_crf_21_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_21_register_D_IN;
	if (crs_crf_22_register_EN)
	  crs_crf_22_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_22_register_D_IN;
	if (crs_crf_23_register_EN)
	  crs_crf_23_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_23_register_D_IN;
	if (crs_crf_24_register_EN)
	  crs_crf_24_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_24_register_D_IN;
	if (crs_crf_25_register_EN)
	  crs_crf_25_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_25_register_D_IN;
	if (crs_crf_26_register_EN)
	  crs_crf_26_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_26_register_D_IN;
	if (crs_crf_27_register_EN)
	  crs_crf_27_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_27_register_D_IN;
	if (crs_crf_28_register_EN)
	  crs_crf_28_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_28_register_D_IN;
	if (crs_crf_29_register_EN)
	  crs_crf_29_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_29_register_D_IN;
	if (crs_crf_2_register_EN)
	  crs_crf_2_register <= `BSV_ASSIGNMENT_DELAY crs_crf_2_register_D_IN;
	if (crs_crf_30_register_EN)
	  crs_crf_30_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_30_register_D_IN;
	if (crs_crf_31_register_EN)
	  crs_crf_31_register <= `BSV_ASSIGNMENT_DELAY
	      crs_crf_31_register_D_IN;
	if (crs_crf_3_register_EN)
	  crs_crf_3_register <= `BSV_ASSIGNMENT_DELAY crs_crf_3_register_D_IN;
	if (crs_crf_4_register_EN)
	  crs_crf_4_register <= `BSV_ASSIGNMENT_DELAY crs_crf_4_register_D_IN;
	if (crs_crf_5_register_EN)
	  crs_crf_5_register <= `BSV_ASSIGNMENT_DELAY crs_crf_5_register_D_IN;
	if (crs_crf_6_register_EN)
	  crs_crf_6_register <= `BSV_ASSIGNMENT_DELAY crs_crf_6_register_D_IN;
	if (crs_crf_7_register_EN)
	  crs_crf_7_register <= `BSV_ASSIGNMENT_DELAY crs_crf_7_register_D_IN;
	if (crs_crf_8_register_EN)
	  crs_crf_8_register <= `BSV_ASSIGNMENT_DELAY crs_crf_8_register_D_IN;
	if (crs_crf_9_register_EN)
	  crs_crf_9_register <= `BSV_ASSIGNMENT_DELAY crs_crf_9_register_D_IN;
	if (decode_fetchedLine_EN)
	  decode_fetchedLine <= `BSV_ASSIGNMENT_DELAY decode_fetchedLine_D_IN;
	if (decode_inflightCounter_EN)
	  decode_inflightCounter <= `BSV_ASSIGNMENT_DELAY
	      decode_inflightCounter_D_IN;
	if (decode_sc_ready_0_register_EN)
	  decode_sc_ready_0_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_0_register_D_IN;
	if (decode_sc_ready_10_register_EN)
	  decode_sc_ready_10_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_10_register_D_IN;
	if (decode_sc_ready_11_register_EN)
	  decode_sc_ready_11_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_11_register_D_IN;
	if (decode_sc_ready_12_register_EN)
	  decode_sc_ready_12_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_12_register_D_IN;
	if (decode_sc_ready_13_register_EN)
	  decode_sc_ready_13_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_13_register_D_IN;
	if (decode_sc_ready_14_register_EN)
	  decode_sc_ready_14_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_14_register_D_IN;
	if (decode_sc_ready_15_register_EN)
	  decode_sc_ready_15_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_15_register_D_IN;
	if (decode_sc_ready_16_register_EN)
	  decode_sc_ready_16_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_16_register_D_IN;
	if (decode_sc_ready_17_register_EN)
	  decode_sc_ready_17_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_17_register_D_IN;
	if (decode_sc_ready_18_register_EN)
	  decode_sc_ready_18_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_18_register_D_IN;
	if (decode_sc_ready_19_register_EN)
	  decode_sc_ready_19_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_19_register_D_IN;
	if (decode_sc_ready_1_register_EN)
	  decode_sc_ready_1_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_1_register_D_IN;
	if (decode_sc_ready_20_register_EN)
	  decode_sc_ready_20_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_20_register_D_IN;
	if (decode_sc_ready_21_register_EN)
	  decode_sc_ready_21_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_21_register_D_IN;
	if (decode_sc_ready_22_register_EN)
	  decode_sc_ready_22_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_22_register_D_IN;
	if (decode_sc_ready_23_register_EN)
	  decode_sc_ready_23_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_23_register_D_IN;
	if (decode_sc_ready_24_register_EN)
	  decode_sc_ready_24_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_24_register_D_IN;
	if (decode_sc_ready_25_register_EN)
	  decode_sc_ready_25_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_25_register_D_IN;
	if (decode_sc_ready_26_register_EN)
	  decode_sc_ready_26_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_26_register_D_IN;
	if (decode_sc_ready_27_register_EN)
	  decode_sc_ready_27_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_27_register_D_IN;
	if (decode_sc_ready_28_register_EN)
	  decode_sc_ready_28_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_28_register_D_IN;
	if (decode_sc_ready_29_register_EN)
	  decode_sc_ready_29_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_29_register_D_IN;
	if (decode_sc_ready_2_register_EN)
	  decode_sc_ready_2_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_2_register_D_IN;
	if (decode_sc_ready_30_register_EN)
	  decode_sc_ready_30_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_30_register_D_IN;
	if (decode_sc_ready_31_register_EN)
	  decode_sc_ready_31_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_31_register_D_IN;
	if (decode_sc_ready_3_register_EN)
	  decode_sc_ready_3_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_3_register_D_IN;
	if (decode_sc_ready_4_register_EN)
	  decode_sc_ready_4_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_4_register_D_IN;
	if (decode_sc_ready_5_register_EN)
	  decode_sc_ready_5_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_5_register_D_IN;
	if (decode_sc_ready_6_register_EN)
	  decode_sc_ready_6_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_6_register_D_IN;
	if (decode_sc_ready_7_register_EN)
	  decode_sc_ready_7_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_7_register_D_IN;
	if (decode_sc_ready_8_register_EN)
	  decode_sc_ready_8_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_8_register_D_IN;
	if (decode_sc_ready_9_register_EN)
	  decode_sc_ready_9_register <= `BSV_ASSIGNMENT_DELAY
	      decode_sc_ready_9_register_D_IN;
	if (epoch_register_EN)
	  epoch_register <= `BSV_ASSIGNMENT_DELAY epoch_register_D_IN;
	if (exceptions_busy_EN)
	  exceptions_busy <= `BSV_ASSIGNMENT_DELAY exceptions_busy_D_IN;
	if (exceptions_erReg_EN)
	  exceptions_erReg <= `BSV_ASSIGNMENT_DELAY exceptions_erReg_D_IN;
	if (fetch_epoch_register_EN)
	  fetch_epoch_register <= `BSV_ASSIGNMENT_DELAY
	      fetch_epoch_register_D_IN;
	if (fetch_lastImemAddr_EN)
	  fetch_lastImemAddr <= `BSV_ASSIGNMENT_DELAY fetch_lastImemAddr_D_IN;
	if (fetch_pc_register_EN)
	  fetch_pc_register <= `BSV_ASSIGNMENT_DELAY fetch_pc_register_D_IN;
	if (fromDmem_rv_EN)
	  fromDmem_rv <= `BSV_ASSIGNMENT_DELAY fromDmem_rv_D_IN;
	if (fromImem_rv_EN)
	  fromImem_rv <= `BSV_ASSIGNMENT_DELAY fromImem_rv_D_IN;
	if (fsm_state_EN) fsm_state <= `BSV_ASSIGNMENT_DELAY fsm_state_D_IN;
	if (globalFlushStall_state_EN)
	  globalFlushStall_state <= `BSV_ASSIGNMENT_DELAY
	      globalFlushStall_state_D_IN;
	if (mdu_b_EN) mdu_b <= `BSV_ASSIGNMENT_DELAY mdu_b_D_IN;
	if (mdu_fsm_start_reg_EN)
	  mdu_fsm_start_reg <= `BSV_ASSIGNMENT_DELAY mdu_fsm_start_reg_D_IN;
	if (mdu_fsm_start_reg_1_EN)
	  mdu_fsm_start_reg_1 <= `BSV_ASSIGNMENT_DELAY
	      mdu_fsm_start_reg_1_D_IN;
	if (mdu_fsm_state_can_overlap_EN)
	  mdu_fsm_state_can_overlap <= `BSV_ASSIGNMENT_DELAY
	      mdu_fsm_state_can_overlap_D_IN;
	if (mdu_fsm_state_fired_EN)
	  mdu_fsm_state_fired <= `BSV_ASSIGNMENT_DELAY
	      mdu_fsm_state_fired_D_IN;
	if (mdu_fsm_state_mkFSMstate_EN)
	  mdu_fsm_state_mkFSMstate <= `BSV_ASSIGNMENT_DELAY
	      mdu_fsm_state_mkFSMstate_D_IN;
	if (mdu_op_EN) mdu_op <= `BSV_ASSIGNMENT_DELAY mdu_op_D_IN;
	if (mdu_res_EN) mdu_res <= `BSV_ASSIGNMENT_DELAY mdu_res_D_IN;
	if (mdu_running_EN)
	  mdu_running <= `BSV_ASSIGNMENT_DELAY mdu_running_D_IN;
	if (mdu_rv1_EN) mdu_rv1 <= `BSV_ASSIGNMENT_DELAY mdu_rv1_D_IN;
	if (mdu_rv2_EN) mdu_rv2 <= `BSV_ASSIGNMENT_DELAY mdu_rv2_D_IN;
	if (mdu_sign_EN) mdu_sign <= `BSV_ASSIGNMENT_DELAY mdu_sign_D_IN;
	if (mu_barrier_EN)
	  mu_barrier <= `BSV_ASSIGNMENT_DELAY mu_barrier_D_IN;
	if (mu_reqs_rv_EN)
	  mu_reqs_rv <= `BSV_ASSIGNMENT_DELAY mu_reqs_rv_D_IN;
	if (mu_storeQueue_rv_EN)
	  mu_storeQueue_rv <= `BSV_ASSIGNMENT_DELAY mu_storeQueue_rv_D_IN;
	if (npc_register_EN)
	  npc_register <= `BSV_ASSIGNMENT_DELAY npc_register_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    busTracker_rv = 6'h2A;
    crs_crf_0_register = 32'hAAAAAAAA;
    crs_crf_10_register = 32'hAAAAAAAA;
    crs_crf_11_register = 32'hAAAAAAAA;
    crs_crf_12_register = 32'hAAAAAAAA;
    crs_crf_13_register = 32'hAAAAAAAA;
    crs_crf_14_register = 32'hAAAAAAAA;
    crs_crf_15_register = 32'hAAAAAAAA;
    crs_crf_16_register = 32'hAAAAAAAA;
    crs_crf_17_register = 32'hAAAAAAAA;
    crs_crf_18_register = 32'hAAAAAAAA;
    crs_crf_19_register = 32'hAAAAAAAA;
    crs_crf_1_register = 32'hAAAAAAAA;
    crs_crf_20_register = 32'hAAAAAAAA;
    crs_crf_21_register = 32'hAAAAAAAA;
    crs_crf_22_register = 32'hAAAAAAAA;
    crs_crf_23_register = 32'hAAAAAAAA;
    crs_crf_24_register = 32'hAAAAAAAA;
    crs_crf_25_register = 32'hAAAAAAAA;
    crs_crf_26_register = 32'hAAAAAAAA;
    crs_crf_27_register = 32'hAAAAAAAA;
    crs_crf_28_register = 32'hAAAAAAAA;
    crs_crf_29_register = 32'hAAAAAAAA;
    crs_crf_2_register = 32'hAAAAAAAA;
    crs_crf_30_register = 32'hAAAAAAAA;
    crs_crf_31_register = 32'hAAAAAAAA;
    crs_crf_3_register = 32'hAAAAAAAA;
    crs_crf_4_register = 32'hAAAAAAAA;
    crs_crf_5_register = 32'hAAAAAAAA;
    crs_crf_6_register = 32'hAAAAAAAA;
    crs_crf_7_register = 32'hAAAAAAAA;
    crs_crf_8_register = 32'hAAAAAAAA;
    crs_crf_9_register = 32'hAAAAAAAA;
    decode_fetchedLine = 128'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    decode_inflightCounter = 4'hA;
    decode_sc_ready_0_register = 1'h0;
    decode_sc_ready_10_register = 1'h0;
    decode_sc_ready_11_register = 1'h0;
    decode_sc_ready_12_register = 1'h0;
    decode_sc_ready_13_register = 1'h0;
    decode_sc_ready_14_register = 1'h0;
    decode_sc_ready_15_register = 1'h0;
    decode_sc_ready_16_register = 1'h0;
    decode_sc_ready_17_register = 1'h0;
    decode_sc_ready_18_register = 1'h0;
    decode_sc_ready_19_register = 1'h0;
    decode_sc_ready_1_register = 1'h0;
    decode_sc_ready_20_register = 1'h0;
    decode_sc_ready_21_register = 1'h0;
    decode_sc_ready_22_register = 1'h0;
    decode_sc_ready_23_register = 1'h0;
    decode_sc_ready_24_register = 1'h0;
    decode_sc_ready_25_register = 1'h0;
    decode_sc_ready_26_register = 1'h0;
    decode_sc_ready_27_register = 1'h0;
    decode_sc_ready_28_register = 1'h0;
    decode_sc_ready_29_register = 1'h0;
    decode_sc_ready_2_register = 1'h0;
    decode_sc_ready_30_register = 1'h0;
    decode_sc_ready_31_register = 1'h0;
    decode_sc_ready_3_register = 1'h0;
    decode_sc_ready_4_register = 1'h0;
    decode_sc_ready_5_register = 1'h0;
    decode_sc_ready_6_register = 1'h0;
    decode_sc_ready_7_register = 1'h0;
    decode_sc_ready_8_register = 1'h0;
    decode_sc_ready_9_register = 1'h0;
    epoch_register = 2'h2;
    exceptions_busy = 1'h0;
    exceptions_erReg = 4'hA;
    fetch_epoch_register = 2'h2;
    fetch_lastImemAddr = 28'hAAAAAAA;
    fetch_pc_register = 32'hAAAAAAAA;
    fromDmem_rv = 33'h0AAAAAAAA;
    fromImem_rv = 129'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    fsm_state = 2'h2;
    globalFlushStall_state = 1'h0;
    mdu_b = 32'hAAAAAAAA;
    mdu_fsm_start_reg = 1'h0;
    mdu_fsm_start_reg_1 = 1'h0;
    mdu_fsm_state_can_overlap = 1'h0;
    mdu_fsm_state_fired = 1'h0;
    mdu_fsm_state_mkFSMstate = 4'hA;
    mdu_op = 2'h2;
    mdu_res = 32'hAAAAAAAA;
    mdu_running = 1'h0;
    mdu_rv1 = 32'hAAAAAAAA;
    mdu_rv2 = 32'hAAAAAAAA;
    mdu_sign = 1'h0;
    mu_barrier = 1'h0;
    mu_reqs_rv = 130'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    mu_storeQueue_rv = 67'h2AAAAAAAAAAAAAAAA;
    npc_register = 32'hAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mdu_fsm_action_l47c20 &&
	  (mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d582 ||
	   WILL_FIRE_RL_mdu_fsm_action_l56c19 ||
	   mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d609 ||
	   WILL_FIRE_RL_mdu_fsm_action_l61c25 ||
	   WILL_FIRE_RL_mdu_fsm_action_l63c19 ||
	   WILL_FIRE_RL_mdu_fsm_action_l64c21 ||
	   WILL_FIRE_RL_mdu_fsm_action_l66c20 ||
	   WILL_FIRE_RL_mdu_fsm_action_l71c17))
	$display("Error: \"hw/core/MulDivUnit.bsv\", line 47, column 20: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_mdu_fsm_action_l47c20] and\n  [RL_mdu_fsm_action_l55c21, RL_mdu_fsm_action_l56c19,\n  RL_mdu_fsm_action_l60c25, RL_mdu_fsm_action_l61c25,\n  RL_mdu_fsm_action_l63c19, RL_mdu_fsm_action_l64c21,\n  RL_mdu_fsm_action_l66c20, RL_mdu_fsm_action_l71c17] ) fired in the same\n  clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d582 &&
	  (WILL_FIRE_RL_mdu_fsm_action_l56c19 ||
	   mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d609 ||
	   WILL_FIRE_RL_mdu_fsm_action_l61c25 ||
	   WILL_FIRE_RL_mdu_fsm_action_l63c19 ||
	   WILL_FIRE_RL_mdu_fsm_action_l64c21 ||
	   WILL_FIRE_RL_mdu_fsm_action_l66c20 ||
	   WILL_FIRE_RL_mdu_fsm_action_l71c17))
	$display("Error: \"hw/core/MulDivUnit.bsv\", line 55, column 21: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_mdu_fsm_action_l55c21] and\n  [RL_mdu_fsm_action_l56c19, RL_mdu_fsm_action_l60c25,\n  RL_mdu_fsm_action_l61c25, RL_mdu_fsm_action_l63c19,\n  RL_mdu_fsm_action_l64c21, RL_mdu_fsm_action_l66c20,\n  RL_mdu_fsm_action_l71c17] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mdu_fsm_action_l56c19 &&
	  (mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d609 ||
	   WILL_FIRE_RL_mdu_fsm_action_l61c25 ||
	   WILL_FIRE_RL_mdu_fsm_action_l63c19 ||
	   WILL_FIRE_RL_mdu_fsm_action_l64c21 ||
	   WILL_FIRE_RL_mdu_fsm_action_l66c20 ||
	   WILL_FIRE_RL_mdu_fsm_action_l71c17))
	$display("Error: \"hw/core/MulDivUnit.bsv\", line 56, column 19: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_mdu_fsm_action_l56c19] and\n  [RL_mdu_fsm_action_l60c25, RL_mdu_fsm_action_l61c25,\n  RL_mdu_fsm_action_l63c19, RL_mdu_fsm_action_l64c21,\n  RL_mdu_fsm_action_l66c20, RL_mdu_fsm_action_l71c17] ) fired in the same\n  clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (mdu_running_40_AND_NOT_mdu_op_41_EQ_0_42_59_AN_ETC___d609 &&
	  (WILL_FIRE_RL_mdu_fsm_action_l61c25 ||
	   WILL_FIRE_RL_mdu_fsm_action_l63c19 ||
	   WILL_FIRE_RL_mdu_fsm_action_l64c21 ||
	   WILL_FIRE_RL_mdu_fsm_action_l66c20 ||
	   WILL_FIRE_RL_mdu_fsm_action_l71c17))
	$display("Error: \"hw/core/MulDivUnit.bsv\", line 60, column 25: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_mdu_fsm_action_l60c25] and\n  [RL_mdu_fsm_action_l61c25, RL_mdu_fsm_action_l63c19,\n  RL_mdu_fsm_action_l64c21, RL_mdu_fsm_action_l66c20,\n  RL_mdu_fsm_action_l71c17] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mdu_fsm_action_l61c25 &&
	  (WILL_FIRE_RL_mdu_fsm_action_l63c19 ||
	   WILL_FIRE_RL_mdu_fsm_action_l64c21 ||
	   WILL_FIRE_RL_mdu_fsm_action_l66c20 ||
	   WILL_FIRE_RL_mdu_fsm_action_l71c17))
	$display("Error: \"hw/core/MulDivUnit.bsv\", line 61, column 25: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_mdu_fsm_action_l61c25] and\n  [RL_mdu_fsm_action_l63c19, RL_mdu_fsm_action_l64c21,\n  RL_mdu_fsm_action_l66c20, RL_mdu_fsm_action_l71c17] ) fired in the same\n  clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mdu_fsm_action_l63c19 &&
	  (WILL_FIRE_RL_mdu_fsm_action_l64c21 ||
	   WILL_FIRE_RL_mdu_fsm_action_l66c20 ||
	   WILL_FIRE_RL_mdu_fsm_action_l71c17))
	$display("Error: \"hw/core/MulDivUnit.bsv\", line 63, column 19: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_mdu_fsm_action_l63c19] and\n  [RL_mdu_fsm_action_l64c21, RL_mdu_fsm_action_l66c20,\n  RL_mdu_fsm_action_l71c17] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mdu_fsm_action_l66c20 &&
	  WILL_FIRE_RL_mdu_fsm_action_l71c17)
	$display("Error: \"hw/core/MulDivUnit.bsv\", line 66, column 20: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_mdu_fsm_action_l66c20] and\n  [RL_mdu_fsm_action_l71c17] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_mdu_fsm_action_l64c21 &&
	  (WILL_FIRE_RL_mdu_fsm_action_l66c20 ||
	   WILL_FIRE_RL_mdu_fsm_action_l71c17))
	$display("Error: \"hw/core/MulDivUnit.bsv\", line 64, column 21: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_mdu_fsm_action_l64c21] and\n  [RL_mdu_fsm_action_l66c20, RL_mdu_fsm_action_l71c17] ) fired in the same\n  clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_execute_execute &&
	  IF_IF_crs_crf_0_readBeforeLaterWrites_0_read___ETC___d1689 ==
	  3'd0 &&
	  d2e_D_OUT[101:99] == 3'd2 &&
	  d2e_D_OUT[104:102] != 3'b100 &&
	  d2e_D_OUT[104:102] != 3'b001)
	$write("malformed ALU instruction? ");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_execute_execute &&
	  IF_IF_crs_crf_0_readBeforeLaterWrites_0_read___ETC___d1689 ==
	  3'd0 &&
	  d2e_D_OUT[101:99] == 3'd2 &&
	  d2e_D_OUT[104:102] != 3'b100 &&
	  d2e_D_OUT[104:102] != 3'b001)
	$write("'h%h", d2e_D_OUT[133:102]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_execute_execute &&
	  IF_IF_crs_crf_0_readBeforeLaterWrites_0_read___ETC___d1689 ==
	  3'd0 &&
	  d2e_D_OUT[101:99] == 3'd2 &&
	  d2e_D_OUT[104:102] != 3'b100 &&
	  d2e_D_OUT[104:102] != 3'b001)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_commit_commit &&
	  (e2w_D_OUT[2:0] == 3'd0 &&
	   e2w_first__134_BITS_68_TO_67_159_EQ_IF_epoch_r_ETC___d2160 &&
	   IF_e2w_first__134_BITS_5_TO_3_138_EQ_0_139_THE_ETC___d2201 ||
	   e2w_D_OUT[2:0] == 3'd1 ||
	   e2w_D_OUT[2:0] == 3'd2 ||
	   e2w_D_OUT[2:0] == 3'd3))
	$fdisplay(32'h80000002,
		  "Instruction exception due to ECAUSE=%04x",
		  IF_e2w_first__134_BITS_2_TO_0_135_EQ_0_136_AND_ETC___d2503);
  end
  // synopsys translate_on
endmodule  // mkVROOM

